

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jun 20 19:59:53 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196                           
   197                           	psect	idataCOMMON
   198  06F7                     __pidataCOMMON:
   199                           
   200                           ;initializer for _itemp
   201  06F7  3414               	retlw	20
   202                           
   203                           	psect	idataBANK0
   204  0578                     __pidataBANK0:
   205                           
   206                           ;initializer for _ihumi
   207  0578  345F               	retlw	95
   208                           
   209                           ;initializer for _idea_temp
   210  0579  3449               	retlw	73
   211  057A  3444               	retlw	68
   212  057B  3454               	retlw	84
   213  057C  3465               	retlw	101
   214  057D  346D               	retlw	109
   215  057E  3470               	retlw	112
   216  057F  3420               	retlw	32
   217  0580  343D               	retlw	61
   218  0581  3420               	retlw	32
   219  0582  3432               	retlw	50
   220  0583  3430               	retlw	48
   221  0584  342E               	retlw	46
   222  0585  3430               	retlw	48
   223  0586  3420               	retlw	32
   224  0587  3443               	retlw	67
   225  0588  3400               	retlw	0
   226                           
   227                           ;initializer for _humi
   228  0589  3452               	retlw	82
   229  058A  3448               	retlw	72
   230  058B  3420               	retlw	32
   231  058C  3420               	retlw	32
   232  058D  3420               	retlw	32
   233  058E  343D               	retlw	61
   234  058F  3420               	retlw	32
   235  0590  3430               	retlw	48
   236  0591  3430               	retlw	48
   237  0592  342E               	retlw	46
   238  0593  3430               	retlw	48
   239  0594  3420               	retlw	32
   240  0595  3425               	retlw	37
   241  0596  3400               	retlw	0
   242                           
   243                           ;initializer for _temp
   244  0597  3454               	retlw	84
   245  0598  3465               	retlw	101
   246  0599  346D               	retlw	109
   247  059A  3470               	retlw	112
   248  059B  3420               	retlw	32
   249  059C  343D               	retlw	61
   250  059D  3420               	retlw	32
   251  059E  3430               	retlw	48
   252  059F  3430               	retlw	48
   253  05A0  342E               	retlw	46
   254  05A1  3430               	retlw	48
   255  05A2  3420               	retlw	32
   256  05A3  3443               	retlw	67
   257  05A4  3400               	retlw	0
   258                           
   259                           	psect	idataBANK1
   260  06D1                     __pidataBANK1:
   261                           
   262                           ;initializer for _idea_humi
   263  06D1  3449               	retlw	73
   264  06D2  3444               	retlw	68
   265  06D3  3452               	retlw	82
   266  06D4  3448               	retlw	72
   267  06D5  3420               	retlw	32
   268  06D6  3420               	retlw	32
   269  06D7  3420               	retlw	32
   270  06D8  343D               	retlw	61
   271  06D9  3420               	retlw	32
   272  06DA  3438               	retlw	56
   273  06DB  3435               	retlw	53
   274  06DC  342E               	retlw	46
   275  06DD  3430               	retlw	48
   276  06DE  3420               	retlw	32
   277  06DF  3425               	retlw	37
   278  06E0  3400               	retlw	0
   279  001E                     _ADRESH	set	30
   280  001F                     _ADCON0	set	31
   281  0015                     _CCPR1L	set	21
   282  0059                     _INTF	set	89
   283  0042                     _RD2	set	66
   284  005F                     _GIE	set	95
   285  005C                     _INTE	set	92
   286  00FA                     _GO_DONE	set	250
   287  00FD                     _CHS2	set	253
   288  00FC                     _CHS1	set	252
   289  00FB                     _CHS0	set	251
   290  00BD                     _CCP1X	set	189
   291  00BC                     _CCP1Y	set	188
   292  0092                     _TMR2ON	set	146
   293  0091                     _T2CKPS1	set	145
   294  0090                     _T2CKPS0	set	144
   295  00BB                     _CCP1M3	set	187
   296  00BA                     _CCP1M2	set	186
   297  0034                     _RB4	set	52
   298  0043                     _RD3	set	67
   299  0041                     _RD1	set	65
   300  0047                     _RD7	set	71
   301  0046                     _RD6	set	70
   302  0045                     _RD5	set	69
   303  0044                     _RD4	set	68
   304  0088                     _TRISD	set	136
   305  009E                     _ADRESL	set	158
   306  009F                     _ADCON1	set	159
   307  0092                     _PR2	set	146
   308  040E                     _INTEDG	set	1038
   309  043A                     _TRISC2	set	1082
   310  0434                     _TRISB4	set	1076
   311                           
   312                           	psect	strings
   313  0600                     __pstrings:
   314  0600                     stringtab:
   315  0600                     __stringtab:
   316                           
   317                           ;	String table - string pointers are 1 byte each
   318  0600  1BFF               	btfsc	btemp+1,7
   319  0601  2E0A               	ljmp	stringcode
   320  0602  1383               	bcf	3,7
   321  0603  187F               	btfsc	btemp+1,0
   322  0604  1783               	bsf	3,7
   323  0605  0800               	movf	0,w
   324  0606  0A84               	incf	4,f
   325  0607  1903               	skipnz
   326  0608  0AFF               	incf	btemp+1,f
   327  0609  0008               	return
   328  060A                     stringcode:
   329  060A                     stringdir:
   330  060A  3006               	movlw	high stringdir
   331  060B  008A               	movwf	10
   332  060C  0804               	movf	4,w
   333  060D  0A84               	incf	4,f
   334  060E  0782               	addwf	2,f
   335  060F                     __stringbase:
   336  060F  3400               	retlw	0
   337  0610                     __end_of__stringtab:
   338  0610                     STR_2:
   339  0610  3448               	retlw	72	;'H'
   340  0611  3461               	retlw	97	;'a'
   341  0612  346E               	retlw	110	;'n'
   342  0613  3464               	retlw	100	;'d'
   343  0614  3468               	retlw	104	;'h'
   344  0615  3465               	retlw	101	;'e'
   345  0616  346C               	retlw	108	;'l'
   346  0617  3464               	retlw	100	;'d'
   347  0618  3420               	retlw	32	;' '
   348  0619  3450               	retlw	80	;'P'
   349  061A  3457               	retlw	87	;'W'
   350  061B  344D               	retlw	77	;'M'
   351  061C  3400               	retlw	0
   352  061D                     STR_1:
   353  061D  3445               	retlw	69	;'E'
   354  061E  3472               	retlw	114	;'r'
   355  061F  3472               	retlw	114	;'r'
   356  0620  346F               	retlw	111	;'o'
   357  0621  3472               	retlw	114	;'r'
   358  0622  3400               	retlw	0
   359                           
   360                           	psect	cinit
   361  0013                     start_initialization:	
   362                           ; #config settings
   363                           
   364  0013                     __initialization:
   365                           
   366                           ; Initialize objects allocated to BANK1
   367  0013  1383               	bcf	3,7	;select IRP bank0
   368  0014  30B0               	movlw	low (__pdataBANK1+16)
   369  0015  00FD               	movwf	btemp+-1
   370  0016  3006               	movlw	high __pidataBANK1
   371  0017  00FE               	movwf	btemp
   372  0018  30D1               	movlw	low __pidataBANK1
   373  0019  00FF               	movwf	btemp+1
   374  001A  30A0               	movlw	low __pdataBANK1
   375  001B  0084               	movwf	4
   376  001C  120A  118A  26B1  120A  118A  	fcall	init_ram0
   377                           
   378                           ; Initialize objects allocated to BANK0
   379  0021  304D               	movlw	low (__pdataBANK0+45)
   380  0022  00FD               	movwf	btemp+-1
   381  0023  3005               	movlw	high __pidataBANK0
   382  0024  00FE               	movwf	btemp
   383  0025  3078               	movlw	low __pidataBANK0
   384  0026  00FF               	movwf	btemp+1
   385  0027  3020               	movlw	low __pdataBANK0
   386  0028  0084               	movwf	4
   387  0029  120A  118A  26B1  120A  118A  	fcall	init_ram0
   388                           
   389                           ; Initialize objects allocated to COMMON
   390  002E  120A  118A  26F7  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   391  0033  00F9               	movwf	__pdataCOMMON& (0+127)
   392                           
   393                           ; Clear objects allocated to BANK0
   394  0034  01E8               	clrf	__pbssBANK0& (0+127)
   395  0035  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   396  0036  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   397  0037  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   398  0038  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   399  0039  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   400  003A                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403  003A                     __end_of__initialization:
   404  003A  0183               	clrf	3
   405  003B  120A  118A  283E   	ljmp	_main	;jump to C main() function
   406                           
   407                           	psect	dataCOMMON
   408  0079                     __pdataCOMMON:
   409  0079                     _itemp:
   410  0079                     	ds	1
   411                           
   412                           	psect	bssBANK0
   413  0068                     __pbssBANK0:
   414  0068                     _status:
   415  0068                     	ds	1
   416  0069                     _check_sum:
   417  0069                     	ds	1
   418  006A                     _rh_byte2:
   419  006A                     	ds	1
   420  006B                     _rh_byte1:
   421  006B                     	ds	1
   422  006C                     _t_byte2:
   423  006C                     	ds	1
   424  006D                     _t_byte1:
   425  006D                     	ds	1
   426                           
   427                           	psect	dataBANK0
   428  0020                     __pdataBANK0:
   429  0020                     _ihumi:
   430  0020                     	ds	1
   431  0021                     _idea_temp:
   432  0021                     	ds	16
   433  0031                     _humi:
   434  0031                     	ds	14
   435  003F                     _temp:
   436  003F                     	ds	14
   437                           
   438                           	psect	dataBANK1
   439  00A0                     __pdataBANK1:
   440  00A0                     _idea_humi:
   441  00A0                     	ds	16
   442                           
   443                           	psect	inittext
   444  06AD                     init_fetch0:	
   445                           ;	Called with low address in FSR and high address in W
   446                           
   447  06AD  087E               	movf	btemp,w
   448  06AE  008A               	movwf	10
   449  06AF  087F               	movf	btemp+1,w
   450  06B0  0082               	movwf	2
   451  06B1                     init_ram0:	
   452                           ;Called with:
   453                           ;	high address of idata address in btemp 
   454                           ;	low address of idata address in btemp+1 
   455                           ;	low address of data in FSR
   456                           ;	high address + 1 of data in btemp-1
   457                           
   458  06B1  120A  118A  26AD  120A  118A  	fcall	init_fetch0
   459  06B6  0080               	movwf	0
   460  06B7  0A84               	incf	4,f
   461  06B8  0804               	movf	4,w
   462  06B9  067D               	xorwf	btemp+-1,w
   463  06BA  1903               	btfsc	3,2
   464  06BB  3400               	retlw	0
   465  06BC  0AFF               	incf	btemp+1,f
   466  06BD  1903               	btfsc	3,2
   467  06BE  0AFE               	incf	btemp,f
   468  06BF  2EB1               	goto	init_ram0
   469                           
   470                           	psect	cstackCOMMON
   471  0070                     __pcstackCOMMON:
   472  0070                     ?_DhtUpdateData:
   473  0070                     ?_Lcd_SetBit:	
   474                           ; 1 bit 
   475                           
   476  0070                     ?_Lcd_Cmd:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_Lcd_Clear:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_Lcd_Start:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_Lcd_Print_Char:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_DhtStartSignal:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_DhtCheckResponse:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_DhtReadData:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_configPWM:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_setPWM:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_ADC_Init:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_ISR:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_main:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?i1___awmod:	
   513                           ; 2 bytes @ 0x0
   514                           
   515  0070                     i1___awmod@divisor:	
   516                           ; 2 bytes @ 0x0
   517                           
   518                           
   519                           ; 2 bytes @ 0x0
   520  0070                     	ds	2
   521  0072                     i1___awmod@dividend:
   522                           
   523                           ; 2 bytes @ 0x2
   524  0072                     	ds	2
   525  0074                     ??i1___awmod:
   526  0074                     i1___awmod@counter:	
   527                           ; 1 bytes @ 0x4
   528                           
   529                           
   530                           ; 1 bytes @ 0x4
   531  0074                     	ds	1
   532  0075                     i1___awmod@sign:
   533                           
   534                           ; 1 bytes @ 0x5
   535  0075                     	ds	1
   536  0076                     ??_ISR:
   537                           
   538                           ; 1 bytes @ 0x6
   539  0076                     	ds	3
   540                           
   541                           	psect	cstackBANK0
   542  004D                     __pcstackBANK0:
   543  004D                     ??_Lcd_SetBit:
   544  004D                     ??_DhtStartSignal:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  004D                     ??_DhtCheckResponse:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  004D                     ??_DhtReadData:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  004D                     ??_configPWM:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  004D                     ??_setPWM:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  004D                     ??_ADC_Init:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  004D                     ?___bmul:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  004D                     ?_ADC_Read:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  004D                     ?___awmod:	
   569                           ; 2 bytes @ 0x0
   570                           
   571  004D                     Lcd_SetBit@data_bit:	
   572                           ; 2 bytes @ 0x0
   573                           
   574  004D                     ___bmul@multiplicand:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  004D                     ADC_Read@ADC_channel:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  004D                     ___awmod@divisor:	
   581                           ; 2 bytes @ 0x0
   582                           
   583                           
   584                           ; 2 bytes @ 0x0
   585  004D                     	ds	1
   586  004E                     ??_Lcd_Cmd:
   587  004E                     ??_Lcd_Print_Char:	
   588                           ; 1 bytes @ 0x1
   589                           
   590  004E                     ??___bmul:	
   591                           ; 1 bytes @ 0x1
   592                           
   593  004E                     setPWM@DC:	
   594                           ; 1 bytes @ 0x1
   595                           
   596  004E                     ___bmul@product:	
   597                           ; 1 bytes @ 0x1
   598                           
   599                           
   600                           ; 1 bytes @ 0x1
   601  004E                     	ds	1
   602  004F                     ??_ADC_Read:
   603  004F                     DhtReadData@i:	
   604                           ; 1 bytes @ 0x2
   605                           
   606  004F                     ___bmul@multiplier:	
   607                           ; 1 bytes @ 0x2
   608                           
   609  004F                     ___awmod@dividend:	
   610                           ; 1 bytes @ 0x2
   611                           
   612                           
   613                           ; 2 bytes @ 0x2
   614  004F                     	ds	1
   615  0050                     ?_setPumpValue:
   616  0050                     Lcd_Cmd@a:	
   617                           ; 1 bytes @ 0x3
   618                           
   619  0050                     DhtReadData@data:	
   620                           ; 1 bytes @ 0x3
   621                           
   622  0050                     setPumpValue@id_rh:	
   623                           ; 1 bytes @ 0x3
   624                           
   625                           
   626                           ; 1 bytes @ 0x3
   627  0050                     	ds	1
   628  0051                     ??_setPumpValue:
   629  0051                     ??_Lcd_Clear:	
   630                           ; 1 bytes @ 0x4
   631                           
   632  0051                     ?_Lcd_Set_Cursor:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0051                     ??_Lcd_Start:	
   636                           ; 1 bytes @ 0x4
   637                           
   638  0051                     ??___awmod:	
   639                           ; 1 bytes @ 0x4
   640                           
   641  0051                     Lcd_Set_Cursor@b:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0051                     Lcd_Print_Char@Lower_Nibble:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0051                     setPumpValue@r_rh:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0051                     ___awmod@counter:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0051                     ADC_Read@result:	
   654                           ; 1 bytes @ 0x4
   655                           
   656                           
   657                           ; 2 bytes @ 0x4
   658  0051                     	ds	1
   659  0052                     ??_Lcd_Set_Cursor:
   660  0052                     Lcd_Print_Char@Upper_Nibble:	
   661                           ; 1 bytes @ 0x5
   662                           
   663  0052                     setPumpValue@delta:	
   664                           ; 1 bytes @ 0x5
   665                           
   666  0052                     ___awmod@sign:	
   667                           ; 1 bytes @ 0x5
   668                           
   669                           
   670                           ; 1 bytes @ 0x5
   671  0052                     	ds	1
   672  0053                     ?___awdiv:
   673  0053                     Lcd_Set_Cursor@a:	
   674                           ; 2 bytes @ 0x6
   675                           
   676  0053                     Lcd_Print_Char@data:	
   677                           ; 1 bytes @ 0x6
   678                           
   679  0053                     ___awdiv@divisor:	
   680                           ; 1 bytes @ 0x6
   681                           
   682                           
   683                           ; 2 bytes @ 0x6
   684  0053                     	ds	1
   685  0054                     ?_Lcd_Print_String:
   686  0054                     Lcd_Set_Cursor@z:	
   687                           ; 1 bytes @ 0x7
   688                           
   689  0054                     Lcd_Print_String@a:	
   690                           ; 1 bytes @ 0x7
   691                           
   692                           
   693                           ; 2 bytes @ 0x7
   694  0054                     	ds	1
   695  0055                     Lcd_Set_Cursor@y:
   696  0055                     ___awdiv@dividend:	
   697                           ; 1 bytes @ 0x8
   698                           
   699                           
   700                           ; 2 bytes @ 0x8
   701  0055                     	ds	1
   702  0056                     ??_Lcd_Print_String:
   703  0056                     Lcd_Set_Cursor@temp:	
   704                           ; 1 bytes @ 0x9
   705                           
   706                           
   707                           ; 1 bytes @ 0x9
   708  0056                     	ds	1
   709  0057                     ??___awdiv:
   710  0057                     ___awdiv@counter:	
   711                           ; 1 bytes @ 0xA
   712                           
   713                           
   714                           ; 1 bytes @ 0xA
   715  0057                     	ds	1
   716  0058                     ___awdiv@sign:
   717                           
   718                           ; 1 bytes @ 0xB
   719  0058                     	ds	1
   720  0059                     Lcd_Print_String@i:
   721  0059                     ___awdiv@quotient:	
   722                           ; 2 bytes @ 0xC
   723                           
   724                           
   725                           ; 2 bytes @ 0xC
   726  0059                     	ds	2
   727  005B                     ??_DhtUpdateData:
   728                           
   729                           ; 1 bytes @ 0xE
   730  005B                     	ds	10
   731  0065                     ??_main:
   732                           
   733                           ; 1 bytes @ 0x18
   734  0065                     	ds	3
   735                           
   736                           	psect	maintext
   737  003E                     __pmaintext:	
   738 ;;
   739 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   740 ;;
   741 ;; *************** function _main *****************
   742 ;; Defined at:
   743 ;;		line 28 in file "main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  2  181[None  ] int 
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : B00/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          0       3       0       0       0
   760 ;;      Totals:         0       3       0       0       0
   761 ;;Total ram usage:        3 bytes
   762 ;; Hardware stack levels required when called:    5
   763 ;; This function calls:
   764 ;;		_ADC_Init
   765 ;;		_ADC_Read
   766 ;;		_DhtUpdateData
   767 ;;		_Lcd_Clear
   768 ;;		_Lcd_Print_String
   769 ;;		_Lcd_Set_Cursor
   770 ;;		_Lcd_Start
   771 ;;		___awdiv
   772 ;;		_configPWM
   773 ;;		_setPWM
   774 ;;		_setPumpValue
   775 ;; This function is called by:
   776 ;;		Startup code after reset
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _main
   782  003E                     _main:
   783  003E                     l1491:	
   784                           ;incstack = 0
   785                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   786                           
   787                           
   788                           ;main.c: 32:     INTEDG = 1;
   789  003E  1683               	bsf	3,5	;RP0=1, select bank1
   790  003F  1303               	bcf	3,6	;RP1=0, select bank1
   791  0040  1701               	bsf	1,6	;volatile
   792                           
   793                           ;main.c: 33:     INTE = 1;
   794  0041  160B               	bsf	11,4	;volatile
   795                           
   796                           ;main.c: 34:     GIE = 1;
   797  0042  178B               	bsf	11,7	;volatile
   798  0043                     l1493:
   799                           
   800                           ;main.c: 38:     TRISD = 0x00;
   801  0043  0188               	clrf	8	;volatile
   802  0044                     l1495:
   803                           
   804                           ;main.c: 39:     RD2 = 0;
   805  0044  1283               	bcf	3,5	;RP0=0, select bank0
   806  0045  1303               	bcf	3,6	;RP1=0, select bank0
   807  0046  1108               	bcf	8,2	;volatile
   808  0047                     l1497:
   809                           
   810                           ;main.c: 40:     Lcd_Start();
   811  0047  120A  118A  228E  120A  118A  	fcall	_Lcd_Start
   812  004C                     l1499:
   813                           
   814                           ;main.c: 42:     configPWM();
   815  004C  120A  118A  26C0  120A  118A  	fcall	_configPWM
   816  0051                     l1501:
   817                           
   818                           ;main.c: 44:     ADC_Init();
   819  0051  120A  118A  26EE  120A  118A  	fcall	_ADC_Init
   820  0056                     l1503:
   821                           
   822                           ;main.c: 46:     {;main.c: 47:         Lcd_Clear();
   823  0056  120A  118A  26E1  120A  118A  	fcall	_Lcd_Clear
   824  005B                     l1505:
   825                           
   826                           ;main.c: 48:         if(status == 0)
   827  005B  1283               	bcf	3,5	;RP0=0, select bank0
   828  005C  1303               	bcf	3,6	;RP1=0, select bank0
   829  005D  0868               	movf	_status,w
   830  005E  1D03               	btfss	3,2
   831  005F  2861               	goto	u1341
   832  0060  2862               	goto	u1340
   833  0061                     u1341:
   834  0061  28A2               	goto	l1517
   835  0062                     u1340:
   836  0062                     l1507:
   837                           
   838                           ;main.c: 49:         {;main.c: 50:             if(DhtUpdateData())
   839  0062  120A  118A  2133  120A  118A  	fcall	_DhtUpdateData
   840  0067  1C03               	btfss	3,0
   841  0068  286A               	goto	u1351
   842  0069  286B               	goto	u1350
   843  006A                     u1351:
   844  006A  2896               	goto	l1515
   845  006B                     u1350:
   846  006B                     l1509:
   847                           
   848                           ;main.c: 51:             {;main.c: 52:                 Lcd_Set_Cursor(1,1);
   849  006B  1283               	bcf	3,5	;RP0=0, select bank0
   850  006C  1303               	bcf	3,6	;RP1=0, select bank0
   851  006D  01D1               	clrf	Lcd_Set_Cursor@b
   852  006E  0AD1               	incf	Lcd_Set_Cursor@b,f
   853  006F  3001               	movlw	1
   854  0070  120A  118A  240E  120A  118A  	fcall	_Lcd_Set_Cursor
   855  0075                     l1511:
   856                           
   857                           ;main.c: 53:                 Lcd_Print_String(temp);
   858  0075  303F               	movlw	(low (_temp| 0))& (0+255)
   859  0076  1283               	bcf	3,5	;RP0=0, select bank0
   860  0077  1303               	bcf	3,6	;RP1=0, select bank0
   861  0078  00D4               	movwf	Lcd_Print_String@a
   862  0079  3000               	movlw	0
   863  007A  00D5               	movwf	Lcd_Print_String@a+1
   864  007B  120A  118A  24B1  120A  118A  	fcall	_Lcd_Print_String
   865  0080                     l1513:
   866                           
   867                           ;main.c: 54:                 Lcd_Set_Cursor(2,1);
   868  0080  1283               	bcf	3,5	;RP0=0, select bank0
   869  0081  1303               	bcf	3,6	;RP1=0, select bank0
   870  0082  01D1               	clrf	Lcd_Set_Cursor@b
   871  0083  0AD1               	incf	Lcd_Set_Cursor@b,f
   872  0084  3002               	movlw	2
   873  0085  120A  118A  240E  120A  118A  	fcall	_Lcd_Set_Cursor
   874                           
   875                           ;main.c: 55:                 Lcd_Print_String(humi);
   876  008A  3031               	movlw	(low (_humi| 0))& (0+255)
   877  008B  1283               	bcf	3,5	;RP0=0, select bank0
   878  008C  1303               	bcf	3,6	;RP1=0, select bank0
   879  008D  00D4               	movwf	Lcd_Print_String@a
   880  008E  3000               	movlw	0
   881  008F  00D5               	movwf	Lcd_Print_String@a+1
   882  0090  120A  118A  24B1  120A  118A  	fcall	_Lcd_Print_String
   883                           
   884                           ;main.c: 56:             }
   885  0095  290E               	goto	l1533
   886  0096                     l1515:
   887                           
   888                           ;main.c: 58:             {;main.c: 59:                 Lcd_Print_String("Error");
   889  0096  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   890  0097  1283               	bcf	3,5	;RP0=0, select bank0
   891  0098  1303               	bcf	3,6	;RP1=0, select bank0
   892  0099  00D4               	movwf	Lcd_Print_String@a
   893  009A  3080               	movlw	128
   894  009B  00D5               	movwf	Lcd_Print_String@a+1
   895  009C  120A  118A  24B1  120A  118A  	fcall	_Lcd_Print_String
   896  00A1  290E               	goto	l1533
   897  00A2                     l1517:
   898  00A2  0368               	decf	_status,w
   899  00A3  1D03               	btfss	3,2
   900  00A4  28A6               	goto	u1361
   901  00A5  28A7               	goto	u1360
   902  00A6                     u1361:
   903  00A6  28D0               	goto	l1525
   904  00A7                     u1360:
   905  00A7                     l1519:
   906                           
   907                           ;main.c: 63:         {;main.c: 65:             Lcd_Set_Cursor(1,1);
   908  00A7  01D1               	clrf	Lcd_Set_Cursor@b
   909  00A8  0AD1               	incf	Lcd_Set_Cursor@b,f
   910  00A9  3001               	movlw	1
   911  00AA  120A  118A  240E  120A  118A  	fcall	_Lcd_Set_Cursor
   912  00AF                     l1521:
   913                           
   914                           ;main.c: 66:             Lcd_Print_String(idea_temp);
   915  00AF  3021               	movlw	(low (_idea_temp| 0))& (0+255)
   916  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   917  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   918  00B2  00D4               	movwf	Lcd_Print_String@a
   919  00B3  3000               	movlw	0
   920  00B4  00D5               	movwf	Lcd_Print_String@a+1
   921  00B5  120A  118A  24B1  120A  118A  	fcall	_Lcd_Print_String
   922  00BA                     l1523:
   923                           
   924                           ;main.c: 67:             Lcd_Set_Cursor(2,1);
   925  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   926  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   927  00BC  01D1               	clrf	Lcd_Set_Cursor@b
   928  00BD  0AD1               	incf	Lcd_Set_Cursor@b,f
   929  00BE  3002               	movlw	2
   930  00BF  120A  118A  240E  120A  118A  	fcall	_Lcd_Set_Cursor
   931                           
   932                           ;main.c: 68:             Lcd_Print_String(idea_humi);
   933  00C4  30A0               	movlw	(low (_idea_humi| 0))& (0+255)
   934  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   935  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   936  00C7  00D4               	movwf	Lcd_Print_String@a
   937  00C8  3000               	movlw	0
   938  00C9  00D5               	movwf	Lcd_Print_String@a+1
   939  00CA  120A  118A  24B1  120A  118A  	fcall	_Lcd_Print_String
   940                           
   941                           ;main.c: 69:         }
   942  00CF  290E               	goto	l1533
   943  00D0                     l1525:
   944                           
   945                           ;main.c: 71:         {;main.c: 72:             Lcd_Set_Cursor(1,1);
   946  00D0  01D1               	clrf	Lcd_Set_Cursor@b
   947  00D1  0AD1               	incf	Lcd_Set_Cursor@b,f
   948  00D2  3001               	movlw	1
   949  00D3  120A  118A  240E  120A  118A  	fcall	_Lcd_Set_Cursor
   950  00D8                     l1527:
   951                           
   952                           ;main.c: 73:             Lcd_Print_String("Handheld PWM");
   953  00D8  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   954  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   955  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   956  00DB  00D4               	movwf	Lcd_Print_String@a
   957  00DC  3080               	movlw	128
   958  00DD  00D5               	movwf	Lcd_Print_String@a+1
   959  00DE  120A  118A  24B1  120A  118A  	fcall	_Lcd_Print_String
   960  00E3                     l1529:
   961                           
   962                           ;main.c: 74:             Lcd_Set_Cursor(2,1);
   963  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   964  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   965  00E5  01D1               	clrf	Lcd_Set_Cursor@b
   966  00E6  0AD1               	incf	Lcd_Set_Cursor@b,f
   967  00E7  3002               	movlw	2
   968  00E8  120A  118A  240E  120A  118A  	fcall	_Lcd_Set_Cursor
   969  00ED                     l1531:
   970                           
   971                           ;main.c: 75:             setPWM(ADC_Read(0)/10);
   972  00ED  300A               	movlw	10
   973  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   974  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   975  00F0  00D3               	movwf	___awdiv@divisor
   976  00F1  3000               	movlw	0
   977  00F2  00D4               	movwf	___awdiv@divisor+1
   978  00F3  3000               	movlw	0
   979  00F4  00CD               	movwf	ADC_Read@ADC_channel
   980  00F5  00CE               	movwf	ADC_Read@ADC_channel+1
   981  00F6  120A  118A  22F6  120A  118A  	fcall	_ADC_Read
   982  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   983  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   984  00FD  084E               	movf	?_ADC_Read+1,w
   985  00FE  00D6               	movwf	___awdiv@dividend+1
   986  00FF  084D               	movf	?_ADC_Read,w
   987  0100  00D5               	movwf	___awdiv@dividend
   988  0101  120A  118A  2225  120A  118A  	fcall	___awdiv
   989  0106  1283               	bcf	3,5	;RP0=0, select bank0
   990  0107  1303               	bcf	3,6	;RP1=0, select bank0
   991  0108  0853               	movf	?___awdiv,w
   992  0109  120A  118A  267D  120A  118A  	fcall	_setPWM
   993  010E                     l1533:
   994                           
   995                           ;main.c: 77:         if(status != 2) setPumpValue(rh_byte1, ihumi);
   996  010E  3002               	movlw	2
   997  010F  1283               	bcf	3,5	;RP0=0, select bank0
   998  0110  1303               	bcf	3,6	;RP1=0, select bank0
   999  0111  0668               	xorwf	_status,w
  1000  0112  1903               	btfsc	3,2
  1001  0113  2915               	goto	u1371
  1002  0114  2916               	goto	u1370
  1003  0115                     u1371:
  1004  0115  2920               	goto	l1537
  1005  0116                     u1370:
  1006  0116                     l1535:
  1007  0116  305F               	movlw	95
  1008  0117  00FF               	movwf	btemp+1
  1009  0118  087F               	movf	btemp+1,w
  1010  0119  00D0               	movwf	setPumpValue@id_rh
  1011  011A  086B               	movf	_rh_byte1,w
  1012  011B  120A  118A  253C  120A  118A  	fcall	_setPumpValue
  1013  0120                     l1537:
  1014                           
  1015                           ;main.c: 78:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1016  0120  301A               	movlw	26
  1017  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1018  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1019  0123  00E7               	movwf	??_main+2
  1020  0124  305E               	movlw	94
  1021  0125  00E6               	movwf	??_main+1
  1022  0126  306D               	movlw	109
  1023  0127  00E5               	movwf	??_main
  1024  0128                     u1397:
  1025  0128  0BE5               	decfsz	??_main,f
  1026  0129  2928               	goto	u1397
  1027  012A  0BE6               	decfsz	??_main+1,f
  1028  012B  2928               	goto	u1397
  1029  012C  0BE7               	decfsz	??_main+2,f
  1030  012D  2928               	goto	u1397
  1031  012E  292F               	nop2
  1032  012F  2856               	goto	l1503
  1033  0130  120A  118A  2810   	ljmp	start
  1034  0133                     __end_of_main:
  1035                           
  1036                           	psect	text1
  1037  053C                     __ptext1:	
  1038 ;; *************** function _setPumpValue *****************
  1039 ;; Defined at:
  1040 ;;		line 94 in file "main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  r_rh            1    wreg     unsigned char 
  1043 ;;  id_rh           1    3[BANK0 ] unsigned char 
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  r_rh            1    4[BANK0 ] unsigned char 
  1046 ;;  delta           1    5[BANK0 ] unsigned char 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1056 ;;      Params:         0       1       0       0       0
  1057 ;;      Locals:         0       2       0       0       0
  1058 ;;      Temps:          0       0       0       0       0
  1059 ;;      Totals:         0       3       0       0       0
  1060 ;;Total ram usage:        3 bytes
  1061 ;; Hardware stack levels used:    1
  1062 ;; Hardware stack levels required when called:    3
  1063 ;; This function calls:
  1064 ;;		___bmul
  1065 ;;		_setPWM
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _setPumpValue
  1073  053C                     _setPumpValue:
  1074                           
  1075                           ;incstack = 0
  1076                           ; Regs used in _setPumpValue: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1077                           ;setPumpValue@r_rh stored from wreg
  1078  053C  1283               	bcf	3,5	;RP0=0, select bank0
  1079  053D  1303               	bcf	3,6	;RP1=0, select bank0
  1080  053E  00D1               	movwf	setPumpValue@r_rh
  1081  053F                     l1441:
  1082                           
  1083                           ;main.c: 94: void setPumpValue(unsigned char r_rh, unsigned char id_rh);main.c: 95: {;ma
      +                          in.c: 96:     char delta = 10*(id_rh - r_rh);
  1084  053F  300A               	movlw	10
  1085  0540  00FF               	movwf	btemp+1
  1086  0541  087F               	movf	btemp+1,w
  1087  0542  00CD               	movwf	___bmul@multiplicand
  1088  0543  0851               	movf	setPumpValue@r_rh,w
  1089  0544  0250               	subwf	setPumpValue@id_rh,w
  1090  0545  120A  118A  2696  120A  118A  	fcall	___bmul
  1091  054A  00FF               	movwf	btemp+1
  1092  054B  087F               	movf	btemp+1,w
  1093  054C  1283               	bcf	3,5	;RP0=0, select bank0
  1094  054D  1303               	bcf	3,6	;RP1=0, select bank0
  1095  054E  00D2               	movwf	setPumpValue@delta
  1096  054F                     l1443:
  1097                           
  1098                           ;main.c: 97:     if(delta > 0)
  1099  054F  0852               	movf	setPumpValue@delta,w
  1100  0550  1903               	btfsc	3,2
  1101  0551  2D53               	goto	u1231
  1102  0552  2D54               	goto	u1230
  1103  0553                     u1231:
  1104  0553  2D71               	goto	l1451
  1105  0554                     u1230:
  1106  0554                     l1445:
  1107                           
  1108                           ;main.c: 98:     {;main.c: 99:         if(delta < 200) setPWM(10*delta);
  1109  0554  30C8               	movlw	200
  1110  0555  0252               	subwf	setPumpValue@delta,w
  1111  0556  1803               	skipnc
  1112  0557  2D59               	goto	u1241
  1113  0558  2D5A               	goto	u1240
  1114  0559                     u1241:
  1115  0559  2D6A               	goto	l1449
  1116  055A                     u1240:
  1117  055A                     l1447:
  1118  055A  300A               	movlw	10
  1119  055B  00FF               	movwf	btemp+1
  1120  055C  087F               	movf	btemp+1,w
  1121  055D  00CD               	movwf	___bmul@multiplicand
  1122  055E  0852               	movf	setPumpValue@delta,w
  1123  055F  120A  118A  2696  120A  118A  	fcall	___bmul
  1124  0564  120A  118A  267D  120A  118A  	fcall	_setPWM
  1125  0569  2D77               	goto	l205
  1126  056A                     l1449:
  1127  056A  30C8               	movlw	200
  1128  056B  120A  118A  267D  120A  118A  	fcall	_setPWM
  1129  0570  2D77               	goto	l205
  1130  0571                     l1451:
  1131  0571  3000               	movlw	0
  1132  0572  120A  118A  267D  120A  118A  	fcall	_setPWM
  1133  0577                     l205:
  1134  0577  0008               	return
  1135  0578                     __end_of_setPumpValue:
  1136                           
  1137                           	psect	text2
  1138  067D                     __ptext2:	
  1139 ;; *************** function _setPWM *****************
  1140 ;; Defined at:
  1141 ;;		line 33 in file "./pwm.h"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;  DC              1    wreg     unsigned char 
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;  DC              1    1[BANK0 ] unsigned char 
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, status,2, status,0
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1155 ;;      Params:         0       0       0       0       0
  1156 ;;      Locals:         0       1       0       0       0
  1157 ;;      Temps:          0       1       0       0       0
  1158 ;;      Totals:         0       2       0       0       0
  1159 ;;Total ram usage:        2 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; Hardware stack levels required when called:    2
  1162 ;; This function calls:
  1163 ;;		Nothing
  1164 ;; This function is called by:
  1165 ;;		_main
  1166 ;;		_setPumpValue
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           
  1171                           ;psect for function _setPWM
  1172  067D                     _setPWM:
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _setPWM: [wreg+status,2+status,0]
  1176                           ;setPWM@DC stored from wreg
  1177  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1178  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1179  067F  00CE               	movwf	setPWM@DC
  1180  0680                     l1253:
  1181                           
  1182                           ;./pwm.h: 33: void setPWM(unsigned char DC);./pwm.h: 34: {;./pwm.h: 36:     CCP1Y = DC &
      +                           (1<<0);
  1183  0680  184E               	btfsc	setPWM@DC,0
  1184  0681  2E83               	goto	u821
  1185  0682  2E87               	goto	u820
  1186  0683                     u821:
  1187  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0685  1617               	bsf	23,4	;volatile
  1190  0686  2E8A               	goto	u834
  1191  0687                     u820:
  1192  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0689  1217               	bcf	23,4	;volatile
  1195  068A                     u834:
  1196                           
  1197                           ;./pwm.h: 37:     CCP1X = DC & (1<<1);
  1198  068A  1297               	bcf	23,5	;volatile
  1199  068B                     l1255:
  1200                           
  1201                           ;./pwm.h: 39:     CCPR1L = DC >> 2;
  1202  068B  084E               	movf	setPWM@DC,w
  1203  068C  00CD               	movwf	??_setPWM
  1204  068D  3002               	movlw	2
  1205  068E                     u845:
  1206  068E  1003               	clrc
  1207  068F  0CCD               	rrf	??_setPWM,f
  1208  0690  3EFF               	addlw	-1
  1209  0691  1D03               	skipz
  1210  0692  2E8E               	goto	u845
  1211  0693  084D               	movf	??_setPWM,w
  1212  0694  0095               	movwf	21	;volatile
  1213  0695                     l155:
  1214  0695  0008               	return
  1215  0696                     __end_of_setPWM:
  1216                           
  1217                           	psect	text3
  1218  0696                     __ptext3:	
  1219 ;; *************** function ___bmul *****************
  1220 ;; Defined at:
  1221 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;  multiplier      1    wreg     unsigned char 
  1224 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1227 ;;  product         1    1[BANK0 ] unsigned char 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      unsigned char 
  1230 ;; Registers used:
  1231 ;;		wreg, status,2, status,0, btemp+1
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       1       0       0       0
  1238 ;;      Locals:         0       2       0       0       0
  1239 ;;      Temps:          0       0       0       0       0
  1240 ;;      Totals:         0       3       0       0       0
  1241 ;;Total ram usage:        3 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; Hardware stack levels required when called:    2
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_setPumpValue
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           
  1252                           ;psect for function ___bmul
  1253  0696                     ___bmul:
  1254                           
  1255                           ;incstack = 0
  1256                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1257                           ;___bmul@multiplier stored from wreg
  1258  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0698  00CF               	movwf	___bmul@multiplier
  1261  0699                     l1257:
  1262  0699  01CE               	clrf	___bmul@product
  1263  069A                     l1259:
  1264  069A  1C4F               	btfss	___bmul@multiplier,0
  1265  069B  2E9D               	goto	u851
  1266  069C  2E9E               	goto	u850
  1267  069D                     u851:
  1268  069D  2EA2               	goto	l1263
  1269  069E                     u850:
  1270  069E                     l1261:
  1271  069E  084D               	movf	___bmul@multiplicand,w
  1272  069F  00FF               	movwf	btemp+1
  1273  06A0  087F               	movf	btemp+1,w
  1274  06A1  07CE               	addwf	___bmul@product,f
  1275  06A2                     l1263:
  1276  06A2  1003               	clrc
  1277  06A3  0DCD               	rlf	___bmul@multiplicand,f
  1278  06A4                     l1265:
  1279  06A4  1003               	clrc
  1280  06A5  0CCF               	rrf	___bmul@multiplier,f
  1281  06A6                     l1267:
  1282  06A6  084F               	movf	___bmul@multiplier,w
  1283  06A7  1D03               	btfss	3,2
  1284  06A8  2EAA               	goto	u861
  1285  06A9  2EAB               	goto	u860
  1286  06AA                     u861:
  1287  06AA  2E9A               	goto	l1259
  1288  06AB                     u860:
  1289  06AB                     l1269:
  1290  06AB  084E               	movf	___bmul@product,w
  1291  06AC                     l317:
  1292  06AC  0008               	return
  1293  06AD                     __end_of___bmul:
  1294                           
  1295                           	psect	text4
  1296  06C0                     __ptext4:	
  1297 ;; *************** function _configPWM *****************
  1298 ;; Defined at:
  1299 ;;		line 17 in file "./pwm.h"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;		None
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1313 ;;      Params:         0       0       0       0       0
  1314 ;;      Locals:         0       0       0       0       0
  1315 ;;      Temps:          0       0       0       0       0
  1316 ;;      Totals:         0       0       0       0       0
  1317 ;;Total ram usage:        0 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:    2
  1320 ;; This function calls:
  1321 ;;		Nothing
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           
  1328                           ;psect for function _configPWM
  1329  06C0                     _configPWM:
  1330  06C0                     l1419:	
  1331                           ;incstack = 0
  1332                           ; Regs used in _configPWM: [wreg]
  1333                           
  1334                           
  1335                           ;./pwm.h: 20:     CCP1M2 = 1;
  1336  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1337  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1338  06C2  1517               	bsf	23,2	;volatile
  1339                           
  1340                           ;./pwm.h: 21:     CCP1M3 = 1;
  1341  06C3  1597               	bsf	23,3	;volatile
  1342                           
  1343                           ;./pwm.h: 23:     TRISC2 = 0;
  1344  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  1345  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  1346  06C6  1107               	bcf	7,2	;volatile
  1347                           
  1348                           ;./pwm.h: 25:     T2CKPS0 = 1;
  1349  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1350  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1351  06C9  1412               	bsf	18,0	;volatile
  1352                           
  1353                           ;./pwm.h: 26:     T2CKPS1 = 1;
  1354  06CA  1492               	bsf	18,1	;volatile
  1355                           
  1356                           ;./pwm.h: 27:     TMR2ON = 1;
  1357  06CB  1512               	bsf	18,2	;volatile
  1358  06CC                     l1421:
  1359                           
  1360                           ;./pwm.h: 30:     PR2 = 49;
  1361  06CC  3031               	movlw	49
  1362  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  1363  06CE  1303               	bcf	3,6	;RP1=0, select bank1
  1364  06CF  0092               	movwf	18	;volatile
  1365  06D0                     l152:
  1366  06D0  0008               	return
  1367  06D1                     __end_of_configPWM:
  1368                           
  1369                           	psect	text5
  1370  028E                     __ptext5:	
  1371 ;; *************** function _Lcd_Start *****************
  1372 ;; Defined at:
  1373 ;;		line 77 in file "./lcd.h"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0, pclath, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0
  1389 ;;      Temps:          0       3       0       0       0
  1390 ;;      Totals:         0       3       0       0       0
  1391 ;;Total ram usage:        3 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    4
  1394 ;; This function calls:
  1395 ;;		_Lcd_Cmd
  1396 ;;		_Lcd_SetBit
  1397 ;; This function is called by:
  1398 ;;		_main
  1399 ;; This function uses a non-reentrant model
  1400 ;;
  1401                           
  1402                           
  1403                           ;psect for function _Lcd_Start
  1404  028E                     _Lcd_Start:
  1405  028E                     l1377:	
  1406                           ;incstack = 0
  1407                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  1408                           
  1409                           
  1410                           ;./lcd.h: 79:   Lcd_SetBit(0x00);
  1411  028E  3000               	movlw	0
  1412  028F  120A  118A  2623  120A  118A  	fcall	_Lcd_SetBit
  1413  0294                     l1379:
  1414                           
  1415                           ;./lcd.h: 80:   _delay((unsigned long)((60)*(20000000/4000.0)));
  1416  0294  3002               	movlw	2
  1417  0295  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0296  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0297  00D3               	movwf	??_Lcd_Start+2
  1420  0298  3086               	movlw	134
  1421  0299  00D2               	movwf	??_Lcd_Start+1
  1422  029A  3098               	movlw	152
  1423  029B  00D1               	movwf	??_Lcd_Start
  1424  029C                     u1407:
  1425  029C  0BD1               	decfsz	??_Lcd_Start,f
  1426  029D  2A9C               	goto	u1407
  1427  029E  0BD2               	decfsz	??_Lcd_Start+1,f
  1428  029F  2A9C               	goto	u1407
  1429  02A0  0BD3               	decfsz	??_Lcd_Start+2,f
  1430  02A1  2A9C               	goto	u1407
  1431  02A2  0000               	nop
  1432  02A3                     l1381:
  1433                           
  1434                           ;./lcd.h: 81:   Lcd_Cmd(0x03);
  1435  02A3  3003               	movlw	3
  1436  02A4  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1437                           
  1438                           ;./lcd.h: 82:   _delay((unsigned long)((5)*(20000000/4000.0)));
  1439  02A9  3021               	movlw	33
  1440  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1441  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1442  02AC  00D2               	movwf	??_Lcd_Start+1
  1443  02AD  3075               	movlw	117
  1444  02AE  00D1               	movwf	??_Lcd_Start
  1445  02AF                     u1417:
  1446  02AF  0BD1               	decfsz	??_Lcd_Start,f
  1447  02B0  2AAF               	goto	u1417
  1448  02B1  0BD2               	decfsz	??_Lcd_Start+1,f
  1449  02B2  2AAF               	goto	u1417
  1450  02B3  2AB4               	nop2
  1451  02B4                     l1383:
  1452                           
  1453                           ;./lcd.h: 83:   Lcd_Cmd(0x03);
  1454  02B4  3003               	movlw	3
  1455  02B5  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1456  02BA                     l1385:
  1457                           
  1458                           ;./lcd.h: 84:   _delay((unsigned long)((11)*(20000000/4000.0)));
  1459  02BA  3048               	movlw	72
  1460  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  1461  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  1462  02BD  00D2               	movwf	??_Lcd_Start+1
  1463  02BE  306B               	movlw	107
  1464  02BF  00D1               	movwf	??_Lcd_Start
  1465  02C0                     u1427:
  1466  02C0  0BD1               	decfsz	??_Lcd_Start,f
  1467  02C1  2AC0               	goto	u1427
  1468  02C2  0BD2               	decfsz	??_Lcd_Start+1,f
  1469  02C3  2AC0               	goto	u1427
  1470  02C4  2AC5               	nop2
  1471                           
  1472                           ;./lcd.h: 85:   Lcd_Cmd(0x03);
  1473  02C5  3003               	movlw	3
  1474  02C6  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1475                           
  1476                           ;./lcd.h: 86:   Lcd_Cmd(0x02);
  1477  02CB  3002               	movlw	2
  1478  02CC  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1479                           
  1480                           ;./lcd.h: 87:   Lcd_Cmd(0x02);
  1481  02D1  3002               	movlw	2
  1482  02D2  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1483                           
  1484                           ;./lcd.h: 88:   Lcd_Cmd(0x08);
  1485  02D7  3008               	movlw	8
  1486  02D8  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1487                           
  1488                           ;./lcd.h: 89:   Lcd_Cmd(0x00);
  1489  02DD  3000               	movlw	0
  1490  02DE  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1491                           
  1492                           ;./lcd.h: 90:   Lcd_Cmd(0x0C);
  1493  02E3  300C               	movlw	12
  1494  02E4  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1495                           
  1496                           ;./lcd.h: 91:   Lcd_Cmd(0x00);
  1497  02E9  3000               	movlw	0
  1498  02EA  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1499                           
  1500                           ;./lcd.h: 92:   Lcd_Cmd(0x06);
  1501  02EF  3006               	movlw	6
  1502  02F0  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1503  02F5                     l94:
  1504  02F5  0008               	return
  1505  02F6                     __end_of_Lcd_Start:
  1506                           
  1507                           	psect	text6
  1508  040E                     __ptext6:	
  1509 ;; *************** function _Lcd_Set_Cursor *****************
  1510 ;; Defined at:
  1511 ;;		line 56 in file "./lcd.h"
  1512 ;; Parameters:    Size  Location     Type
  1513 ;;  a               1    wreg     unsigned char 
  1514 ;;  b               1    4[BANK0 ] unsigned char 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  a               1    6[BANK0 ] unsigned char 
  1517 ;;  temp            1    9[BANK0 ] unsigned char 
  1518 ;;  y               1    8[BANK0 ] unsigned char 
  1519 ;;  z               1    7[BANK0 ] unsigned char 
  1520 ;; Return value:  Size  Location     Type
  1521 ;;                  1    wreg      void 
  1522 ;; Registers used:
  1523 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1524 ;; Tracked objects:
  1525 ;;		On entry : 0/0
  1526 ;;		On exit  : 0/0
  1527 ;;		Unchanged: 0/0
  1528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1529 ;;      Params:         0       1       0       0       0
  1530 ;;      Locals:         0       4       0       0       0
  1531 ;;      Temps:          0       1       0       0       0
  1532 ;;      Totals:         0       6       0       0       0
  1533 ;;Total ram usage:        6 bytes
  1534 ;; Hardware stack levels used:    1
  1535 ;; Hardware stack levels required when called:    4
  1536 ;; This function calls:
  1537 ;;		_Lcd_Cmd
  1538 ;; This function is called by:
  1539 ;;		_main
  1540 ;; This function uses a non-reentrant model
  1541 ;;
  1542                           
  1543                           
  1544                           ;psect for function _Lcd_Set_Cursor
  1545  040E                     _Lcd_Set_Cursor:
  1546                           
  1547                           ;incstack = 0
  1548                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1549                           ;Lcd_Set_Cursor@a stored from wreg
  1550  040E  1283               	bcf	3,5	;RP0=0, select bank0
  1551  040F  1303               	bcf	3,6	;RP1=0, select bank0
  1552  0410  00D3               	movwf	Lcd_Set_Cursor@a
  1553  0411                     l1357:
  1554                           
  1555                           ;./lcd.h: 56: void Lcd_Set_Cursor(char a, char b);./lcd.h: 57: {;./lcd.h: 58:     char t
      +                          emp,z,y;;./lcd.h: 59:     if(a == 1)
  1556  0411  0353               	decf	Lcd_Set_Cursor@a,w
  1557  0412  1D03               	btfss	3,2
  1558  0413  2C15               	goto	u1061
  1559  0414  2C16               	goto	u1060
  1560  0415                     u1061:
  1561  0415  2C3B               	goto	l1367
  1562  0416                     u1060:
  1563  0416                     l1359:
  1564                           
  1565                           ;./lcd.h: 60:     {;./lcd.h: 61:       temp = 0x80 + b - 1;
  1566  0416  0851               	movf	Lcd_Set_Cursor@b,w
  1567  0417  3E7F               	addlw	127
  1568  0418  00FF               	movwf	btemp+1
  1569  0419  087F               	movf	btemp+1,w
  1570  041A  00D6               	movwf	Lcd_Set_Cursor@temp
  1571                           
  1572                           ;./lcd.h: 62:         z = temp>>4;
  1573  041B  0856               	movf	Lcd_Set_Cursor@temp,w
  1574  041C  00D2               	movwf	??_Lcd_Set_Cursor
  1575  041D  3004               	movlw	4
  1576  041E                     u1075:
  1577  041E  1003               	clrc
  1578  041F  0CD2               	rrf	??_Lcd_Set_Cursor,f
  1579  0420  3EFF               	addlw	-1
  1580  0421  1D03               	skipz
  1581  0422  2C1E               	goto	u1075
  1582  0423  0852               	movf	??_Lcd_Set_Cursor,w
  1583  0424  00FF               	movwf	btemp+1
  1584  0425  087F               	movf	btemp+1,w
  1585  0426  00D4               	movwf	Lcd_Set_Cursor@z
  1586  0427                     l1361:
  1587                           
  1588                           ;./lcd.h: 63:         y = temp & 0x0F;
  1589  0427  0856               	movf	Lcd_Set_Cursor@temp,w
  1590  0428  390F               	andlw	15
  1591  0429  00FF               	movwf	btemp+1
  1592  042A  087F               	movf	btemp+1,w
  1593  042B  00D5               	movwf	Lcd_Set_Cursor@y
  1594  042C                     l1363:
  1595                           
  1596                           ;./lcd.h: 64:         Lcd_Cmd(z);
  1597  042C  0854               	movf	Lcd_Set_Cursor@z,w
  1598  042D  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1599  0432                     l1365:
  1600                           
  1601                           ;./lcd.h: 65:         Lcd_Cmd(y);
  1602  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1603  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1604  0434  0855               	movf	Lcd_Set_Cursor@y,w
  1605  0435  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1606                           
  1607                           ;./lcd.h: 66:     }
  1608  043A  2C65               	goto	l91
  1609  043B                     l1367:
  1610  043B  3002               	movlw	2
  1611  043C  0653               	xorwf	Lcd_Set_Cursor@a,w
  1612  043D  1D03               	btfss	3,2
  1613  043E  2C40               	goto	u1081
  1614  043F  2C41               	goto	u1080
  1615  0440                     u1081:
  1616  0440  2C65               	goto	l91
  1617  0441                     u1080:
  1618  0441                     l1369:
  1619                           
  1620                           ;./lcd.h: 68:     {;./lcd.h: 69:         temp = 0xC0 + b - 1;
  1621  0441  0851               	movf	Lcd_Set_Cursor@b,w
  1622  0442  3EBF               	addlw	191
  1623  0443  00FF               	movwf	btemp+1
  1624  0444  087F               	movf	btemp+1,w
  1625  0445  00D6               	movwf	Lcd_Set_Cursor@temp
  1626                           
  1627                           ;./lcd.h: 70:         z = temp>>4;
  1628  0446  0856               	movf	Lcd_Set_Cursor@temp,w
  1629  0447  00D2               	movwf	??_Lcd_Set_Cursor
  1630  0448  3004               	movlw	4
  1631  0449                     u1095:
  1632  0449  1003               	clrc
  1633  044A  0CD2               	rrf	??_Lcd_Set_Cursor,f
  1634  044B  3EFF               	addlw	-1
  1635  044C  1D03               	skipz
  1636  044D  2C49               	goto	u1095
  1637  044E  0852               	movf	??_Lcd_Set_Cursor,w
  1638  044F  00FF               	movwf	btemp+1
  1639  0450  087F               	movf	btemp+1,w
  1640  0451  00D4               	movwf	Lcd_Set_Cursor@z
  1641  0452                     l1371:
  1642                           
  1643                           ;./lcd.h: 71:         y = temp & 0x0F;
  1644  0452  0856               	movf	Lcd_Set_Cursor@temp,w
  1645  0453  390F               	andlw	15
  1646  0454  00FF               	movwf	btemp+1
  1647  0455  087F               	movf	btemp+1,w
  1648  0456  00D5               	movwf	Lcd_Set_Cursor@y
  1649  0457                     l1373:
  1650                           
  1651                           ;./lcd.h: 72:         Lcd_Cmd(z);
  1652  0457  0854               	movf	Lcd_Set_Cursor@z,w
  1653  0458  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1654  045D                     l1375:
  1655                           
  1656                           ;./lcd.h: 73:         Lcd_Cmd(y);
  1657  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1658  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1659  045F  0855               	movf	Lcd_Set_Cursor@y,w
  1660  0460  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1661  0465                     l91:
  1662  0465  0008               	return
  1663  0466                     __end_of_Lcd_Set_Cursor:
  1664                           
  1665                           	psect	text7
  1666  04B1                     __ptext7:	
  1667 ;; *************** function _Lcd_Print_String *****************
  1668 ;; Defined at:
  1669 ;;		line 111 in file "./lcd.h"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  a               2    7[BANK0 ] PTR unsigned char 
  1672 ;;		 -> STR_2(13), idea_humi(16), idea_temp(16), STR_1(6), 
  1673 ;;		 -> humi(14), temp(14), 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  i               2   12[BANK0 ] int 
  1676 ;; Return value:  Size  Location     Type
  1677 ;;                  1    wreg      void 
  1678 ;; Registers used:
  1679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1680 ;; Tracked objects:
  1681 ;;		On entry : 0/0
  1682 ;;		On exit  : 0/0
  1683 ;;		Unchanged: 0/0
  1684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1685 ;;      Params:         0       2       0       0       0
  1686 ;;      Locals:         0       2       0       0       0
  1687 ;;      Temps:          0       3       0       0       0
  1688 ;;      Totals:         0       7       0       0       0
  1689 ;;Total ram usage:        7 bytes
  1690 ;; Hardware stack levels used:    1
  1691 ;; Hardware stack levels required when called:    4
  1692 ;; This function calls:
  1693 ;;		_Lcd_Print_Char
  1694 ;; This function is called by:
  1695 ;;		_main
  1696 ;; This function uses a non-reentrant model
  1697 ;;
  1698                           
  1699                           
  1700                           ;psect for function _Lcd_Print_String
  1701  04B1                     _Lcd_Print_String:
  1702  04B1                     l1387:	
  1703                           ;incstack = 0
  1704                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1705                           
  1706                           
  1707                           ;./lcd.h: 111: void Lcd_Print_String(char *a);./lcd.h: 112: {;./lcd.h: 113:     int i;;.
      +                          /lcd.h: 114:     for(i=0;a[i]!='\0';i++)
  1708  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1709  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1710  04B3  01D9               	clrf	Lcd_Print_String@i
  1711  04B4  01DA               	clrf	Lcd_Print_String@i+1
  1712  04B5  2CDA               	goto	l1393
  1713  04B6                     l1389:
  1714                           
  1715                           ;./lcd.h: 115:        Lcd_Print_Char(a[i]);
  1716  04B6  0859               	movf	Lcd_Print_String@i,w
  1717  04B7  0754               	addwf	Lcd_Print_String@a,w
  1718  04B8  00D7               	movwf	??_Lcd_Print_String+1
  1719  04B9  0855               	movf	Lcd_Print_String@a+1,w
  1720  04BA  00D6               	movwf	??_Lcd_Print_String
  1721  04BB  1803               	skipnc
  1722  04BC  0AD6               	incf	??_Lcd_Print_String,f
  1723  04BD  1FD9               	btfss	Lcd_Print_String@i,7
  1724  04BE  2CC0               	goto	u1100
  1725  04BF  03D6               	decf	??_Lcd_Print_String,f
  1726  04C0                     u1100:
  1727  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1728  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1729  04C2  0856               	movf	??_Lcd_Print_String,w
  1730  04C3  00D8               	movwf	??_Lcd_Print_String+2
  1731  04C4  0858               	movf	??_Lcd_Print_String+2,w
  1732  04C5  00FF               	movwf	btemp+1
  1733  04C6  0857               	movf	??_Lcd_Print_String+1,w
  1734  04C7  0084               	movwf	4
  1735  04C8  120A  118A  2600  120A  118A  	fcall	stringtab
  1736  04CD  120A  118A  2466  120A  118A  	fcall	_Lcd_Print_Char
  1737  04D2                     l1391:
  1738  04D2  3001               	movlw	1
  1739  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  1740  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  1741  04D5  07D9               	addwf	Lcd_Print_String@i,f
  1742  04D6  1803               	skipnc
  1743  04D7  0ADA               	incf	Lcd_Print_String@i+1,f
  1744  04D8  3000               	movlw	0
  1745  04D9  07DA               	addwf	Lcd_Print_String@i+1,f
  1746  04DA                     l1393:
  1747  04DA  0859               	movf	Lcd_Print_String@i,w
  1748  04DB  0754               	addwf	Lcd_Print_String@a,w
  1749  04DC  00D7               	movwf	??_Lcd_Print_String+1
  1750  04DD  0855               	movf	Lcd_Print_String@a+1,w
  1751  04DE  00D6               	movwf	??_Lcd_Print_String
  1752  04DF  1803               	skipnc
  1753  04E0  0AD6               	incf	??_Lcd_Print_String,f
  1754  04E1  1FD9               	btfss	Lcd_Print_String@i,7
  1755  04E2  2CE4               	goto	u1110
  1756  04E3  03D6               	decf	??_Lcd_Print_String,f
  1757  04E4                     u1110:
  1758  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1759  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1760  04E6  0856               	movf	??_Lcd_Print_String,w
  1761  04E7  00D8               	movwf	??_Lcd_Print_String+2
  1762  04E8  0858               	movf	??_Lcd_Print_String+2,w
  1763  04E9  00FF               	movwf	btemp+1
  1764  04EA  0857               	movf	??_Lcd_Print_String+1,w
  1765  04EB  0084               	movwf	4
  1766  04EC  120A  118A  2600  120A  118A  	fcall	stringtab
  1767  04F1  3A00               	xorlw	0
  1768  04F2  1D03               	skipz
  1769  04F3  2CF5               	goto	u1121
  1770  04F4  2CF6               	goto	u1120
  1771  04F5                     u1121:
  1772  04F5  2CB6               	goto	l1389
  1773  04F6                     u1120:
  1774  04F6                     l103:
  1775  04F6  0008               	return
  1776  04F7                     __end_of_Lcd_Print_String:
  1777                           
  1778                           	psect	text8
  1779  0466                     __ptext8:	
  1780 ;; *************** function _Lcd_Print_Char *****************
  1781 ;; Defined at:
  1782 ;;		line 95 in file "./lcd.h"
  1783 ;; Parameters:    Size  Location     Type
  1784 ;;  data            1    wreg     unsigned char 
  1785 ;; Auto vars:     Size  Location     Type
  1786 ;;  data            1    6[BANK0 ] unsigned char 
  1787 ;;  Upper_Nibble    1    5[BANK0 ] unsigned char 
  1788 ;;  Lower_Nibble    1    4[BANK0 ] unsigned char 
  1789 ;; Return value:  Size  Location     Type
  1790 ;;                  1    wreg      void 
  1791 ;; Registers used:
  1792 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1793 ;; Tracked objects:
  1794 ;;		On entry : 0/0
  1795 ;;		On exit  : 0/0
  1796 ;;		Unchanged: 0/0
  1797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1798 ;;      Params:         0       0       0       0       0
  1799 ;;      Locals:         0       3       0       0       0
  1800 ;;      Temps:          0       3       0       0       0
  1801 ;;      Totals:         0       6       0       0       0
  1802 ;;Total ram usage:        6 bytes
  1803 ;; Hardware stack levels used:    1
  1804 ;; Hardware stack levels required when called:    3
  1805 ;; This function calls:
  1806 ;;		_Lcd_SetBit
  1807 ;; This function is called by:
  1808 ;;		_Lcd_Print_String
  1809 ;; This function uses a non-reentrant model
  1810 ;;
  1811                           
  1812                           
  1813                           ;psect for function _Lcd_Print_Char
  1814  0466                     _Lcd_Print_Char:
  1815                           
  1816                           ;incstack = 0
  1817                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1818                           ;Lcd_Print_Char@data stored from wreg
  1819  0466  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0467  1303               	bcf	3,6	;RP1=0, select bank0
  1821  0468  00D3               	movwf	Lcd_Print_Char@data
  1822  0469                     l1191:
  1823                           
  1824                           ;./lcd.h: 95: void Lcd_Print_Char(char data);./lcd.h: 96: {;./lcd.h: 97:    char Lower_N
      +                          ibble,Upper_Nibble;;./lcd.h: 98:    Lower_Nibble = data&0x0F;
  1825  0469  0853               	movf	Lcd_Print_Char@data,w
  1826  046A  390F               	andlw	15
  1827  046B  00FF               	movwf	btemp+1
  1828  046C  087F               	movf	btemp+1,w
  1829  046D  00D1               	movwf	Lcd_Print_Char@Lower_Nibble
  1830                           
  1831                           ;./lcd.h: 99:    Upper_Nibble = data&0xF0;
  1832  046E  0853               	movf	Lcd_Print_Char@data,w
  1833  046F  39F0               	andlw	240
  1834  0470  00FF               	movwf	btemp+1
  1835  0471  087F               	movf	btemp+1,w
  1836  0472  00D2               	movwf	Lcd_Print_Char@Upper_Nibble
  1837  0473                     l1193:
  1838                           
  1839                           ;./lcd.h: 100:    RD1 = 1;
  1840  0473  1488               	bsf	8,1	;volatile
  1841  0474                     l1195:
  1842                           
  1843                           ;./lcd.h: 101:    Lcd_SetBit(Upper_Nibble>>4);
  1844  0474  0852               	movf	Lcd_Print_Char@Upper_Nibble,w
  1845  0475  00CE               	movwf	??_Lcd_Print_Char
  1846  0476  3004               	movlw	4
  1847  0477                     u745:
  1848  0477  1003               	clrc
  1849  0478  0CCE               	rrf	??_Lcd_Print_Char,f
  1850  0479  3EFF               	addlw	-1
  1851  047A  1D03               	skipz
  1852  047B  2C77               	goto	u745
  1853  047C  084E               	movf	??_Lcd_Print_Char,w
  1854  047D  120A  118A  2623  120A  118A  	fcall	_Lcd_SetBit
  1855  0482                     l1197:
  1856                           
  1857                           ;./lcd.h: 102:    RD3 = 1;
  1858  0482  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0483  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0484  1588               	bsf	8,3	;volatile
  1861  0485                     l1199:
  1862                           
  1863                           ;./lcd.h: 103:    _delay((unsigned long)((100)*(20000000/4000.0)));
  1864  0485  3003               	movlw	3
  1865  0486  1283               	bcf	3,5	;RP0=0, select bank0
  1866  0487  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0488  00D0               	movwf	??_Lcd_Print_Char+2
  1868  0489  308A               	movlw	138
  1869  048A  00CF               	movwf	??_Lcd_Print_Char+1
  1870  048B  3055               	movlw	85
  1871  048C  00CE               	movwf	??_Lcd_Print_Char
  1872  048D                     u1437:
  1873  048D  0BCE               	decfsz	??_Lcd_Print_Char,f
  1874  048E  2C8D               	goto	u1437
  1875  048F  0BCF               	decfsz	??_Lcd_Print_Char+1,f
  1876  0490  2C8D               	goto	u1437
  1877  0491  0BD0               	decfsz	??_Lcd_Print_Char+2,f
  1878  0492  2C8D               	goto	u1437
  1879  0493                     l1201:
  1880                           
  1881                           ;./lcd.h: 104:    RD3 = 0;
  1882  0493  1283               	bcf	3,5	;RP0=0, select bank0
  1883  0494  1303               	bcf	3,6	;RP1=0, select bank0
  1884  0495  1188               	bcf	8,3	;volatile
  1885  0496                     l1203:
  1886                           
  1887                           ;./lcd.h: 105:    Lcd_SetBit(Lower_Nibble);
  1888  0496  0851               	movf	Lcd_Print_Char@Lower_Nibble,w
  1889  0497  120A  118A  2623  120A  118A  	fcall	_Lcd_SetBit
  1890  049C                     l1205:
  1891                           
  1892                           ;./lcd.h: 106:    RD3 = 1;
  1893  049C  1283               	bcf	3,5	;RP0=0, select bank0
  1894  049D  1303               	bcf	3,6	;RP1=0, select bank0
  1895  049E  1588               	bsf	8,3	;volatile
  1896  049F                     l1207:
  1897                           
  1898                           ;./lcd.h: 107:    _delay((unsigned long)((100)*(20000000/4000.0)));
  1899  049F  3003               	movlw	3
  1900  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1901  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1902  04A2  00D0               	movwf	??_Lcd_Print_Char+2
  1903  04A3  308A               	movlw	138
  1904  04A4  00CF               	movwf	??_Lcd_Print_Char+1
  1905  04A5  3055               	movlw	85
  1906  04A6  00CE               	movwf	??_Lcd_Print_Char
  1907  04A7                     u1447:
  1908  04A7  0BCE               	decfsz	??_Lcd_Print_Char,f
  1909  04A8  2CA7               	goto	u1447
  1910  04A9  0BCF               	decfsz	??_Lcd_Print_Char+1,f
  1911  04AA  2CA7               	goto	u1447
  1912  04AB  0BD0               	decfsz	??_Lcd_Print_Char+2,f
  1913  04AC  2CA7               	goto	u1447
  1914  04AD                     l1209:
  1915                           
  1916                           ;./lcd.h: 108:    RD3 = 0;
  1917  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  1918  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  1919  04AF  1188               	bcf	8,3	;volatile
  1920  04B0                     l97:
  1921  04B0  0008               	return
  1922  04B1                     __end_of_Lcd_Print_Char:
  1923                           
  1924                           	psect	text9
  1925  06E1                     __ptext9:	
  1926 ;; *************** function _Lcd_Clear *****************
  1927 ;; Defined at:
  1928 ;;		line 50 in file "./lcd.h"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;		None
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, status,2, status,0, pclath, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1942 ;;      Params:         0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0
  1944 ;;      Temps:          0       0       0       0       0
  1945 ;;      Totals:         0       0       0       0       0
  1946 ;;Total ram usage:        0 bytes
  1947 ;; Hardware stack levels used:    1
  1948 ;; Hardware stack levels required when called:    4
  1949 ;; This function calls:
  1950 ;;		_Lcd_Cmd
  1951 ;; This function is called by:
  1952 ;;		_main
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function _Lcd_Clear
  1958  06E1                     _Lcd_Clear:
  1959  06E1                     l1355:	
  1960                           ;incstack = 0
  1961                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1962                           
  1963                           
  1964                           ;./lcd.h: 52:     Lcd_Cmd(0);
  1965  06E1  3000               	movlw	0
  1966  06E2  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1967                           
  1968                           ;./lcd.h: 53:     Lcd_Cmd(1);
  1969  06E7  3001               	movlw	1
  1970  06E8  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1971  06ED                     l85:
  1972  06ED  0008               	return
  1973  06EE                     __end_of_Lcd_Clear:
  1974                           
  1975                           	psect	text10
  1976  0661                     __ptext10:	
  1977 ;; *************** function _Lcd_Cmd *****************
  1978 ;; Defined at:
  1979 ;;		line 41 in file "./lcd.h"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  a               1    wreg     unsigned char 
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  a               1    3[BANK0 ] unsigned char 
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, pclath, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         0       0       0       0       0
  1994 ;;      Locals:         0       1       0       0       0
  1995 ;;      Temps:          0       2       0       0       0
  1996 ;;      Totals:         0       3       0       0       0
  1997 ;;Total ram usage:        3 bytes
  1998 ;; Hardware stack levels used:    1
  1999 ;; Hardware stack levels required when called:    3
  2000 ;; This function calls:
  2001 ;;		_Lcd_SetBit
  2002 ;; This function is called by:
  2003 ;;		_Lcd_Clear
  2004 ;;		_Lcd_Set_Cursor
  2005 ;;		_Lcd_Start
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           
  2010                           ;psect for function _Lcd_Cmd
  2011  0661                     _Lcd_Cmd:
  2012                           
  2013                           ;incstack = 0
  2014                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2015                           ;Lcd_Cmd@a stored from wreg
  2016  0661  1283               	bcf	3,5	;RP0=0, select bank0
  2017  0662  1303               	bcf	3,6	;RP1=0, select bank0
  2018  0663  00D0               	movwf	Lcd_Cmd@a
  2019  0664                     l1181:
  2020                           
  2021                           ;./lcd.h: 41: void Lcd_Cmd(char a);./lcd.h: 42: {;./lcd.h: 43:     RD1 = 0;
  2022  0664  1088               	bcf	8,1	;volatile
  2023  0665                     l1183:
  2024                           
  2025                           ;./lcd.h: 44:     Lcd_SetBit(a);
  2026  0665  0850               	movf	Lcd_Cmd@a,w
  2027  0666  120A  118A  2623  120A  118A  	fcall	_Lcd_SetBit
  2028  066B                     l1185:
  2029                           
  2030                           ;./lcd.h: 45:     RD3 = 1;
  2031  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2032  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2033  066D  1588               	bsf	8,3	;volatile
  2034  066E                     l1187:
  2035                           
  2036                           ;./lcd.h: 46:     _delay((unsigned long)((4)*(20000000/4000.0)));
  2037  066E  301A               	movlw	26
  2038  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0671  00CF               	movwf	??_Lcd_Cmd+1
  2041  0672  30F7               	movlw	247
  2042  0673  00CE               	movwf	??_Lcd_Cmd
  2043  0674                     u1457:
  2044  0674  0BCE               	decfsz	??_Lcd_Cmd,f
  2045  0675  2E74               	goto	u1457
  2046  0676  0BCF               	decfsz	??_Lcd_Cmd+1,f
  2047  0677  2E74               	goto	u1457
  2048  0678  2E79               	nop2
  2049  0679                     l1189:
  2050                           
  2051                           ;./lcd.h: 47:     RD3 = 0;
  2052  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2053  067A  1303               	bcf	3,6	;RP1=0, select bank0
  2054  067B  1188               	bcf	8,3	;volatile
  2055  067C                     l82:
  2056  067C  0008               	return
  2057  067D                     __end_of_Lcd_Cmd:
  2058                           
  2059                           	psect	text11
  2060  0623                     __ptext11:	
  2061 ;; *************** function _Lcd_SetBit *****************
  2062 ;; Defined at:
  2063 ;;		line 26 in file "./lcd.h"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  data_bit        1    wreg     unsigned char 
  2066 ;; Auto vars:     Size  Location     Type
  2067 ;;  data_bit        1    0[BANK0 ] unsigned char 
  2068 ;; Return value:  Size  Location     Type
  2069 ;;                  1    wreg      void 
  2070 ;; Registers used:
  2071 ;;		wreg
  2072 ;; Tracked objects:
  2073 ;;		On entry : 0/0
  2074 ;;		On exit  : 0/0
  2075 ;;		Unchanged: 0/0
  2076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2077 ;;      Params:         0       0       0       0       0
  2078 ;;      Locals:         0       1       0       0       0
  2079 ;;      Temps:          0       0       0       0       0
  2080 ;;      Totals:         0       1       0       0       0
  2081 ;;Total ram usage:        1 bytes
  2082 ;; Hardware stack levels used:    1
  2083 ;; Hardware stack levels required when called:    2
  2084 ;; This function calls:
  2085 ;;		Nothing
  2086 ;; This function is called by:
  2087 ;;		_Lcd_Cmd
  2088 ;;		_Lcd_Start
  2089 ;;		_Lcd_Print_Char
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           
  2094                           ;psect for function _Lcd_SetBit
  2095  0623                     _Lcd_SetBit:
  2096                           
  2097                           ;incstack = 0
  2098                           ; Regs used in _Lcd_SetBit: [wreg]
  2099                           ;Lcd_SetBit@data_bit stored from wreg
  2100  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2101  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2102  0625  00CD               	movwf	Lcd_SetBit@data_bit
  2103  0626                     l1171:
  2104                           
  2105                           ;./lcd.h: 26: void Lcd_SetBit(char data_bit);./lcd.h: 27: {;./lcd.h: 28:     if(data_bit
      +                          & 1) RD4 = 1;
  2106  0626  1C4D               	btfss	Lcd_SetBit@data_bit,0
  2107  0627  2E29               	goto	u701
  2108  0628  2E2A               	goto	u700
  2109  0629                     u701:
  2110  0629  2E2C               	goto	l71
  2111  062A                     u700:
  2112  062A                     l1173:
  2113  062A  1608               	bsf	8,4	;volatile
  2114  062B  2E2D               	goto	l72
  2115  062C                     l71:	
  2116                           ;./lcd.h: 29:     else RD4 = 0;
  2117                           
  2118  062C  1208               	bcf	8,4	;volatile
  2119  062D                     l72:
  2120                           
  2121                           ;./lcd.h: 31:     if(data_bit& 2) RD5 = 1;
  2122  062D  1CCD               	btfss	Lcd_SetBit@data_bit,1
  2123  062E  2E30               	goto	u711
  2124  062F  2E31               	goto	u710
  2125  0630                     u711:
  2126  0630  2E33               	goto	l73
  2127  0631                     u710:
  2128  0631                     l1175:
  2129  0631  1688               	bsf	8,5	;volatile
  2130  0632  2E34               	goto	l74
  2131  0633                     l73:	
  2132                           ;./lcd.h: 32:     else RD5 = 0;
  2133                           
  2134  0633  1288               	bcf	8,5	;volatile
  2135  0634                     l74:
  2136                           
  2137                           ;./lcd.h: 34:     if(data_bit& 4) RD6 = 1;
  2138  0634  1D4D               	btfss	Lcd_SetBit@data_bit,2
  2139  0635  2E37               	goto	u721
  2140  0636  2E38               	goto	u720
  2141  0637                     u721:
  2142  0637  2E3A               	goto	l75
  2143  0638                     u720:
  2144  0638                     l1177:
  2145  0638  1708               	bsf	8,6	;volatile
  2146  0639  2E3B               	goto	l76
  2147  063A                     l75:	
  2148                           ;./lcd.h: 35:     else RD6 = 0;
  2149                           
  2150  063A  1308               	bcf	8,6	;volatile
  2151  063B                     l76:
  2152                           
  2153                           ;./lcd.h: 37:     if(data_bit& 8) RD7 = 1;
  2154  063B  1DCD               	btfss	Lcd_SetBit@data_bit,3
  2155  063C  2E3E               	goto	u731
  2156  063D  2E3F               	goto	u730
  2157  063E                     u731:
  2158  063E  2E41               	goto	l77
  2159  063F                     u730:
  2160  063F                     l1179:
  2161  063F  1788               	bsf	8,7	;volatile
  2162  0640  2E42               	goto	l79
  2163  0641                     l77:	
  2164                           ;./lcd.h: 38:     else RD7 = 0;
  2165                           
  2166  0641  1388               	bcf	8,7	;volatile
  2167  0642                     l79:
  2168  0642  0008               	return
  2169  0643                     __end_of_Lcd_SetBit:
  2170                           
  2171                           	psect	text12
  2172  0133                     __ptext12:	
  2173 ;; *************** function _DhtUpdateData *****************
  2174 ;; Defined at:
  2175 ;;		line 67 in file "./dht11.h"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;		None
  2178 ;; Auto vars:     Size  Location     Type
  2179 ;;		None
  2180 ;; Return value:  Size  Location     Type
  2181 ;;		None               void
  2182 ;; Registers used:
  2183 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2184 ;; Tracked objects:
  2185 ;;		On entry : 0/0
  2186 ;;		On exit  : 0/0
  2187 ;;		Unchanged: 0/0
  2188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2189 ;;      Params:         0       0       0       0       0
  2190 ;;      Locals:         0       0       0       0       0
  2191 ;;      Temps:          0      10       0       0       0
  2192 ;;      Totals:         0      10       0       0       0
  2193 ;;Total ram usage:       10 bytes
  2194 ;; Hardware stack levels used:    1
  2195 ;; Hardware stack levels required when called:    3
  2196 ;; This function calls:
  2197 ;;		_DhtCheckResponse
  2198 ;;		_DhtReadData
  2199 ;;		_DhtStartSignal
  2200 ;;		___awdiv
  2201 ;;		___awmod
  2202 ;; This function is called by:
  2203 ;;		_main
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           
  2208                           ;psect for function _DhtUpdateData
  2209  0133                     _DhtUpdateData:
  2210  0133                     l1395:	
  2211                           ;incstack = 0
  2212                           ; Regs used in _DhtUpdateData: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2213                           
  2214                           
  2215                           ;./dht11.h: 69:     DhtStartSignal();
  2216  0133  120A  118A  2643  120A  118A  	fcall	_DhtStartSignal
  2217                           
  2218                           ;./dht11.h: 70:     DhtCheckResponse();
  2219  0138  120A  118A  25A5  120A  118A  	fcall	_DhtCheckResponse
  2220  013D                     l1397:
  2221                           
  2222                           ;./dht11.h: 72:     rh_byte1 = DhtReadData();
  2223  013D  120A  118A  24F7  120A  118A  	fcall	_DhtReadData
  2224  0142  00FF               	movwf	btemp+1
  2225  0143  087F               	movf	btemp+1,w
  2226  0144  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0145  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0146  00EB               	movwf	_rh_byte1
  2229  0147                     l1399:
  2230                           
  2231                           ;./dht11.h: 73:     rh_byte2 = DhtReadData();
  2232  0147  120A  118A  24F7  120A  118A  	fcall	_DhtReadData
  2233  014C  00FF               	movwf	btemp+1
  2234  014D  087F               	movf	btemp+1,w
  2235  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2236  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0150  00EA               	movwf	_rh_byte2
  2238  0151                     l1401:
  2239                           
  2240                           ;./dht11.h: 74:     t_byte1 = DhtReadData();
  2241  0151  120A  118A  24F7  120A  118A  	fcall	_DhtReadData
  2242  0156  00FF               	movwf	btemp+1
  2243  0157  087F               	movf	btemp+1,w
  2244  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2245  0159  1303               	bcf	3,6	;RP1=0, select bank0
  2246  015A  00ED               	movwf	_t_byte1
  2247  015B                     l1403:
  2248                           
  2249                           ;./dht11.h: 75:     t_byte2 = DhtReadData();
  2250  015B  120A  118A  24F7  120A  118A  	fcall	_DhtReadData
  2251  0160  00FF               	movwf	btemp+1
  2252  0161  087F               	movf	btemp+1,w
  2253  0162  1283               	bcf	3,5	;RP0=0, select bank0
  2254  0163  1303               	bcf	3,6	;RP1=0, select bank0
  2255  0164  00EC               	movwf	_t_byte2
  2256  0165                     l1405:
  2257                           
  2258                           ;./dht11.h: 76:     check_sum = DhtReadData();
  2259  0165  120A  118A  24F7  120A  118A  	fcall	_DhtReadData
  2260  016A  00FF               	movwf	btemp+1
  2261  016B  087F               	movf	btemp+1,w
  2262  016C  1283               	bcf	3,5	;RP0=0, select bank0
  2263  016D  1303               	bcf	3,6	;RP1=0, select bank0
  2264  016E  00E9               	movwf	_check_sum
  2265  016F                     l1407:
  2266                           
  2267                           ;./dht11.h: 78:     if(check_sum == ((rh_byte1 + rh_byte2 + t_byte1 + t_byte2) & 0xFF))
  2268  016F  086B               	movf	_rh_byte1,w
  2269  0170  076A               	addwf	_rh_byte2,w
  2270  0171  00DB               	movwf	??_DhtUpdateData
  2271  0172  01DC               	clrf	??_DhtUpdateData+1
  2272  0173  0DDC               	rlf	??_DhtUpdateData+1,f
  2273  0174  086D               	movf	_t_byte1,w
  2274  0175  075B               	addwf	??_DhtUpdateData,w
  2275  0176  00DD               	movwf	??_DhtUpdateData+2
  2276  0177  3000               	movlw	0
  2277  0178  1803               	skipnc
  2278  0179  3001               	movlw	1
  2279  017A  075C               	addwf	??_DhtUpdateData+1,w
  2280  017B  00DE               	movwf	??_DhtUpdateData+3
  2281  017C  086C               	movf	_t_byte2,w
  2282  017D  075D               	addwf	??_DhtUpdateData+2,w
  2283  017E  00DF               	movwf	??_DhtUpdateData+4
  2284  017F  3000               	movlw	0
  2285  0180  1803               	skipnc
  2286  0181  3001               	movlw	1
  2287  0182  075E               	addwf	??_DhtUpdateData+3,w
  2288  0183  00E0               	movwf	??_DhtUpdateData+5
  2289  0184  30FF               	movlw	255
  2290  0185  055F               	andwf	??_DhtUpdateData+4,w
  2291  0186  00E1               	movwf	??_DhtUpdateData+6
  2292  0187  3000               	movlw	0
  2293  0188  0560               	andwf	??_DhtUpdateData+5,w
  2294  0189  00E2               	movwf	??_DhtUpdateData+7
  2295  018A  0869               	movf	_check_sum,w
  2296  018B  00E3               	movwf	??_DhtUpdateData+8
  2297  018C  01E4               	clrf	??_DhtUpdateData+9
  2298  018D  0862               	movf	??_DhtUpdateData+7,w
  2299  018E  0664               	xorwf	??_DhtUpdateData+9,w
  2300  018F  1D03               	skipz
  2301  0190  2993               	goto	u1135
  2302  0191  0861               	movf	??_DhtUpdateData+6,w
  2303  0192  0663               	xorwf	??_DhtUpdateData+8,w
  2304  0193                     u1135:
  2305  0193  1D03               	skipz
  2306  0194  2996               	goto	u1131
  2307  0195  2997               	goto	u1130
  2308  0196                     u1131:
  2309  0196  2A23               	goto	l1415
  2310  0197                     u1130:
  2311  0197                     l1409:
  2312                           
  2313                           ;./dht11.h: 79:     {;./dht11.h: 80:         temp[7] = t_byte1 / 10 + 48;
  2314  0197  300A               	movlw	10
  2315  0198  00D3               	movwf	___awdiv@divisor
  2316  0199  3000               	movlw	0
  2317  019A  00D4               	movwf	___awdiv@divisor+1
  2318  019B  086D               	movf	_t_byte1,w
  2319  019C  00DB               	movwf	??_DhtUpdateData
  2320  019D  01DC               	clrf	??_DhtUpdateData+1
  2321  019E  085B               	movf	??_DhtUpdateData,w
  2322  019F  00D5               	movwf	___awdiv@dividend
  2323  01A0  085C               	movf	??_DhtUpdateData+1,w
  2324  01A1  00D6               	movwf	___awdiv@dividend+1
  2325  01A2  120A  118A  2225  120A  118A  	fcall	___awdiv
  2326  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2327  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2328  01A9  0853               	movf	?___awdiv,w
  2329  01AA  3E30               	addlw	48
  2330  01AB  00FF               	movwf	btemp+1
  2331  01AC  087F               	movf	btemp+1,w
  2332  01AD  00C6               	movwf	_temp+7
  2333                           
  2334                           ;./dht11.h: 81:         temp[8] = t_byte1 % 10 + 48;
  2335  01AE  300A               	movlw	10
  2336  01AF  00CD               	movwf	___awmod@divisor
  2337  01B0  3000               	movlw	0
  2338  01B1  00CE               	movwf	___awmod@divisor+1
  2339  01B2  086D               	movf	_t_byte1,w
  2340  01B3  00DB               	movwf	??_DhtUpdateData
  2341  01B4  01DC               	clrf	??_DhtUpdateData+1
  2342  01B5  085B               	movf	??_DhtUpdateData,w
  2343  01B6  00CF               	movwf	___awmod@dividend
  2344  01B7  085C               	movf	??_DhtUpdateData+1,w
  2345  01B8  00D0               	movwf	___awmod@dividend+1
  2346  01B9  120A  118A  235A  120A  118A  	fcall	___awmod
  2347  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2348  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2349  01C0  084D               	movf	?___awmod,w
  2350  01C1  3E30               	addlw	48
  2351  01C2  00FF               	movwf	btemp+1
  2352  01C3  087F               	movf	btemp+1,w
  2353  01C4  00C7               	movwf	_temp+8
  2354                           
  2355                           ;./dht11.h: 82:         temp[10] = t_byte2 / 10 + 48;
  2356  01C5  300A               	movlw	10
  2357  01C6  00D3               	movwf	___awdiv@divisor
  2358  01C7  3000               	movlw	0
  2359  01C8  00D4               	movwf	___awdiv@divisor+1
  2360  01C9  086C               	movf	_t_byte2,w
  2361  01CA  00DB               	movwf	??_DhtUpdateData
  2362  01CB  01DC               	clrf	??_DhtUpdateData+1
  2363  01CC  085B               	movf	??_DhtUpdateData,w
  2364  01CD  00D5               	movwf	___awdiv@dividend
  2365  01CE  085C               	movf	??_DhtUpdateData+1,w
  2366  01CF  00D6               	movwf	___awdiv@dividend+1
  2367  01D0  120A  118A  2225  120A  118A  	fcall	___awdiv
  2368  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2369  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2370  01D7  0853               	movf	?___awdiv,w
  2371  01D8  3E30               	addlw	48
  2372  01D9  00FF               	movwf	btemp+1
  2373  01DA  087F               	movf	btemp+1,w
  2374  01DB  00C9               	movwf	_temp+10
  2375                           
  2376                           ;./dht11.h: 84:         humi[7] = rh_byte1 / 10 + 48;
  2377  01DC  300A               	movlw	10
  2378  01DD  00D3               	movwf	___awdiv@divisor
  2379  01DE  3000               	movlw	0
  2380  01DF  00D4               	movwf	___awdiv@divisor+1
  2381  01E0  086B               	movf	_rh_byte1,w
  2382  01E1  00DB               	movwf	??_DhtUpdateData
  2383  01E2  01DC               	clrf	??_DhtUpdateData+1
  2384  01E3  085B               	movf	??_DhtUpdateData,w
  2385  01E4  00D5               	movwf	___awdiv@dividend
  2386  01E5  085C               	movf	??_DhtUpdateData+1,w
  2387  01E6  00D6               	movwf	___awdiv@dividend+1
  2388  01E7  120A  118A  2225  120A  118A  	fcall	___awdiv
  2389  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2390  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2391  01EE  0853               	movf	?___awdiv,w
  2392  01EF  3E30               	addlw	48
  2393  01F0  00FF               	movwf	btemp+1
  2394  01F1  087F               	movf	btemp+1,w
  2395  01F2  00B8               	movwf	_humi+7
  2396                           
  2397                           ;./dht11.h: 85:         humi[8] = rh_byte1 % 10 + 48;
  2398  01F3  300A               	movlw	10
  2399  01F4  00CD               	movwf	___awmod@divisor
  2400  01F5  3000               	movlw	0
  2401  01F6  00CE               	movwf	___awmod@divisor+1
  2402  01F7  086B               	movf	_rh_byte1,w
  2403  01F8  00DB               	movwf	??_DhtUpdateData
  2404  01F9  01DC               	clrf	??_DhtUpdateData+1
  2405  01FA  085B               	movf	??_DhtUpdateData,w
  2406  01FB  00CF               	movwf	___awmod@dividend
  2407  01FC  085C               	movf	??_DhtUpdateData+1,w
  2408  01FD  00D0               	movwf	___awmod@dividend+1
  2409  01FE  120A  118A  235A  120A  118A  	fcall	___awmod
  2410  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2412  0205  084D               	movf	?___awmod,w
  2413  0206  3E30               	addlw	48
  2414  0207  00FF               	movwf	btemp+1
  2415  0208  087F               	movf	btemp+1,w
  2416  0209  00B9               	movwf	_humi+8
  2417                           
  2418                           ;./dht11.h: 86:         humi[10] = rh_byte2 / 10 + 48;
  2419  020A  300A               	movlw	10
  2420  020B  00D3               	movwf	___awdiv@divisor
  2421  020C  3000               	movlw	0
  2422  020D  00D4               	movwf	___awdiv@divisor+1
  2423  020E  086A               	movf	_rh_byte2,w
  2424  020F  00DB               	movwf	??_DhtUpdateData
  2425  0210  01DC               	clrf	??_DhtUpdateData+1
  2426  0211  085B               	movf	??_DhtUpdateData,w
  2427  0212  00D5               	movwf	___awdiv@dividend
  2428  0213  085C               	movf	??_DhtUpdateData+1,w
  2429  0214  00D6               	movwf	___awdiv@dividend+1
  2430  0215  120A  118A  2225  120A  118A  	fcall	___awdiv
  2431  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2432  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2433  021C  0853               	movf	?___awdiv,w
  2434  021D  3E30               	addlw	48
  2435  021E  00FF               	movwf	btemp+1
  2436  021F  087F               	movf	btemp+1,w
  2437  0220  00BB               	movwf	_humi+10
  2438  0221                     l1411:
  2439                           
  2440                           ;./dht11.h: 88:         return 1;
  2441  0221  1403               	setc
  2442  0222  2A24               	goto	l149
  2443  0223                     l1415:
  2444                           
  2445                           ;./dht11.h: 90:     return 0;
  2446  0223  1003               	clrc
  2447  0224                     l149:
  2448  0224  0008               	return
  2449  0225                     __end_of_DhtUpdateData:
  2450                           
  2451                           	psect	text13
  2452  035A                     __ptext13:	
  2453 ;; *************** function ___awmod *****************
  2454 ;; Defined at:
  2455 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  divisor         2    0[BANK0 ] int 
  2458 ;;  dividend        2    2[BANK0 ] int 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  sign            1    5[BANK0 ] unsigned char 
  2461 ;;  counter         1    4[BANK0 ] unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  2    0[BANK0 ] int 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, btemp+1
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2471 ;;      Params:         0       4       0       0       0
  2472 ;;      Locals:         0       2       0       0       0
  2473 ;;      Temps:          0       0       0       0       0
  2474 ;;      Totals:         0       6       0       0       0
  2475 ;;Total ram usage:        6 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; Hardware stack levels required when called:    2
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_DhtUpdateData
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           
  2485                           
  2486                           ;psect for function ___awmod
  2487  035A                     ___awmod:
  2488  035A                     l1317:	
  2489                           ;incstack = 0
  2490                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2491                           
  2492  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2493  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2494  035C  01D2               	clrf	___awmod@sign
  2495  035D                     l1319:
  2496  035D  1FD0               	btfss	___awmod@dividend+1,7
  2497  035E  2B60               	goto	u971
  2498  035F  2B61               	goto	u970
  2499  0360                     u971:
  2500  0360  2B68               	goto	l1325
  2501  0361                     u970:
  2502  0361                     l1321:
  2503  0361  09CF               	comf	___awmod@dividend,f
  2504  0362  09D0               	comf	___awmod@dividend+1,f
  2505  0363  0ACF               	incf	___awmod@dividend,f
  2506  0364  1903               	skipnz
  2507  0365  0AD0               	incf	___awmod@dividend+1,f
  2508  0366                     l1323:
  2509  0366  01D2               	clrf	___awmod@sign
  2510  0367  0AD2               	incf	___awmod@sign,f
  2511  0368                     l1325:
  2512  0368  1FCE               	btfss	___awmod@divisor+1,7
  2513  0369  2B6B               	goto	u981
  2514  036A  2B6C               	goto	u980
  2515  036B                     u981:
  2516  036B  2B71               	goto	l1329
  2517  036C                     u980:
  2518  036C                     l1327:
  2519  036C  09CD               	comf	___awmod@divisor,f
  2520  036D  09CE               	comf	___awmod@divisor+1,f
  2521  036E  0ACD               	incf	___awmod@divisor,f
  2522  036F  1903               	skipnz
  2523  0370  0ACE               	incf	___awmod@divisor+1,f
  2524  0371                     l1329:
  2525  0371  084D               	movf	___awmod@divisor,w
  2526  0372  044E               	iorwf	___awmod@divisor+1,w
  2527  0373  1903               	btfsc	3,2
  2528  0374  2B76               	goto	u991
  2529  0375  2B77               	goto	u990
  2530  0376                     u991:
  2531  0376  2BA6               	goto	l1347
  2532  0377                     u990:
  2533  0377                     l1331:
  2534  0377  01D1               	clrf	___awmod@counter
  2535  0378  0AD1               	incf	___awmod@counter,f
  2536  0379  2B85               	goto	l1337
  2537  037A                     l1333:
  2538  037A  3001               	movlw	1
  2539  037B                     u1005:
  2540  037B  1003               	clrc
  2541  037C  0DCD               	rlf	___awmod@divisor,f
  2542  037D  0DCE               	rlf	___awmod@divisor+1,f
  2543  037E  3EFF               	addlw	-1
  2544  037F  1D03               	skipz
  2545  0380  2B7B               	goto	u1005
  2546  0381                     l1335:
  2547  0381  3001               	movlw	1
  2548  0382  00FF               	movwf	btemp+1
  2549  0383  087F               	movf	btemp+1,w
  2550  0384  07D1               	addwf	___awmod@counter,f
  2551  0385                     l1337:
  2552  0385  1FCE               	btfss	___awmod@divisor+1,7
  2553  0386  2B88               	goto	u1011
  2554  0387  2B89               	goto	u1010
  2555  0388                     u1011:
  2556  0388  2B7A               	goto	l1333
  2557  0389                     u1010:
  2558  0389                     l1339:
  2559  0389  084E               	movf	___awmod@divisor+1,w
  2560  038A  0250               	subwf	___awmod@dividend+1,w
  2561  038B  1D03               	skipz
  2562  038C  2B8F               	goto	u1025
  2563  038D  084D               	movf	___awmod@divisor,w
  2564  038E  024F               	subwf	___awmod@dividend,w
  2565  038F                     u1025:
  2566  038F  1C03               	skipc
  2567  0390  2B92               	goto	u1021
  2568  0391  2B93               	goto	u1020
  2569  0392                     u1021:
  2570  0392  2B99               	goto	l1343
  2571  0393                     u1020:
  2572  0393                     l1341:
  2573  0393  084D               	movf	___awmod@divisor,w
  2574  0394  02CF               	subwf	___awmod@dividend,f
  2575  0395  084E               	movf	___awmod@divisor+1,w
  2576  0396  1C03               	skipc
  2577  0397  03D0               	decf	___awmod@dividend+1,f
  2578  0398  02D0               	subwf	___awmod@dividend+1,f
  2579  0399                     l1343:
  2580  0399  3001               	movlw	1
  2581  039A                     u1035:
  2582  039A  1003               	clrc
  2583  039B  0CCE               	rrf	___awmod@divisor+1,f
  2584  039C  0CCD               	rrf	___awmod@divisor,f
  2585  039D  3EFF               	addlw	-1
  2586  039E  1D03               	skipz
  2587  039F  2B9A               	goto	u1035
  2588  03A0                     l1345:
  2589  03A0  3001               	movlw	1
  2590  03A1  02D1               	subwf	___awmod@counter,f
  2591  03A2  1D03               	btfss	3,2
  2592  03A3  2BA5               	goto	u1041
  2593  03A4  2BA6               	goto	u1040
  2594  03A5                     u1041:
  2595  03A5  2B89               	goto	l1339
  2596  03A6                     u1040:
  2597  03A6                     l1347:
  2598  03A6  0852               	movf	___awmod@sign,w
  2599  03A7  1903               	btfsc	3,2
  2600  03A8  2BAA               	goto	u1051
  2601  03A9  2BAB               	goto	u1050
  2602  03AA                     u1051:
  2603  03AA  2BB0               	goto	l1351
  2604  03AB                     u1050:
  2605  03AB                     l1349:
  2606  03AB  09CF               	comf	___awmod@dividend,f
  2607  03AC  09D0               	comf	___awmod@dividend+1,f
  2608  03AD  0ACF               	incf	___awmod@dividend,f
  2609  03AE  1903               	skipnz
  2610  03AF  0AD0               	incf	___awmod@dividend+1,f
  2611  03B0                     l1351:
  2612  03B0  0850               	movf	___awmod@dividend+1,w
  2613  03B1  00CE               	movwf	?___awmod+1
  2614  03B2  084F               	movf	___awmod@dividend,w
  2615  03B3  00CD               	movwf	?___awmod
  2616  03B4                     l457:
  2617  03B4  0008               	return
  2618  03B5                     __end_of___awmod:
  2619                           
  2620                           	psect	text14
  2621  0225                     __ptext14:	
  2622 ;; *************** function ___awdiv *****************
  2623 ;; Defined at:
  2624 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2625 ;; Parameters:    Size  Location     Type
  2626 ;;  divisor         2    6[BANK0 ] int 
  2627 ;;  dividend        2    8[BANK0 ] int 
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;  quotient        2   12[BANK0 ] int 
  2630 ;;  sign            1   11[BANK0 ] unsigned char 
  2631 ;;  counter         1   10[BANK0 ] unsigned char 
  2632 ;; Return value:  Size  Location     Type
  2633 ;;                  2    6[BANK0 ] int 
  2634 ;; Registers used:
  2635 ;;		wreg, status,2, status,0, btemp+1
  2636 ;; Tracked objects:
  2637 ;;		On entry : 0/0
  2638 ;;		On exit  : 0/0
  2639 ;;		Unchanged: 0/0
  2640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2641 ;;      Params:         0       4       0       0       0
  2642 ;;      Locals:         0       4       0       0       0
  2643 ;;      Temps:          0       0       0       0       0
  2644 ;;      Totals:         0       8       0       0       0
  2645 ;;Total ram usage:        8 bytes
  2646 ;; Hardware stack levels used:    1
  2647 ;; Hardware stack levels required when called:    2
  2648 ;; This function calls:
  2649 ;;		Nothing
  2650 ;; This function is called by:
  2651 ;;		_DhtUpdateData
  2652 ;;		_main
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           
  2657                           ;psect for function ___awdiv
  2658  0225                     ___awdiv:
  2659  0225                     l1273:	
  2660                           ;incstack = 0
  2661                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2662                           
  2663  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2664  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2665  0227  01D8               	clrf	___awdiv@sign
  2666  0228                     l1275:
  2667  0228  1FD4               	btfss	___awdiv@divisor+1,7
  2668  0229  2A2B               	goto	u871
  2669  022A  2A2C               	goto	u870
  2670  022B                     u871:
  2671  022B  2A33               	goto	l1281
  2672  022C                     u870:
  2673  022C                     l1277:
  2674  022C  09D3               	comf	___awdiv@divisor,f
  2675  022D  09D4               	comf	___awdiv@divisor+1,f
  2676  022E  0AD3               	incf	___awdiv@divisor,f
  2677  022F  1903               	skipnz
  2678  0230  0AD4               	incf	___awdiv@divisor+1,f
  2679  0231                     l1279:
  2680  0231  01D8               	clrf	___awdiv@sign
  2681  0232  0AD8               	incf	___awdiv@sign,f
  2682  0233                     l1281:
  2683  0233  1FD6               	btfss	___awdiv@dividend+1,7
  2684  0234  2A36               	goto	u881
  2685  0235  2A37               	goto	u880
  2686  0236                     u881:
  2687  0236  2A40               	goto	l1287
  2688  0237                     u880:
  2689  0237                     l1283:
  2690  0237  09D5               	comf	___awdiv@dividend,f
  2691  0238  09D6               	comf	___awdiv@dividend+1,f
  2692  0239  0AD5               	incf	___awdiv@dividend,f
  2693  023A  1903               	skipnz
  2694  023B  0AD6               	incf	___awdiv@dividend+1,f
  2695  023C                     l1285:
  2696  023C  3001               	movlw	1
  2697  023D  00FF               	movwf	btemp+1
  2698  023E  087F               	movf	btemp+1,w
  2699  023F  06D8               	xorwf	___awdiv@sign,f
  2700  0240                     l1287:
  2701  0240  01D9               	clrf	___awdiv@quotient
  2702  0241  01DA               	clrf	___awdiv@quotient+1
  2703  0242                     l1289:
  2704  0242  0853               	movf	___awdiv@divisor,w
  2705  0243  0454               	iorwf	___awdiv@divisor+1,w
  2706  0244  1903               	btfsc	3,2
  2707  0245  2A47               	goto	u891
  2708  0246  2A48               	goto	u890
  2709  0247                     u891:
  2710  0247  2A7F               	goto	l1309
  2711  0248                     u890:
  2712  0248                     l1291:
  2713  0248  01D7               	clrf	___awdiv@counter
  2714  0249  0AD7               	incf	___awdiv@counter,f
  2715  024A  2A56               	goto	l1297
  2716  024B                     l1293:
  2717  024B  3001               	movlw	1
  2718  024C                     u905:
  2719  024C  1003               	clrc
  2720  024D  0DD3               	rlf	___awdiv@divisor,f
  2721  024E  0DD4               	rlf	___awdiv@divisor+1,f
  2722  024F  3EFF               	addlw	-1
  2723  0250  1D03               	skipz
  2724  0251  2A4C               	goto	u905
  2725  0252                     l1295:
  2726  0252  3001               	movlw	1
  2727  0253  00FF               	movwf	btemp+1
  2728  0254  087F               	movf	btemp+1,w
  2729  0255  07D7               	addwf	___awdiv@counter,f
  2730  0256                     l1297:
  2731  0256  1FD4               	btfss	___awdiv@divisor+1,7
  2732  0257  2A59               	goto	u911
  2733  0258  2A5A               	goto	u910
  2734  0259                     u911:
  2735  0259  2A4B               	goto	l1293
  2736  025A                     u910:
  2737  025A                     l1299:
  2738  025A  3001               	movlw	1
  2739  025B                     u925:
  2740  025B  1003               	clrc
  2741  025C  0DD9               	rlf	___awdiv@quotient,f
  2742  025D  0DDA               	rlf	___awdiv@quotient+1,f
  2743  025E  3EFF               	addlw	-1
  2744  025F  1D03               	skipz
  2745  0260  2A5B               	goto	u925
  2746  0261  0854               	movf	___awdiv@divisor+1,w
  2747  0262  0256               	subwf	___awdiv@dividend+1,w
  2748  0263  1D03               	skipz
  2749  0264  2A67               	goto	u935
  2750  0265  0853               	movf	___awdiv@divisor,w
  2751  0266  0255               	subwf	___awdiv@dividend,w
  2752  0267                     u935:
  2753  0267  1C03               	skipc
  2754  0268  2A6A               	goto	u931
  2755  0269  2A6B               	goto	u930
  2756  026A                     u931:
  2757  026A  2A72               	goto	l1305
  2758  026B                     u930:
  2759  026B                     l1301:
  2760  026B  0853               	movf	___awdiv@divisor,w
  2761  026C  02D5               	subwf	___awdiv@dividend,f
  2762  026D  0854               	movf	___awdiv@divisor+1,w
  2763  026E  1C03               	skipc
  2764  026F  03D6               	decf	___awdiv@dividend+1,f
  2765  0270  02D6               	subwf	___awdiv@dividend+1,f
  2766  0271                     l1303:
  2767  0271  1459               	bsf	___awdiv@quotient,0
  2768  0272                     l1305:
  2769  0272  3001               	movlw	1
  2770  0273                     u945:
  2771  0273  1003               	clrc
  2772  0274  0CD4               	rrf	___awdiv@divisor+1,f
  2773  0275  0CD3               	rrf	___awdiv@divisor,f
  2774  0276  3EFF               	addlw	-1
  2775  0277  1D03               	skipz
  2776  0278  2A73               	goto	u945
  2777  0279                     l1307:
  2778  0279  3001               	movlw	1
  2779  027A  02D7               	subwf	___awdiv@counter,f
  2780  027B  1D03               	btfss	3,2
  2781  027C  2A7E               	goto	u951
  2782  027D  2A7F               	goto	u950
  2783  027E                     u951:
  2784  027E  2A5A               	goto	l1299
  2785  027F                     u950:
  2786  027F                     l1309:
  2787  027F  0858               	movf	___awdiv@sign,w
  2788  0280  1903               	btfsc	3,2
  2789  0281  2A83               	goto	u961
  2790  0282  2A84               	goto	u960
  2791  0283                     u961:
  2792  0283  2A89               	goto	l1313
  2793  0284                     u960:
  2794  0284                     l1311:
  2795  0284  09D9               	comf	___awdiv@quotient,f
  2796  0285  09DA               	comf	___awdiv@quotient+1,f
  2797  0286  0AD9               	incf	___awdiv@quotient,f
  2798  0287  1903               	skipnz
  2799  0288  0ADA               	incf	___awdiv@quotient+1,f
  2800  0289                     l1313:
  2801  0289  085A               	movf	___awdiv@quotient+1,w
  2802  028A  00D4               	movwf	?___awdiv+1
  2803  028B  0859               	movf	___awdiv@quotient,w
  2804  028C  00D3               	movwf	?___awdiv
  2805  028D                     l444:
  2806  028D  0008               	return
  2807  028E                     __end_of___awdiv:
  2808                           
  2809                           	psect	text15
  2810  0643                     __ptext15:	
  2811 ;; *************** function _DhtStartSignal *****************
  2812 ;; Defined at:
  2813 ;;		line 30 in file "./dht11.h"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;		None
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2827 ;;      Params:         0       0       0       0       0
  2828 ;;      Locals:         0       0       0       0       0
  2829 ;;      Temps:          0       2       0       0       0
  2830 ;;      Totals:         0       2       0       0       0
  2831 ;;Total ram usage:        2 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    2
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_DhtUpdateData
  2838 ;; This function uses a non-reentrant model
  2839 ;;
  2840                           
  2841                           
  2842                           ;psect for function _DhtStartSignal
  2843  0643                     _DhtStartSignal:
  2844  0643                     l1211:	
  2845                           ;incstack = 0
  2846                           ; Regs used in _DhtStartSignal: [wreg]
  2847                           
  2848                           
  2849                           ;./dht11.h: 32:     TRISB4 = 0;
  2850  0643  1683               	bsf	3,5	;RP0=1, select bank1
  2851  0644  1303               	bcf	3,6	;RP1=0, select bank1
  2852  0645  1206               	bcf	6,4	;volatile
  2853                           
  2854                           ;./dht11.h: 33:     RB4 = 0;
  2855  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2856  0647  1303               	bcf	3,6	;RP1=0, select bank0
  2857  0648  1206               	bcf	6,4	;volatile
  2858  0649                     l1213:
  2859                           
  2860                           ;./dht11.h: 35:     _delay((unsigned long)((25)*(20000000/4000.0)));
  2861  0649  30A3               	movlw	163
  2862  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2863  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2864  064C  00CE               	movwf	??_DhtStartSignal+1
  2865  064D  3054               	movlw	84
  2866  064E  00CD               	movwf	??_DhtStartSignal
  2867  064F                     u1467:
  2868  064F  0BCD               	decfsz	??_DhtStartSignal,f
  2869  0650  2E4F               	goto	u1467
  2870  0651  0BCE               	decfsz	??_DhtStartSignal+1,f
  2871  0652  2E4F               	goto	u1467
  2872  0653  0000               	nop
  2873  0654                     l1215:
  2874                           
  2875                           ;./dht11.h: 36:     RB4 = 1;
  2876  0654  1283               	bcf	3,5	;RP0=0, select bank0
  2877  0655  1303               	bcf	3,6	;RP1=0, select bank0
  2878  0656  1606               	bsf	6,4	;volatile
  2879                           
  2880                           ;./dht11.h: 37:     _delay((unsigned long)((30)*(20000000/4000000.0)));
  2881  0657  3031               	movlw	49
  2882  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2883  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2884  065A  00CD               	movwf	??_DhtStartSignal
  2885  065B                     u1477:
  2886  065B  0BCD               	decfsz	??_DhtStartSignal,f
  2887  065C  2E5B               	goto	u1477
  2888  065D                     l1217:
  2889                           
  2890                           ;./dht11.h: 38:     TRISB4 = 1;
  2891  065D  1683               	bsf	3,5	;RP0=1, select bank1
  2892  065E  1303               	bcf	3,6	;RP1=0, select bank1
  2893  065F  1606               	bsf	6,4	;volatile
  2894  0660                     l120:
  2895  0660  0008               	return
  2896  0661                     __end_of_DhtStartSignal:
  2897                           
  2898                           	psect	text16
  2899  04F7                     __ptext16:	
  2900 ;; *************** function _DhtReadData *****************
  2901 ;; Defined at:
  2902 ;;		line 50 in file "./dht11.h"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;		None
  2905 ;; Auto vars:     Size  Location     Type
  2906 ;;  data            1    3[BANK0 ] unsigned char 
  2907 ;;  i               1    2[BANK0 ] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  1    wreg      unsigned char 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0, btemp+1
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2917 ;;      Params:         0       0       0       0       0
  2918 ;;      Locals:         0       2       0       0       0
  2919 ;;      Temps:          0       2       0       0       0
  2920 ;;      Totals:         0       4       0       0       0
  2921 ;;Total ram usage:        4 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    2
  2924 ;; This function calls:
  2925 ;;		Nothing
  2926 ;; This function is called by:
  2927 ;;		_DhtUpdateData
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           
  2932                           ;psect for function _DhtReadData
  2933  04F7                     _DhtReadData:
  2934  04F7                     l1227:	
  2935                           ;incstack = 0
  2936                           ; Regs used in _DhtReadData: [wreg+status,2+status,0+btemp+1]
  2937                           
  2938                           
  2939                           ;./dht11.h: 52:     char i, data = 0;
  2940  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2941  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2942  04F9  01D0               	clrf	DhtReadData@data
  2943                           
  2944                           ;./dht11.h: 53:     for(i = 0; i < 8; i++)
  2945  04FA  01CF               	clrf	DhtReadData@i
  2946  04FB                     l1233:
  2947  04FB  1003               	clrc
  2948  04FC  1A06               	btfsc	6,4	;volatile
  2949  04FD  1403               	setc
  2950  04FE  3000               	movlw	0
  2951  04FF  1803               	skipnc
  2952  0500  3001               	movlw	1
  2953  0501  00CD               	movwf	??_DhtReadData
  2954  0502  01CE               	clrf	??_DhtReadData+1
  2955  0503  1C4D               	btfss	??_DhtReadData,0
  2956  0504  2D06               	goto	u781
  2957  0505  2D07               	goto	u780
  2958  0506                     u781:
  2959  0506  2CFB               	goto	l1233
  2960  0507                     u780:
  2961  0507                     l1235:
  2962                           
  2963                           ;./dht11.h: 56:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  2964  0507  3031               	movlw	49
  2965  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2967  050A  00CD               	movwf	??_DhtReadData
  2968  050B                     u1487:
  2969  050B  0BCD               	decfsz	??_DhtReadData,f
  2970  050C  2D0B               	goto	u1487
  2971  050D                     l1237:
  2972                           
  2973                           ;./dht11.h: 57:         if(RB4 & 1)
  2974  050D  1003               	clrc
  2975  050E  1283               	bcf	3,5	;RP0=0, select bank0
  2976  050F  1303               	bcf	3,6	;RP1=0, select bank0
  2977  0510  1A06               	btfsc	6,4	;volatile
  2978  0511  1403               	setc
  2979  0512  3000               	movlw	0
  2980  0513  1803               	skipnc
  2981  0514  3001               	movlw	1
  2982  0515  00CD               	movwf	??_DhtReadData
  2983  0516  01CE               	clrf	??_DhtReadData+1
  2984  0517  1C4D               	btfss	??_DhtReadData,0
  2985  0518  2D1A               	goto	u791
  2986  0519  2D1B               	goto	u790
  2987  051A                     u791:
  2988  051A  2D1E               	goto	l1241
  2989  051B                     u790:
  2990  051B                     l1239:
  2991                           
  2992                           ;./dht11.h: 58:             data = ((data<<1) | 1);
  2993  051B  1403               	setc
  2994  051C  0DD0               	rlf	DhtReadData@data,f
  2995  051D  2D24               	goto	l1243
  2996  051E                     l1241:
  2997                           
  2998                           ;./dht11.h: 60:             data = (data<<1);
  2999  051E  0850               	movf	DhtReadData@data,w
  3000  051F  00CD               	movwf	??_DhtReadData
  3001  0520  074D               	addwf	??_DhtReadData,w
  3002  0521  00FF               	movwf	btemp+1
  3003  0522  087F               	movf	btemp+1,w
  3004  0523  00D0               	movwf	DhtReadData@data
  3005  0524                     l1243:
  3006  0524  1003               	clrc
  3007  0525  1A06               	btfsc	6,4	;volatile
  3008  0526  1403               	setc
  3009  0527  3000               	movlw	0
  3010  0528  1803               	skipnc
  3011  0529  3001               	movlw	1
  3012  052A  00CD               	movwf	??_DhtReadData
  3013  052B  01CE               	clrf	??_DhtReadData+1
  3014  052C  184D               	btfsc	??_DhtReadData,0
  3015  052D  2D2F               	goto	u801
  3016  052E  2D30               	goto	u800
  3017  052F                     u801:
  3018  052F  2D24               	goto	l1243
  3019  0530                     u800:
  3020  0530                     l1245:
  3021                           
  3022                           ;./dht11.h: 62:     }
  3023  0530  3001               	movlw	1
  3024  0531  00FF               	movwf	btemp+1
  3025  0532  087F               	movf	btemp+1,w
  3026  0533  07CF               	addwf	DhtReadData@i,f
  3027  0534                     l1247:
  3028  0534  3008               	movlw	8
  3029  0535  024F               	subwf	DhtReadData@i,w
  3030  0536  1C03               	skipc
  3031  0537  2D39               	goto	u811
  3032  0538  2D3A               	goto	u810
  3033  0539                     u811:
  3034  0539  2CFB               	goto	l1233
  3035  053A                     u810:
  3036  053A                     l1249:
  3037                           
  3038                           ;./dht11.h: 63:     return data;
  3039  053A  0850               	movf	DhtReadData@data,w
  3040  053B                     l145:
  3041  053B  0008               	return
  3042  053C                     __end_of_DhtReadData:
  3043                           
  3044                           	psect	text17
  3045  05A5                     __ptext17:	
  3046 ;; *************** function _DhtCheckResponse *****************
  3047 ;; Defined at:
  3048 ;;		line 42 in file "./dht11.h"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;		None
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, status,0
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3062 ;;      Params:         0       0       0       0       0
  3063 ;;      Locals:         0       0       0       0       0
  3064 ;;      Temps:          0       2       0       0       0
  3065 ;;      Totals:         0       2       0       0       0
  3066 ;;Total ram usage:        2 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    2
  3069 ;; This function calls:
  3070 ;;		Nothing
  3071 ;; This function is called by:
  3072 ;;		_DhtUpdateData
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           
  3077                           ;psect for function _DhtCheckResponse
  3078  05A5                     _DhtCheckResponse:
  3079  05A5                     l1219:	
  3080                           ;incstack = 0
  3081                           ; Regs used in _DhtCheckResponse: [wreg+status,0]
  3082                           
  3083  05A5                     l1221:	
  3084                           ;./dht11.h: 44:     while(RB4 & 1);
  3085                           
  3086  05A5  1003               	clrc
  3087  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  3088  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  3089  05A8  1A06               	btfsc	6,4	;volatile
  3090  05A9  1403               	setc
  3091  05AA  3000               	movlw	0
  3092  05AB  1803               	skipnc
  3093  05AC  3001               	movlw	1
  3094  05AD  00CD               	movwf	??_DhtCheckResponse
  3095  05AE  01CE               	clrf	??_DhtCheckResponse+1
  3096  05AF  184D               	btfsc	??_DhtCheckResponse,0
  3097  05B0  2DB2               	goto	u751
  3098  05B1  2DB3               	goto	u750
  3099  05B2                     u751:
  3100  05B2  2DA5               	goto	l1221
  3101  05B3                     u750:
  3102  05B3                     l1223:
  3103  05B3  1003               	clrc
  3104  05B4  1A06               	btfsc	6,4	;volatile
  3105  05B5  1403               	setc
  3106  05B6  3000               	movlw	0
  3107  05B7  1803               	skipnc
  3108  05B8  3001               	movlw	1
  3109  05B9  00CD               	movwf	??_DhtCheckResponse
  3110  05BA  01CE               	clrf	??_DhtCheckResponse+1
  3111  05BB  1C4D               	btfss	??_DhtCheckResponse,0
  3112  05BC  2DBE               	goto	u761
  3113  05BD  2DBF               	goto	u760
  3114  05BE                     u761:
  3115  05BE  2DB3               	goto	l1223
  3116  05BF                     u760:
  3117  05BF                     l1225:
  3118  05BF  1003               	clrc
  3119  05C0  1A06               	btfsc	6,4	;volatile
  3120  05C1  1403               	setc
  3121  05C2  3000               	movlw	0
  3122  05C3  1803               	skipnc
  3123  05C4  3001               	movlw	1
  3124  05C5  00CD               	movwf	??_DhtCheckResponse
  3125  05C6  01CE               	clrf	??_DhtCheckResponse+1
  3126  05C7  184D               	btfsc	??_DhtCheckResponse,0
  3127  05C8  2DCA               	goto	u771
  3128  05C9  2DCB               	goto	u770
  3129  05CA                     u771:
  3130  05CA  2DBF               	goto	l1225
  3131  05CB                     u770:
  3132  05CB                     l132:
  3133  05CB  0008               	return
  3134  05CC                     __end_of_DhtCheckResponse:
  3135                           
  3136                           	psect	text18
  3137  02F6                     __ptext18:	
  3138 ;; *************** function _ADC_Read *****************
  3139 ;; Defined at:
  3140 ;;		line 27 in file "./adc.h"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  ADC_channel     2    0[BANK0 ] int 
  3143 ;; Auto vars:     Size  Location     Type
  3144 ;;  result          2    4[BANK0 ] int 
  3145 ;; Return value:  Size  Location     Type
  3146 ;;                  2    0[BANK0 ] int 
  3147 ;; Registers used:
  3148 ;;		wreg, status,2, btemp+1
  3149 ;; Tracked objects:
  3150 ;;		On entry : 0/0
  3151 ;;		On exit  : 0/0
  3152 ;;		Unchanged: 0/0
  3153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3154 ;;      Params:         0       2       0       0       0
  3155 ;;      Locals:         0       2       0       0       0
  3156 ;;      Temps:          0       2       0       0       0
  3157 ;;      Totals:         0       6       0       0       0
  3158 ;;Total ram usage:        6 bytes
  3159 ;; Hardware stack levels used:    1
  3160 ;; Hardware stack levels required when called:    2
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_main
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           
  3169                           ;psect for function _ADC_Read
  3170  02F6                     _ADC_Read:
  3171  02F6                     l1425:	
  3172                           ;incstack = 0
  3173                           ; Regs used in _ADC_Read: [wreg+status,2+btemp+1]
  3174                           
  3175                           
  3176                           ;./adc.h: 29:     if(ADC_channel < 0 || ADC_channel > 7)
  3177  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  3178  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  3179  02F8  1BCE               	btfsc	ADC_Read@ADC_channel+1,7
  3180  02F9  2AFB               	goto	u1141
  3181  02FA  2AFC               	goto	u1140
  3182  02FB                     u1141:
  3183  02FB  2B09               	goto	l1429
  3184  02FC                     u1140:
  3185  02FC                     l1427:
  3186  02FC  084E               	movf	ADC_Read@ADC_channel+1,w
  3187  02FD  3A80               	xorlw	128
  3188  02FE  00FF               	movwf	btemp+1
  3189  02FF  3080               	movlw	128
  3190  0300  027F               	subwf	btemp+1,w
  3191  0301  1D03               	skipz
  3192  0302  2B05               	goto	u1155
  3193  0303  3008               	movlw	8
  3194  0304  024D               	subwf	ADC_Read@ADC_channel,w
  3195  0305                     u1155:
  3196  0305  1C03               	skipc
  3197  0306  2B08               	goto	u1151
  3198  0307  2B09               	goto	u1150
  3199  0308                     u1151:
  3200  0308  2B0E               	goto	l161
  3201  0309                     u1150:
  3202  0309                     l1429:
  3203                           
  3204                           ;./adc.h: 30:         return 0;
  3205  0309  1283               	bcf	3,5	;RP0=0, select bank0
  3206  030A  1303               	bcf	3,6	;RP1=0, select bank0
  3207  030B  01CD               	clrf	?_ADC_Read
  3208  030C  01CE               	clrf	?_ADC_Read+1
  3209  030D  2B59               	goto	l164
  3210  030E                     l161:
  3211                           
  3212                           ;./adc.h: 33:     CHS0 = (ADC_channel & 1) >> 0;
  3213  030E  1283               	bcf	3,5	;RP0=0, select bank0
  3214  030F  1303               	bcf	3,6	;RP1=0, select bank0
  3215  0310  184D               	btfsc	ADC_Read@ADC_channel,0
  3216  0311  2B13               	goto	u1161
  3217  0312  2B17               	goto	u1160
  3218  0313                     u1161:
  3219  0313  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0314  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0315  159F               	bsf	31,3	;volatile
  3222  0316  2B1A               	goto	u1174
  3223  0317                     u1160:
  3224  0317  1283               	bcf	3,5	;RP0=0, select bank0
  3225  0318  1303               	bcf	3,6	;RP1=0, select bank0
  3226  0319  119F               	bcf	31,3	;volatile
  3227  031A                     u1174:
  3228  031A                     l1433:
  3229                           
  3230                           ;./adc.h: 34:     CHS1 = (ADC_channel & 2) >> 1;
  3231  031A  084E               	movf	ADC_Read@ADC_channel+1,w
  3232  031B  00D0               	movwf	??_ADC_Read+1
  3233  031C  084D               	movf	ADC_Read@ADC_channel,w
  3234  031D  00CF               	movwf	??_ADC_Read
  3235  031E  0D50               	rlf	??_ADC_Read+1,w
  3236  031F  0CD0               	rrf	??_ADC_Read+1,f
  3237  0320  0CCF               	rrf	??_ADC_Read,f
  3238  0321  184F               	btfsc	??_ADC_Read,0
  3239  0322  2B24               	goto	u1181
  3240  0323  2B28               	goto	u1180
  3241  0324                     u1181:
  3242  0324  1283               	bcf	3,5	;RP0=0, select bank0
  3243  0325  1303               	bcf	3,6	;RP1=0, select bank0
  3244  0326  161F               	bsf	31,4	;volatile
  3245  0327  2B2B               	goto	u1194
  3246  0328                     u1180:
  3247  0328  1283               	bcf	3,5	;RP0=0, select bank0
  3248  0329  1303               	bcf	3,6	;RP1=0, select bank0
  3249  032A  121F               	bcf	31,4	;volatile
  3250  032B                     u1194:
  3251                           
  3252                           ;./adc.h: 35:     CHS2 = (ADC_channel & 4) >> 2;
  3253  032B  084E               	movf	ADC_Read@ADC_channel+1,w
  3254  032C  00D0               	movwf	??_ADC_Read+1
  3255  032D  084D               	movf	ADC_Read@ADC_channel,w
  3256  032E  00CF               	movwf	??_ADC_Read
  3257  032F  0D50               	rlf	??_ADC_Read+1,w
  3258  0330  0CD0               	rrf	??_ADC_Read+1,f
  3259  0331  0CCF               	rrf	??_ADC_Read,f
  3260  0332  0D50               	rlf	??_ADC_Read+1,w
  3261  0333  0CD0               	rrf	??_ADC_Read+1,f
  3262  0334  0CCF               	rrf	??_ADC_Read,f
  3263  0335  184F               	btfsc	??_ADC_Read,0
  3264  0336  2B38               	goto	u1201
  3265  0337  2B3C               	goto	u1200
  3266  0338                     u1201:
  3267  0338  1283               	bcf	3,5	;RP0=0, select bank0
  3268  0339  1303               	bcf	3,6	;RP1=0, select bank0
  3269  033A  169F               	bsf	31,5	;volatile
  3270  033B  2B3F               	goto	u1214
  3271  033C                     u1200:
  3272  033C  1283               	bcf	3,5	;RP0=0, select bank0
  3273  033D  1303               	bcf	3,6	;RP1=0, select bank0
  3274  033E  129F               	bcf	31,5	;volatile
  3275  033F                     u1214:
  3276                           
  3277                           ;./adc.h: 38:     _delay((unsigned long)((25)*(20000000/4000000.0)));
  3278  033F  3028               	movlw	40
  3279  0340  1283               	bcf	3,5	;RP0=0, select bank0
  3280  0341  1303               	bcf	3,6	;RP1=0, select bank0
  3281  0342  00CF               	movwf	??_ADC_Read
  3282  0343                     u1497:
  3283  0343  0BCF               	decfsz	??_ADC_Read,f
  3284  0344  2B43               	goto	u1497
  3285  0345  2B46               	nop2
  3286  0346                     l1435:
  3287                           
  3288                           ;./adc.h: 41:     GO_DONE = 1;
  3289  0346  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0347  1303               	bcf	3,6	;RP1=0, select bank0
  3291  0348  151F               	bsf	31,2	;volatile
  3292  0349                     l165:	
  3293                           ;./adc.h: 44:     while(GO_DONE);
  3294                           
  3295  0349  191F               	btfsc	31,2	;volatile
  3296  034A  2B4C               	goto	u1221
  3297  034B  2B4D               	goto	u1220
  3298  034C                     u1221:
  3299  034C  2B49               	goto	l165
  3300  034D                     u1220:
  3301  034D                     l1437:
  3302                           
  3303                           ;./adc.h: 47:     int result = ((ADRESH << 8) + ADRESL);
  3304  034D  081E               	movf	30,w	;volatile
  3305  034E  00D2               	movwf	ADC_Read@result+1
  3306  034F  1683               	bsf	3,5	;RP0=1, select bank1
  3307  0350  1303               	bcf	3,6	;RP1=0, select bank1
  3308  0351  081E               	movf	30,w	;volatile
  3309  0352  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0353  1303               	bcf	3,6	;RP1=0, select bank0
  3311  0354  00D1               	movwf	ADC_Read@result
  3312                           
  3313                           ;./adc.h: 48:     return result;
  3314  0355  0852               	movf	ADC_Read@result+1,w
  3315  0356  00CE               	movwf	?_ADC_Read+1
  3316  0357  0851               	movf	ADC_Read@result,w
  3317  0358  00CD               	movwf	?_ADC_Read
  3318  0359                     l164:
  3319  0359  0008               	return
  3320  035A                     __end_of_ADC_Read:
  3321                           
  3322                           	psect	text19
  3323  06EE                     __ptext19:	
  3324 ;; *************** function _ADC_Init *****************
  3325 ;; Defined at:
  3326 ;;		line 21 in file "./adc.h"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;		None
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;		None
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  1    wreg      void 
  3333 ;; Registers used:
  3334 ;;		wreg
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3340 ;;      Params:         0       0       0       0       0
  3341 ;;      Locals:         0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0
  3343 ;;      Totals:         0       0       0       0       0
  3344 ;;Total ram usage:        0 bytes
  3345 ;; Hardware stack levels used:    1
  3346 ;; Hardware stack levels required when called:    2
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_main
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           
  3355                           ;psect for function _ADC_Init
  3356  06EE                     _ADC_Init:
  3357  06EE                     l1423:	
  3358                           ;incstack = 0
  3359                           ; Regs used in _ADC_Init: [wreg]
  3360                           
  3361                           
  3362                           ;./adc.h: 23:     ADCON0 = 0x41;
  3363  06EE  3041               	movlw	65
  3364  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3365  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3366  06F1  009F               	movwf	31	;volatile
  3367                           
  3368                           ;./adc.h: 24:     ADCON1 = 0x80;
  3369  06F2  3080               	movlw	128
  3370  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  3371  06F4  1303               	bcf	3,6	;RP1=0, select bank1
  3372  06F5  009F               	movwf	31	;volatile
  3373  06F6                     l158:
  3374  06F6  0008               	return
  3375  06F7                     __end_of_ADC_Init:
  3376                           
  3377                           	psect	text20
  3378  05CC                     __ptext20:	
  3379 ;; *************** function _ISR *****************
  3380 ;; Defined at:
  3381 ;;		line 84 in file "main.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;		None
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;		None
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3395 ;;      Params:         0       0       0       0       0
  3396 ;;      Locals:         0       0       0       0       0
  3397 ;;      Temps:          3       0       0       0       0
  3398 ;;      Totals:         3       0       0       0       0
  3399 ;;Total ram usage:        3 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    1
  3402 ;; This function calls:
  3403 ;;		i1___awmod
  3404 ;; This function is called by:
  3405 ;;		Interrupt level 1
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           
  3410                           ;psect for function _ISR
  3411  05CC                     _ISR:
  3412  05CC                     i1l1539:
  3413                           
  3414                           ;main.c: 86:     if(INTF == 1)
  3415  05CC  1C8B               	btfss	11,1	;volatile
  3416  05CD  2DCF               	goto	u138_21
  3417  05CE  2DD0               	goto	u138_20
  3418  05CF                     u138_21:
  3419  05CF  2DE7               	goto	i1l198
  3420  05D0                     u138_20:
  3421  05D0                     i1l1541:
  3422                           
  3423                           ;main.c: 87:     {;main.c: 88:         status = (status+1)%3;
  3424  05D0  3003               	movlw	3
  3425  05D1  00F0               	movwf	i1___awmod@divisor
  3426  05D2  3000               	movlw	0
  3427  05D3  00F1               	movwf	i1___awmod@divisor+1
  3428  05D4  0868               	movf	_status,w
  3429  05D5  3E01               	addlw	1
  3430  05D6  00F2               	movwf	i1___awmod@dividend
  3431  05D7  3000               	movlw	0
  3432  05D8  1803               	skipnc
  3433  05D9  3001               	movlw	1
  3434  05DA  00F3               	movwf	i1___awmod@dividend+1
  3435  05DB  120A  118A  23B5  120A  118A  	fcall	i1___awmod
  3436  05E0  0870               	movf	?i1___awmod,w
  3437  05E1  00FF               	movwf	btemp+1
  3438  05E2  087F               	movf	btemp+1,w
  3439  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3440  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3441  05E5  00E8               	movwf	_status
  3442  05E6                     i1l1543:
  3443                           
  3444                           ;main.c: 89:         INTF = 0;
  3445  05E6  108B               	bcf	11,1	;volatile
  3446  05E7                     i1l198:
  3447  05E7  0878               	movf	??_ISR+2,w
  3448  05E8  00FF               	movwf	btemp+1
  3449  05E9  0877               	movf	??_ISR+1,w
  3450  05EA  008A               	movwf	10
  3451  05EB  0E76               	swapf	??_ISR^(0+4294967168),w
  3452  05EC  0083               	movwf	3
  3453  05ED  0EFE               	swapf	btemp,f
  3454  05EE  0E7E               	swapf	btemp,w
  3455  05EF  0009               	retfie
  3456  05F0                     __end_of_ISR:
  3457                           
  3458                           	psect	intentry
  3459  0004                     __pintentry:	
  3460                           ;incstack = 0
  3461                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3462                           
  3463  0004                     interrupt_function:
  3464  007E                     saved_w	set	btemp
  3465  0004  00FE               	movwf	btemp
  3466  0005  0E03               	swapf	3,w
  3467  0006  00F6               	movwf	??_ISR
  3468  0007  080A               	movf	10,w
  3469  0008  00F7               	movwf	??_ISR+1
  3470  0009  1283               	bcf	3,5	;RP0=0, select bank0
  3471  000A  1303               	bcf	3,6	;RP1=0, select bank0
  3472  000B  087F               	movf	btemp+1,w
  3473  000C  00F8               	movwf	??_ISR+2
  3474  000D  120A  118A  2DCC   	ljmp	_ISR
  3475                           
  3476                           	psect	text21
  3477  03B5                     __ptext21:	
  3478 ;; *************** function i1___awmod *****************
  3479 ;; Defined at:
  3480 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;  divisor         2    0[COMMON] int 
  3483 ;;  dividend        2    2[COMMON] int 
  3484 ;; Auto vars:     Size  Location     Type
  3485 ;;  sign            1    5[COMMON] unsigned char 
  3486 ;;  counter         1    4[COMMON] unsigned char 
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  2    0[COMMON] int 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2, status,0, btemp+1
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3496 ;;      Params:         4       0       0       0       0
  3497 ;;      Locals:         2       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0
  3499 ;;      Totals:         6       0       0       0       0
  3500 ;;Total ram usage:        6 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; This function calls:
  3503 ;;		Nothing
  3504 ;; This function is called by:
  3505 ;;		_ISR
  3506 ;; This function uses a non-reentrant model
  3507 ;;
  3508                           
  3509                           
  3510                           ;psect for function i1___awmod
  3511  03B5                     i1___awmod:
  3512  03B5                     i1l1453:	
  3513                           ;incstack = 0
  3514                           ; Regs used in i1___awmod: [wreg+status,2+status,0+btemp+1]
  3515                           
  3516  03B5  01F5               	clrf	i1___awmod@sign
  3517  03B6                     i1l1455:
  3518  03B6  1FF3               	btfss	i1___awmod@dividend+1,7
  3519  03B7  2BB9               	goto	u125_21
  3520  03B8  2BBA               	goto	u125_20
  3521  03B9                     u125_21:
  3522  03B9  2BC1               	goto	i1l1461
  3523  03BA                     u125_20:
  3524  03BA                     i1l1457:
  3525  03BA  09F2               	comf	i1___awmod@dividend,f
  3526  03BB  09F3               	comf	i1___awmod@dividend+1,f
  3527  03BC  0AF2               	incf	i1___awmod@dividend,f
  3528  03BD  1903               	skipnz
  3529  03BE  0AF3               	incf	i1___awmod@dividend+1,f
  3530  03BF                     i1l1459:
  3531  03BF  01F5               	clrf	i1___awmod@sign
  3532  03C0  0AF5               	incf	i1___awmod@sign,f
  3533  03C1                     i1l1461:
  3534  03C1  1FF1               	btfss	i1___awmod@divisor+1,7
  3535  03C2  2BC4               	goto	u126_21
  3536  03C3  2BC5               	goto	u126_20
  3537  03C4                     u126_21:
  3538  03C4  2BCA               	goto	i1l1465
  3539  03C5                     u126_20:
  3540  03C5                     i1l1463:
  3541  03C5  09F0               	comf	i1___awmod@divisor,f
  3542  03C6  09F1               	comf	i1___awmod@divisor+1,f
  3543  03C7  0AF0               	incf	i1___awmod@divisor,f
  3544  03C8  1903               	skipnz
  3545  03C9  0AF1               	incf	i1___awmod@divisor+1,f
  3546  03CA                     i1l1465:
  3547  03CA  0870               	movf	i1___awmod@divisor,w
  3548  03CB  0471               	iorwf	i1___awmod@divisor+1,w
  3549  03CC  1903               	btfsc	3,2
  3550  03CD  2BCF               	goto	u127_21
  3551  03CE  2BD0               	goto	u127_20
  3552  03CF                     u127_21:
  3553  03CF  2BFF               	goto	i1l1483
  3554  03D0                     u127_20:
  3555  03D0                     i1l1467:
  3556  03D0  01F4               	clrf	i1___awmod@counter
  3557  03D1  0AF4               	incf	i1___awmod@counter,f
  3558  03D2  2BDE               	goto	i1l1473
  3559  03D3                     i1l1469:
  3560  03D3  3001               	movlw	1
  3561  03D4                     u128_25:
  3562  03D4  1003               	clrc
  3563  03D5  0DF0               	rlf	i1___awmod@divisor,f
  3564  03D6  0DF1               	rlf	i1___awmod@divisor+1,f
  3565  03D7  3EFF               	addlw	-1
  3566  03D8  1D03               	skipz
  3567  03D9  2BD4               	goto	u128_25
  3568  03DA                     i1l1471:
  3569  03DA  3001               	movlw	1
  3570  03DB  00FF               	movwf	btemp+1
  3571  03DC  087F               	movf	btemp+1,w
  3572  03DD  07F4               	addwf	i1___awmod@counter,f
  3573  03DE                     i1l1473:
  3574  03DE  1FF1               	btfss	i1___awmod@divisor+1,7
  3575  03DF  2BE1               	goto	u129_21
  3576  03E0  2BE2               	goto	u129_20
  3577  03E1                     u129_21:
  3578  03E1  2BD3               	goto	i1l1469
  3579  03E2                     u129_20:
  3580  03E2                     i1l1475:
  3581  03E2  0871               	movf	i1___awmod@divisor+1,w
  3582  03E3  0273               	subwf	i1___awmod@dividend+1,w
  3583  03E4  1D03               	skipz
  3584  03E5  2BE8               	goto	u130_25
  3585  03E6  0870               	movf	i1___awmod@divisor,w
  3586  03E7  0272               	subwf	i1___awmod@dividend,w
  3587  03E8                     u130_25:
  3588  03E8  1C03               	skipc
  3589  03E9  2BEB               	goto	u130_21
  3590  03EA  2BEC               	goto	u130_20
  3591  03EB                     u130_21:
  3592  03EB  2BF2               	goto	i1l1479
  3593  03EC                     u130_20:
  3594  03EC                     i1l1477:
  3595  03EC  0870               	movf	i1___awmod@divisor,w
  3596  03ED  02F2               	subwf	i1___awmod@dividend,f
  3597  03EE  0871               	movf	i1___awmod@divisor+1,w
  3598  03EF  1C03               	skipc
  3599  03F0  03F3               	decf	i1___awmod@dividend+1,f
  3600  03F1  02F3               	subwf	i1___awmod@dividend+1,f
  3601  03F2                     i1l1479:
  3602  03F2  3001               	movlw	1
  3603  03F3                     u131_25:
  3604  03F3  1003               	clrc
  3605  03F4  0CF1               	rrf	i1___awmod@divisor+1,f
  3606  03F5  0CF0               	rrf	i1___awmod@divisor,f
  3607  03F6  3EFF               	addlw	-1
  3608  03F7  1D03               	skipz
  3609  03F8  2BF3               	goto	u131_25
  3610  03F9                     i1l1481:
  3611  03F9  3001               	movlw	1
  3612  03FA  02F4               	subwf	i1___awmod@counter,f
  3613  03FB  1D03               	btfss	3,2
  3614  03FC  2BFE               	goto	u132_21
  3615  03FD  2BFF               	goto	u132_20
  3616  03FE                     u132_21:
  3617  03FE  2BE2               	goto	i1l1475
  3618  03FF                     u132_20:
  3619  03FF                     i1l1483:
  3620  03FF  0875               	movf	i1___awmod@sign,w
  3621  0400  1903               	btfsc	3,2
  3622  0401  2C03               	goto	u133_21
  3623  0402  2C04               	goto	u133_20
  3624  0403                     u133_21:
  3625  0403  2C09               	goto	i1l1487
  3626  0404                     u133_20:
  3627  0404                     i1l1485:
  3628  0404  09F2               	comf	i1___awmod@dividend,f
  3629  0405  09F3               	comf	i1___awmod@dividend+1,f
  3630  0406  0AF2               	incf	i1___awmod@dividend,f
  3631  0407  1903               	skipnz
  3632  0408  0AF3               	incf	i1___awmod@dividend+1,f
  3633  0409                     i1l1487:
  3634  0409  0873               	movf	i1___awmod@dividend+1,w
  3635  040A  00F1               	movwf	?i1___awmod+1
  3636  040B  0872               	movf	i1___awmod@dividend,w
  3637  040C  00F0               	movwf	?i1___awmod
  3638  040D                     i1l457:
  3639  040D  0008               	return
  3640  040E                     __end_ofi1___awmod:
  3641  007E                     btemp	set	126	;btemp
  3642  007E                     wtemp0	set	126
  3643                           
  3644                           	psect	config
  3645                           
  3646                           ;Config register CONFIG @ 0x2007
  3647                           ;	Oscillator Selection bits
  3648                           ;	FOSC = HS, HS oscillator
  3649                           ;	Watchdog Timer Enable bit
  3650                           ;	WDTE = OFF, WDT disabled
  3651                           ;	Power-up Timer Enable bit
  3652                           ;	PWRTE = ON, PWRT enabled
  3653                           ;	Brown-out Reset Enable bit
  3654                           ;	BOREN = ON, BOR enabled
  3655                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3656                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3657                           ;	Data EEPROM Memory Code Protection bit
  3658                           ;	CPD = OFF, Data EEPROM code protection off
  3659                           ;	Flash Program Memory Write Enable bits
  3660                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3661                           ;	In-Circuit Debugger Mode bit
  3662                           ;	DEBUG = 0x1, unprogrammed default
  3663                           ;	Flash Program Memory Code Protection bit
  3664                           ;	CP = OFF, Code protection off
  3665  2007                     	org	8199
  3666  2007  3F72               	dw	16242

Data Sizes:
    Strings     19
    Constant    0
    Data        62
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     27      78
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[13]), idea_humi(BANK1[16]), idea_temp(BANK0[16]), STR_1(CODE[6]), 
		 -> humi(BANK0[14]), temp(BANK0[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___awmod

Critical Paths under _main in BANK0

    _main->_DhtUpdateData
    _setPumpValue->___bmul
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _DhtUpdateData->___awdiv
    ___awdiv->_ADC_Read

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5531
                                             24 BANK0      3     3      0
                           _ADC_Init
                           _ADC_Read
                      _DhtUpdateData
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                            ___awdiv
                          _configPWM
                             _setPWM
                       _setPumpValue
 ---------------------------------------------------------------------------------
 (1) _setPumpValue                                         3     2      1     475
                                              3 BANK0      3     2      1
                             ___bmul
                             _setPWM
 ---------------------------------------------------------------------------------
 (2) _setPWM                                               2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     244
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _configPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            3     3      0     198
                                              4 BANK0      3     3      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     836
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     7     5      2     724
                                              7 BANK0      7     5      2
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       6     6      0     178
                                              1 BANK0      6     6      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DhtUpdateData                                       10    10      0    1875
                                             14 BANK0     10    10      0
                   _DhtCheckResponse
                        _DhtReadData
                     _DhtStartSignal
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     700
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1060
                                              6 BANK0      8     4      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) _DhtStartSignal                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DhtReadData                                          4     4      0     115
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _DhtCheckResponse                                     2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2     209
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0     348
                                              6 COMMON     3     3      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (5) i1___awmod                                            6     2      4     348
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _DhtUpdateData
     _DhtCheckResponse
     _DhtReadData
     _DhtStartSignal
     ___awdiv
       _ADC_Read (ARG)
     ___awmod
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit
   ___awdiv
     _ADC_Read (ARG)
   _configPWM
   _setPWM
   _setPumpValue
     ___bmul
     _setPWM

 _ISR (ROOT)
   i1___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      68      12        0.0%
ABS                  0      0      68       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jun 20 19:59:53 2020

                         pc 0002              ___bmul@product 004E                          l71 062C  
                        l72 062D                          l73 0633                          l74 0634  
                        l82 067C                          l75 063A                          l91 0465  
                        l76 063B                          l77 0641                          l85 06ED  
                        l94 02F5                          l79 0642                          l97 04B0  
              ___awdiv@sign 0058                          fsr 0004                         l103 04F6  
                       l120 0660                         l132 05CB                         l205 0577  
                       l152 06D0                         l161 030E                         l145 053B  
                       l155 0695                         l164 0359                         l165 0349  
                       l149 0224                         l317 06AC                         l158 06F6  
                       l444 028D                         l457 03B4                         _GIE 005F  
                       _RB4 0034                         _RD1 0041                         _RD2 0042  
                       _RD3 0043                         _RD4 0044                         _RD5 0045  
                       _RD6 0046                         _RD7 0047                         _PR2 0092  
                       u700 062A                         _ISR 05CC                         u701 0629  
                       u710 0631                         u711 0630                         u800 0530  
                       u720 0638                         u801 052F                         u721 0637  
                       u810 053A                         u730 063F                         u811 0539  
                       u731 063E                         u820 0687                         u821 0683  
                       u750 05B3                         u910 025A                         u751 05B2  
                       u911 0259                         u760 05BF                         u761 05BE  
                       u905 024C                         u745 0477                         u770 05CB  
                       u930 026B                         u850 069E                         u834 068A  
                       u771 05CA                         u931 026A                         u851 069D  
                       u780 0507                         u860 06AB                         u781 0506  
                       u925 025B                         u861 06AA                         u845 068E  
                       u790 051B                         u950 027F                         u870 022C  
                       u791 051A                         u951 027E                         u935 0267  
                       u871 022B                         u960 0284                         u880 0237  
                       u961 0283                         u945 0273                         u881 0236  
                       u890 0248                         u970 0361                         u891 0247  
                       u971 0360                         u980 036C                         u981 036B  
                       u990 0377                         u991 0376                         fsr0 0004  
                       indf 0000                ___awmod@sign 0052                        ?_ISR 0070  
                      l1201 0493                        l1211 0643                        l1203 0496  
                      l1221 05A5                        l1213 0649                        l1301 026B  
                      l1205 049C                        l1223 05B3                        l1215 0654  
                      l1311 0284                        l1303 0271                        l1207 049F  
                      l1225 05BF                        l1241 051E                        l1233 04FB  
                      l1217 065D                        l1313 0289                        l1305 0272  
                      l1321 0361                        l1401 0151                        l1209 04AD  
                      l1219 05A5                        l1243 0524                        l1235 0507  
                      l1227 04F7                        l1307 0279                        l1331 0377  
                      l1323 0366                        l1411 0221                        l1403 015B  
                      l1171 0626                        l1245 0530                        l1237 050D  
                      l1309 027F                        l1341 0393                        l1333 037A  
                      l1325 0368                        l1317 035A                        l1405 0165  
                      l1173 062A                        l1181 0664                        l1421 06CC  
                      l1261 069E                        l1253 0680                        l1501 0051  
                      l1423 06EE                        l1247 0534                        l1239 051B  
                      l1351 03B0                        l1343 0399                        l1335 0381  
                      l1327 036C                        l1319 035D                        l1415 0223  
                      l1407 016F                        l1175 0631                        l1183 0665  
                      l1191 0469                        l1263 06A2                        l1255 068B  
                      l1511 0075                        l1503 0056                        l1433 031A  
                      l1425 02F6                        l1249 053A                        l1281 0233  
                      l1273 0225                        l1345 03A0                        l1337 0385  
                      l1329 0371                        l1409 0197                        l1177 0638  
                      l1185 066B                        l1193 0473                        l1361 0427  
                      l1265 06A4                        l1257 0699                        l1441 053F  
                      l1521 00AF                        l1513 0080                        l1505 005B  
                      l1435 0346                        l1427 02FC                        l1291 0248  
                      l1283 0237                        l1275 0228                        l1339 0389  
                      l1347 03A6                        l1179 063F                        l1187 066E  
                      l1355 06E1                        l1195 0474                        l1371 0452  
                      l1363 042C                        l1419 06C0                        l1267 06A6  
                      l1259 069A                        l1451 0571                        l1443 054F  
                      l1531 00ED                        l1523 00BA                        l1515 0096  
                      l1507 0062                        l1437 034D                        l1429 0309  
                      l1293 024B                        l1285 023C                        l1277 022C  
                      l1349 03AB                        l1189 0679                        l1197 0482  
                      l1373 0457                        l1365 0432                        l1357 0411  
                      l1381 02A3                        l1269 06AB                        l1445 0554  
                      l1525 00D0                        l1533 010E                        l1509 006B  
                      l1517 00A2                        l1295 0252                        l1287 0240  
                      l1279 0231                        l1199 0485                        l1391 04D2  
                      l1375 045D                        l1359 0416                        l1367 043B  
                      l1383 02B4                        l1447 055A                        l1535 0116  
                      l1527 00D8                        l1519 00A7                        l1297 0256  
                      l1289 0242                        l1393 04DA                        l1369 0441  
                      l1385 02BA                        l1377 028E                        l1449 056A  
                      l1537 0120                        l1529 00E3                        l1299 025A  
                      l1395 0133                        l1387 04B1                        l1379 0294  
                      l1491 003E                        l1397 013D                        l1389 04B6  
                      l1493 0043                        l1399 0147                        l1495 0044  
                      l1497 0047                        l1499 004C                        _CHS0 00FB  
                      _CHS1 00FC                        _CHS2 00FD                        STR_1 061D  
                      STR_2 0610                        u1010 0389                        u1011 0388  
                      u1020 0393                        u1100 04C0                        u1021 0392  
                      u1005 037B                        u1110 04E4                        u1200 033C  
                      u1040 03A6                        u1120 04F6                        u1201 0338  
                      u1041 03A5                        u1025 038F                        u1121 04F5  
                      u1050 03AB                        u1130 0197                        u1051 03AA  
                      u1035 039A                        u1131 0196                        u1220 034D  
                      u1140 02FC                        u1060 0416                        u1221 034C  
                      u1141 02FB                        u1061 0415                        u1214 033F  
                      u1150 0309                        u1230 0554                        u1151 0308  
                      u1135 0193                        u1231 0553                        u1160 0317  
                      u1080 0441                        u1240 055A                        u1161 0313  
                      u1081 0440                        u1241 0559                        u1155 0305  
                      u1075 041E                        u1180 0328                        u1340 0062  
                      u1181 0324                        u1341 0061                        u1174 031A  
                      u1350 006B                        u1095 0449                        u1407 029C  
                      u1351 006A                        u1360 00A7                        u1417 02AF  
                      u1361 00A6                        u1194 032B                        u1370 0116  
                      u1427 02C0                        u1371 0115                        u1437 048D  
                      u1447 04A7                        u1457 0674                        u1467 064F  
                      u1477 065B                        u1397 0128                        u1487 050B  
                      u1497 0343                        _INTE 005C                        _INTF 0059  
                      _main 003E                        _humi 0031                        _temp 003F  
                      btemp 007E            __end_of_ADC_Init 06F7            __end_of_ADC_Read 035A  
                      start 0010          Lcd_Print_Char@data 0053             __end_of_Lcd_Cmd 067D  
         ___bmul@multiplier 004F                       ??_ISR 0076                  _Lcd_SetBit 0623  
                     ?_main 0070                       _CCP1X 00BD                       _CCP1Y 00BC  
           __end_of___awdiv 028E             __end_of___awmod 03B5            _DhtCheckResponse 05A5  
           ___awdiv@divisor 0053                       i1l198 05E7                       i1l457 040D  
           ___awdiv@counter 0057     __size_of_Lcd_Set_Cursor 0058                       _TRISD 0088  
     __end_of_DhtUpdateData 0225              i1___awmod@sign 0075                       _ihumi 0020  
                     _itemp 0079                       pclath 000A   __size_of_Lcd_Print_String 0046  
               _DhtReadData 04F7                       status 0003                       wtemp0 007E  
        __size_ofi1___awmod 0059     __size_of_Lcd_Print_Char 004B             __initialization 0013  
              __end_of_main 0133                      ??_main 0065          __size_of_Lcd_Clear 000D  
        __size_of_Lcd_Start 0068              _DhtStartSignal 0643                      _ADCON0 001F  
                    _ADCON1 009F                      _CCP1M2 00BA                      _CCP1M3 00BB  
                    _ADRESH 001E                      _ADRESL 009E                      _CCPR1L 0015  
          ___awdiv@dividend 0055                      i1l1461 03C1                      i1l1453 03B5  
                    i1l1541 05D0                      i1l1471 03DA                      i1l1463 03C5  
                    i1l1455 03B6                      i1l1543 05E6                      i1l1481 03F9  
                    i1l1473 03DE                      i1l1465 03CA                      i1l1457 03BA  
                    i1l1475 03E2                      i1l1467 03D0                      i1l1483 03FF  
                    i1l1459 03BF                      i1l1539 05CC                      i1l1485 0404  
                    i1l1477 03EC                      i1l1469 03D3                      i1l1487 0409  
                    i1l1479 03F2                      u130_20 03EC                      u130_21 03EB  
                    u130_25 03E8                      u131_25 03F3                      u132_20 03FF  
                    u132_21 03FE                      u133_20 0404                      u125_20 03BA  
                    u133_21 0403                      u125_21 03B9                      u126_20 03C5  
                    u126_21 03C4                      _INTEDG 040E                      u127_20 03D0  
                    u127_21 03CF                      u128_25 03D4                      u129_20 03E2  
                    u129_21 03E1                      u138_20 05D0                      u138_21 05CF  
                 ??_Lcd_Cmd 004E                      _TMR2ON 0092                      _TRISB4 0434  
                    _TRISC2 043A                      ___bmul 0696                   ??___awdiv 0057  
                 ??___awmod 0051                 ?_Lcd_SetBit 0070                      _setPWM 067D  
          ___awdiv@quotient 0059             ___awmod@divisor 004D             ___awmod@counter 0051  
                    _status 0068           __end_ofi1___awmod 040E      __end_of_DhtStartSignal 0661  
              __pdataCOMMON 0079                   ?_ADC_Init 0070                   ?_ADC_Read 004D  
                    saved_w 007E             Lcd_Set_Cursor@a 0053             Lcd_Set_Cursor@b 0051  
           Lcd_Set_Cursor@y 0055             Lcd_Set_Cursor@z 0054     __end_of__initialization 003A  
         __end_of_Lcd_Clear 06EE           __end_of_Lcd_Start 02F6         ___bmul@multiplicand 004D  
            __pcstackCOMMON 0070                __pidataBANK0 0578                __pidataBANK1 06D1  
         setPumpValue@delta 0052           setPumpValue@id_rh 0050              _Lcd_Set_Cursor 040E  
           ?_DhtStartSignal 0070                  ??_ADC_Init 004D                  ??_ADC_Read 004F  
        __size_of_configPWM 0011                  __pbssBANK0 0068            _Lcd_Print_String 04B1  
       __size_of_Lcd_SetBit 0020    __end_of_DhtCheckResponse 05CC              _Lcd_Print_Char 0466  
                __pmaintext 003E         ADC_Read@ADC_channel 004D                     ?___bmul 004D  
                __pintentry 0004                     ?_setPWM 0070          Lcd_SetBit@data_bit 004D  
    __end_of_Lcd_Set_Cursor 0466                     _T2CKPS0 0090                     _T2CKPS1 0091  
             ?_setPumpValue 0050                     _GO_DONE 00FA                  __stringtab 0600  
                   _Lcd_Cmd 0661      __end_of_Lcd_Print_Char 04B1                ?_DhtReadData 0070  
         __end_of_configPWM 06D1             __size_of___bmul 0017                     ___awdiv 0225  
                   ___awmod 035A             __size_of_setPWM 0019             ?_Lcd_Set_Cursor 0051  
                   __ptext1 053C                     __ptext2 067D                     __ptext3 0696  
                   __ptext4 06C0                     __ptext5 028E                     __ptext6 040E  
                   __ptext7 04B1                     __ptext8 0466                     __ptext9 06E1  
            ??_setPumpValue 0051                __size_of_ISR 0024            ___awmod@dividend 004F  
                   _t_byte1 006D                     _t_byte2 006C        end_of_initialization 003A  
           ?_Lcd_Print_Char 0070      __size_of_DhtUpdateData 00F2                ??_Lcd_SetBit 004D  
                 i1___awmod 03B5           __size_of_ADC_Init 0009           __size_of_ADC_Read 0064  
        __end_of_Lcd_SetBit 0643                   _Lcd_Clear 06E1                   _Lcd_Start 028E  
            __end_of___bmul 06AD            ??_DhtStartSignal 004D               __pidataCOMMON 06F7  
  __end_of_Lcd_Print_String 04F7              __end_of_setPWM 0696         start_initialization 0013  
               __end_of_ISR 05F0                  ?i1___awmod 0070               _DhtUpdateData 0133  
         Lcd_Print_String@a 0054           Lcd_Print_String@i 0059           ?_DhtCheckResponse 0070  
      __end_of_setPumpValue 0578        __size_of_DhtReadData 0045          ??_DhtCheckResponse 004D  
                ?_Lcd_Clear 0070                    ??___bmul 004E                  init_fetch0 06AD  
                ?_Lcd_Start 0070                DhtReadData@i 004F                 __pdataBANK0 0020  
               __pdataBANK1 00A0          i1___awmod@dividend 0072                    ??_setPWM 004D  
Lcd_Print_Char@Lower_Nibble 0051              ADC_Read@result 0051                   ___latbits 0002  
             __pcstackBANK0 004D              ?_DhtUpdateData 0070            setPumpValue@r_rh 0051  
                  ?_Lcd_Cmd 0070                   _check_sum 0069            ??_Lcd_Set_Cursor 0052  
                 _idea_humi 00A0                   _idea_temp 0021                    ?___awdiv 0053  
                  ?___awmod 004D                   _configPWM 06C0                   __pstrings 0600  
                  _ADC_Init 06EE                    _ADC_Read 02F6                 ??i1___awmod 0074  
          ??_Lcd_Print_Char 004E           interrupt_function 0004                    Lcd_Cmd@a 0050  
               ??_Lcd_Clear 0051                 ??_Lcd_Start 0051                  ?_configPWM 0070  
               __stringbase 060F             ??_DhtUpdateData 005B       __size_of_setPumpValue 003C  
          __size_of_Lcd_Cmd 001C           i1___awmod@divisor 0070           i1___awmod@counter 0074  
          __size_of___awdiv 0069            __size_of___awmod 005B          __end_of__stringtab 0610  
         ?_Lcd_Print_String 0054                _setPumpValue 053C          ??_Lcd_Print_String 0056  
                  __ptext10 0661                    __ptext11 0623                    __ptext20 05CC  
                  __ptext12 0133                    __ptext21 03B5                    __ptext13 035A  
                  __ptext14 0225                    __ptext15 0643                    __ptext16 04F7  
                  __ptext17 05A5                    __ptext18 02F6                    __ptext19 06EE  
             __size_of_main 00F5                    _rh_byte1 006B                    _rh_byte2 006A  
Lcd_Print_Char@Upper_Nibble 0052                 ??_configPWM 004D             DhtReadData@data 0050  
 __size_of_DhtCheckResponse 0027                    init_ram0 06B1                    setPWM@DC 004E  
                  intlevel1 0000               ??_DhtReadData 004D                   stringcode 060A  
        Lcd_Set_Cursor@temp 0056                    stringdir 060A                    stringtab 0600  
   __size_of_DhtStartSignal 001E         __end_of_DhtReadData 053C  
