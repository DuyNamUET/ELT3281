

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jun 15 20:31:51 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192                           
   193                           	psect	idataCOMMON
   194  0525                     __pidataCOMMON:
   195                           
   196                           ;initializer for _itemp
   197  0525  3414               	retlw	20
   198                           
   199                           	psect	idataBANK0
   200  03D8                     __pidataBANK0:
   201                           
   202                           ;initializer for _ihumi
   203  03D8  345F               	retlw	95
   204                           
   205                           ;initializer for _idea_temp
   206  03D9  3449               	retlw	73
   207  03DA  3444               	retlw	68
   208  03DB  3454               	retlw	84
   209  03DC  3465               	retlw	101
   210  03DD  346D               	retlw	109
   211  03DE  3470               	retlw	112
   212  03DF  3420               	retlw	32
   213  03E0  343D               	retlw	61
   214  03E1  3420               	retlw	32
   215  03E2  3432               	retlw	50
   216  03E3  3430               	retlw	48
   217  03E4  342E               	retlw	46
   218  03E5  3430               	retlw	48
   219  03E6  3420               	retlw	32
   220  03E7  3443               	retlw	67
   221  03E8  3400               	retlw	0
   222                           
   223                           ;initializer for _humi
   224  03E9  3452               	retlw	82
   225  03EA  3448               	retlw	72
   226  03EB  3420               	retlw	32
   227  03EC  3420               	retlw	32
   228  03ED  3420               	retlw	32
   229  03EE  343D               	retlw	61
   230  03EF  3420               	retlw	32
   231  03F0  3430               	retlw	48
   232  03F1  3430               	retlw	48
   233  03F2  342E               	retlw	46
   234  03F3  3430               	retlw	48
   235  03F4  3420               	retlw	32
   236  03F5  3425               	retlw	37
   237  03F6  3400               	retlw	0
   238                           
   239                           ;initializer for _temp
   240  03F7  3454               	retlw	84
   241  03F8  3465               	retlw	101
   242  03F9  346D               	retlw	109
   243  03FA  3470               	retlw	112
   244  03FB  3420               	retlw	32
   245  03FC  343D               	retlw	61
   246  03FD  3420               	retlw	32
   247  03FE  3430               	retlw	48
   248  03FF  3430               	retlw	48
   249  0400  342E               	retlw	46
   250  0401  3430               	retlw	48
   251  0402  3420               	retlw	32
   252  0403  3443               	retlw	67
   253  0404  3400               	retlw	0
   254                           
   255                           	psect	idataBANK1
   256  0515                     __pidataBANK1:
   257                           
   258                           ;initializer for _idea_humi
   259  0515  3449               	retlw	73
   260  0516  3444               	retlw	68
   261  0517  3452               	retlw	82
   262  0518  3448               	retlw	72
   263  0519  3420               	retlw	32
   264  051A  3420               	retlw	32
   265  051B  3420               	retlw	32
   266  051C  343D               	retlw	61
   267  051D  3420               	retlw	32
   268  051E  3438               	retlw	56
   269  051F  3435               	retlw	53
   270  0520  342E               	retlw	46
   271  0521  3430               	retlw	48
   272  0522  3420               	retlw	32
   273  0523  3425               	retlw	37
   274  0524  3400               	retlw	0
   275  0015                     _CCPR1L	set	21
   276  0008                     _PORTD	set	8
   277  0059                     _INTF	set	89
   278  005F                     _GIE	set	95
   279  005C                     _INTE	set	92
   280  00BD                     _CCP1X	set	189
   281  00BC                     _CCP1Y	set	188
   282  0092                     _TMR2ON	set	146
   283  0091                     _T2CKPS1	set	145
   284  0090                     _T2CKPS0	set	144
   285  00BB                     _CCP1M3	set	187
   286  00BA                     _CCP1M2	set	186
   287  0034                     _RB4	set	52
   288  0092                     _PR2	set	146
   289  0088                     _TRISD	set	136
   290  040E                     _INTEDG	set	1038
   291  043A                     _TRISC2	set	1082
   292  0434                     _TRISB4	set	1076
   293                           
   294                           	psect	strings
   295  04DB                     __pstrings:
   296  04DB                     stringtab:
   297  04DB                     __stringtab:
   298                           
   299                           ;	String table - string pointers are 1 byte each
   300  04DB  1BFF               	btfsc	btemp+1,7
   301  04DC  2CE5               	ljmp	stringcode
   302  04DD  1383               	bcf	3,7
   303  04DE  187F               	btfsc	btemp+1,0
   304  04DF  1783               	bsf	3,7
   305  04E0  0800               	movf	0,w
   306  04E1  0A84               	incf	4,f
   307  04E2  1903               	skipnz
   308  04E3  0AFF               	incf	btemp+1,f
   309  04E4  0008               	return
   310  04E5                     stringcode:
   311  04E5                     stringdir:
   312  04E5  3004               	movlw	high stringdir
   313  04E6  008A               	movwf	10
   314  04E7  0804               	movf	4,w
   315  04E8  0A84               	incf	4,f
   316  04E9  0782               	addwf	2,f
   317  04EA                     __stringbase:
   318  04EA  3400               	retlw	0
   319  04EB                     __end_of__stringtab:
   320  04EB                     STR_1:
   321  04EB  3445               	retlw	69	;'E'
   322  04EC  3472               	retlw	114	;'r'
   323  04ED  3472               	retlw	114	;'r'
   324  04EE  346F               	retlw	111	;'o'
   325  04EF  3472               	retlw	114	;'r'
   326  04F0  3400               	retlw	0
   327                           
   328                           	psect	cinit
   329  0013                     start_initialization:	
   330                           ; #config settings
   331                           
   332  0013                     __initialization:
   333                           
   334                           ; Initialize objects allocated to BANK1
   335  0013  1383               	bcf	3,7	;select IRP bank0
   336  0014  30B0               	movlw	low (__pdataBANK1+16)
   337  0015  00FD               	movwf	btemp+-1
   338  0016  3005               	movlw	high __pidataBANK1
   339  0017  00FE               	movwf	btemp
   340  0018  3015               	movlw	low __pidataBANK1
   341  0019  00FF               	movwf	btemp+1
   342  001A  30A0               	movlw	low __pdataBANK1
   343  001B  0084               	movwf	4
   344  001C  120A  118A  24F5  120A  118A  	fcall	init_ram0
   345                           
   346                           ; Initialize objects allocated to BANK0
   347  0021  304D               	movlw	low (__pdataBANK0+45)
   348  0022  00FD               	movwf	btemp+-1
   349  0023  3003               	movlw	high __pidataBANK0
   350  0024  00FE               	movwf	btemp
   351  0025  30D8               	movlw	low __pidataBANK0
   352  0026  00FF               	movwf	btemp+1
   353  0027  3020               	movlw	low __pdataBANK0
   354  0028  0084               	movwf	4
   355  0029  120A  118A  24F5  120A  118A  	fcall	init_ram0
   356                           
   357                           ; Initialize objects allocated to COMMON
   358  002E  120A  118A  2525  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   359  0033  00F7               	movwf	__pdataCOMMON& (0+127)
   360                           
   361                           ; Clear objects allocated to BANK0
   362  0034  01E2               	clrf	__pbssBANK0& (0+127)
   363  0035  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   364  0036  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   365  0037  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   366  0038  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   367                           
   368                           ; Clear objects allocated to BITCOMMON
   369  0039  01F6               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   370  003A                     end_of_initialization:	
   371                           ;End of C runtime variable initialization code
   372                           
   373  003A                     __end_of__initialization:
   374  003A  0183               	clrf	3
   375  003B  120A  118A  2930   	ljmp	_main	;jump to C main() function
   376                           
   377                           	psect	bitbssCOMMON
   378  03B0                     __pbitbssCOMMON:
   379  03B0                     _status:
   380  03B0                     	ds	1
   381                           
   382                           	psect	dataCOMMON
   383  0077                     __pdataCOMMON:
   384  0077                     _itemp:
   385  0077                     	ds	1
   386                           
   387                           	psect	bssBANK0
   388  0062                     __pbssBANK0:
   389  0062                     _check_sum:
   390  0062                     	ds	1
   391  0063                     _rh_byte2:
   392  0063                     	ds	1
   393  0064                     _rh_byte1:
   394  0064                     	ds	1
   395  0065                     _t_byte2:
   396  0065                     	ds	1
   397  0066                     _t_byte1:
   398  0066                     	ds	1
   399                           
   400                           	psect	dataBANK0
   401  0020                     __pdataBANK0:
   402  0020                     _ihumi:
   403  0020                     	ds	1
   404  0021                     _idea_temp:
   405  0021                     	ds	16
   406  0031                     _humi:
   407  0031                     	ds	14
   408  003F                     _temp:
   409  003F                     	ds	14
   410                           
   411                           	psect	dataBANK1
   412  00A0                     __pdataBANK1:
   413  00A0                     _idea_humi:
   414  00A0                     	ds	16
   415                           
   416                           	psect	inittext
   417  04F1                     init_fetch0:	
   418                           ;	Called with low address in FSR and high address in W
   419                           
   420  04F1  087E               	movf	btemp,w
   421  04F2  008A               	movwf	10
   422  04F3  087F               	movf	btemp+1,w
   423  04F4  0082               	movwf	2
   424  04F5                     init_ram0:	
   425                           ;Called with:
   426                           ;	high address of idata address in btemp 
   427                           ;	low address of idata address in btemp+1 
   428                           ;	low address of data in FSR
   429                           ;	high address + 1 of data in btemp-1
   430                           
   431  04F5  120A  118A  24F1  120A  118A  	fcall	init_fetch0
   432  04FA  0080               	movwf	0
   433  04FB  0A84               	incf	4,f
   434  04FC  0804               	movf	4,w
   435  04FD  067D               	xorwf	btemp+-1,w
   436  04FE  1903               	btfsc	3,2
   437  04FF  3400               	retlw	0
   438  0500  0AFF               	incf	btemp+1,f
   439  0501  1903               	btfsc	3,2
   440  0502  0AFE               	incf	btemp,f
   441  0503  2CF5               	goto	init_ram0
   442                           
   443                           	psect	cstackCOMMON
   444  0070                     __pcstackCOMMON:
   445  0070                     ?_DhtUpdateData:
   446  0070                     ?_LcdCmdWrite:	
   447                           ; 1 bit 
   448                           
   449  0070                     ?_LcdInit:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_LcdDataWrite:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_DhtStartSignal:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_DhtCheckResponse:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_DhtReadData:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_configPWM:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_setPWM:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_main:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_ISR:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?i1_LcdCmdWrite:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ??i1_LcdCmdWrite:	
   480                           ; 1 bytes @ 0x0
   481                           
   482                           
   483                           ; 1 bytes @ 0x0
   484  0070                     	ds	2
   485  0072                     i1LcdCmdWrite@cmd:
   486                           
   487                           ; 1 bytes @ 0x2
   488  0072                     	ds	1
   489  0073                     ??_ISR:
   490                           
   491                           ; 1 bytes @ 0x3
   492  0073                     	ds	3
   493  0076                     ??_setPumpValue:
   494  0076                     ??_LcdInit:	
   495                           ; 1 bytes @ 0x6
   496                           
   497  0076                     ??_LcdMsgPrint:	
   498                           ; 1 bytes @ 0x6
   499                           
   500  0076                     ??_configPWM:	
   501                           ; 1 bytes @ 0x6
   502                           
   503  0076                     ??___bmul:	
   504                           ; 1 bytes @ 0x6
   505                           
   506  0076                     ??___awdiv:	
   507                           ; 1 bytes @ 0x6
   508                           
   509  0076                     ??___awmod:	
   510                           ; 1 bytes @ 0x6
   511                           
   512                           
   513                           	psect	cstackBANK0
   514  004D                     __pcstackBANK0:	
   515                           ; 1 bytes @ 0x6
   516                           
   517  004D                     ??_LcdCmdWrite:
   518  004D                     ??_LcdDataWrite:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  004D                     ??_DhtStartSignal:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  004D                     ??_DhtCheckResponse:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  004D                     ??_DhtReadData:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  004D                     ??_setPWM:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  004D                     ?___bmul:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  004D                     ?___awdiv:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  004D                     ?___awmod:	
   540                           ; 2 bytes @ 0x0
   541                           
   542  004D                     ___bmul@multiplicand:	
   543                           ; 2 bytes @ 0x0
   544                           
   545  004D                     ___awdiv@divisor:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  004D                     ___awmod@divisor:	
   549                           ; 2 bytes @ 0x0
   550                           
   551                           
   552                           ; 2 bytes @ 0x0
   553  004D                     	ds	1
   554  004E                     setPWM@DC:
   555  004E                     ___bmul@product:	
   556                           ; 1 bytes @ 0x1
   557                           
   558                           
   559                           ; 1 bytes @ 0x1
   560  004E                     	ds	1
   561  004F                     LcdCmdWrite@cmd:
   562  004F                     LcdDataWrite@data:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  004F                     DhtReadData@i:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  004F                     ___bmul@multiplier:	
   569                           ; 1 bytes @ 0x2
   570                           
   571  004F                     ___awdiv@dividend:	
   572                           ; 1 bytes @ 0x2
   573                           
   574  004F                     ___awmod@dividend:	
   575                           ; 2 bytes @ 0x2
   576                           
   577                           
   578                           ; 2 bytes @ 0x2
   579  004F                     	ds	1
   580  0050                     ?_setPumpValue:
   581  0050                     ?_LcdMsgPrint:	
   582                           ; 1 bytes @ 0x3
   583                           
   584  0050                     DhtReadData@data:	
   585                           ; 1 bytes @ 0x3
   586                           
   587  0050                     setPumpValue@id_rh:	
   588                           ; 1 bytes @ 0x3
   589                           
   590  0050                     LcdMsgPrint@msg:	
   591                           ; 1 bytes @ 0x3
   592                           
   593                           
   594                           ; 2 bytes @ 0x3
   595  0050                     	ds	1
   596  0051                     setPumpValue@r_rh:
   597  0051                     ___awdiv@counter:	
   598                           ; 1 bytes @ 0x4
   599                           
   600  0051                     ___awmod@counter:	
   601                           ; 1 bytes @ 0x4
   602                           
   603                           
   604                           ; 1 bytes @ 0x4
   605  0051                     	ds	1
   606  0052                     LcdMsgPrint@i:
   607  0052                     setPumpValue@delta:	
   608                           ; 1 bytes @ 0x5
   609                           
   610  0052                     ___awdiv@sign:	
   611                           ; 1 bytes @ 0x5
   612                           
   613  0052                     ___awmod@sign:	
   614                           ; 1 bytes @ 0x5
   615                           
   616                           
   617                           ; 1 bytes @ 0x5
   618  0052                     	ds	1
   619  0053                     ___awdiv@quotient:
   620                           
   621                           ; 2 bytes @ 0x6
   622  0053                     	ds	2
   623  0055                     ??_DhtUpdateData:
   624                           
   625                           ; 1 bytes @ 0x8
   626  0055                     	ds	10
   627  005F                     ??_main:
   628                           
   629                           ; 1 bytes @ 0x12
   630  005F                     	ds	3
   631                           
   632                           	psect	maintext
   633  0130                     __pmaintext:	
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   636 ;;
   637 ;; *************** function _main *****************
   638 ;; Defined at:
   639 ;;		line 31 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : B00/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       3       0       0       0
   656 ;;      Totals:         0       3       0       0       0
   657 ;;Total ram usage:        3 bytes
   658 ;; Hardware stack levels required when called:    4
   659 ;; This function calls:
   660 ;;		_DhtUpdateData
   661 ;;		_LcdCmdWrite
   662 ;;		_LcdInit
   663 ;;		_LcdMsgPrint
   664 ;;		_configPWM
   665 ;;		_setPumpValue
   666 ;; This function is called by:
   667 ;;		Startup code after reset
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _main
   673  0130                     _main:
   674  0130                     l1560:	
   675                           ;incstack = 0
   676                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   677                           
   678                           
   679                           ;main.c: 35:     INTEDG = 1;
   680  0130  1683               	bsf	3,5	;RP0=1, select bank1
   681  0131  1303               	bcf	3,6	;RP1=0, select bank1
   682  0132  1701               	bsf	1,6	;volatile
   683                           
   684                           ;main.c: 36:     INTE = 1;
   685  0133  160B               	bsf	11,4	;volatile
   686                           
   687                           ;main.c: 37:     GIE = 1;
   688  0134  178B               	bsf	11,7	;volatile
   689  0135                     l1562:
   690                           
   691                           ;main.c: 42:     LcdInit();
   692  0135  120A  118A  2477  120A  118A  	fcall	_LcdInit
   693  013A                     l1564:
   694                           
   695                           ;main.c: 43:     configPWM();
   696  013A  120A  118A  2504  120A  118A  	fcall	_configPWM
   697  013F                     l1566:
   698                           
   699                           ;main.c: 46:     {;main.c: 47:         if(!status)
   700  013F  1876               	btfsc	_status/(0+8),_status& (0+7)
   701  0140  2942               	goto	u1101
   702  0141  2943               	goto	u1100
   703  0142                     u1101:
   704  0142  2981               	goto	l1580
   705  0143                     u1100:
   706  0143                     l1568:
   707                           
   708                           ;main.c: 48:         {;main.c: 49:             if(DhtUpdateData())
   709  0143  120A  118A  203E  120A  118A  	fcall	_DhtUpdateData
   710  0148  1C03               	btfss	3,0
   711  0149  294B               	goto	u1111
   712  014A  294C               	goto	u1110
   713  014B                     u1111:
   714  014B  296F               	goto	l1576
   715  014C                     u1110:
   716  014C                     l1570:
   717                           
   718                           ;main.c: 50:             {;main.c: 51:                 LcdCmdWrite(0x80);
   719  014C  3080               	movlw	128
   720  014D  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   721  0152                     l1572:
   722                           
   723                           ;main.c: 52:                 LcdMsgPrint(temp);
   724  0152  303F               	movlw	(low (_temp| 0))& (0+255)
   725  0153  1283               	bcf	3,5	;RP0=0, select bank0
   726  0154  1303               	bcf	3,6	;RP1=0, select bank0
   727  0155  00D0               	movwf	LcdMsgPrint@msg
   728  0156  3000               	movlw	0
   729  0157  00D1               	movwf	LcdMsgPrint@msg+1
   730  0158  120A  118A  2405  120A  118A  	fcall	_LcdMsgPrint
   731  015D                     l1574:
   732                           
   733                           ;main.c: 53:                 LcdCmdWrite(0xC0);
   734  015D  30C0               	movlw	192
   735  015E  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   736                           
   737                           ;main.c: 54:                 LcdMsgPrint(humi);
   738  0163  3031               	movlw	(low (_humi| 0))& (0+255)
   739  0164  1283               	bcf	3,5	;RP0=0, select bank0
   740  0165  1303               	bcf	3,6	;RP1=0, select bank0
   741  0166  00D0               	movwf	LcdMsgPrint@msg
   742  0167  3000               	movlw	0
   743  0168  00D1               	movwf	LcdMsgPrint@msg+1
   744  0169  120A  118A  2405  120A  118A  	fcall	_LcdMsgPrint
   745                           
   746                           ;main.c: 55:             }
   747  016E  29A9               	goto	l1586
   748  016F                     l1576:
   749                           
   750                           ;main.c: 57:             {;main.c: 58:                 LcdCmdWrite(0x80);
   751  016F  3080               	movlw	128
   752  0170  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   753  0175                     l1578:
   754                           
   755                           ;main.c: 59:                 LcdMsgPrint("Error");
   756  0175  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   757  0176  1283               	bcf	3,5	;RP0=0, select bank0
   758  0177  1303               	bcf	3,6	;RP1=0, select bank0
   759  0178  00D0               	movwf	LcdMsgPrint@msg
   760  0179  3080               	movlw	128
   761  017A  00D1               	movwf	LcdMsgPrint@msg+1
   762  017B  120A  118A  2405  120A  118A  	fcall	_LcdMsgPrint
   763  0180  29A9               	goto	l1586
   764  0181                     l1580:
   765                           
   766                           ;main.c: 63:         {;main.c: 64:             LcdCmdWrite(0x01);
   767  0181  3001               	movlw	1
   768  0182  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   769                           
   770                           ;main.c: 65:             LcdCmdWrite(0x80);
   771  0187  3080               	movlw	128
   772  0188  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   773  018D                     l1582:
   774                           
   775                           ;main.c: 66:             LcdMsgPrint(idea_temp);
   776  018D  3021               	movlw	(low (_idea_temp| 0))& (0+255)
   777  018E  1283               	bcf	3,5	;RP0=0, select bank0
   778  018F  1303               	bcf	3,6	;RP1=0, select bank0
   779  0190  00D0               	movwf	LcdMsgPrint@msg
   780  0191  3000               	movlw	0
   781  0192  00D1               	movwf	LcdMsgPrint@msg+1
   782  0193  120A  118A  2405  120A  118A  	fcall	_LcdMsgPrint
   783  0198                     l1584:
   784                           
   785                           ;main.c: 67:             LcdCmdWrite(0xC0);
   786  0198  30C0               	movlw	192
   787  0199  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   788                           
   789                           ;main.c: 68:             LcdMsgPrint(idea_humi);
   790  019E  30A0               	movlw	(low (_idea_humi| 0))& (0+255)
   791  019F  1283               	bcf	3,5	;RP0=0, select bank0
   792  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   793  01A1  00D0               	movwf	LcdMsgPrint@msg
   794  01A2  3000               	movlw	0
   795  01A3  00D1               	movwf	LcdMsgPrint@msg+1
   796  01A4  120A  118A  2405  120A  118A  	fcall	_LcdMsgPrint
   797  01A9                     l1586:
   798                           
   799                           ;main.c: 71:         setPumpValue(rh_byte1, ihumi);
   800  01A9  305F               	movlw	95
   801  01AA  00FF               	movwf	btemp+1
   802  01AB  087F               	movf	btemp+1,w
   803  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   804  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   805  01AE  00D0               	movwf	setPumpValue@id_rh
   806  01AF  0864               	movf	_rh_byte1,w
   807  01B0  120A  118A  239C  120A  118A  	fcall	_setPumpValue
   808  01B5                     l1588:
   809                           
   810                           ;main.c: 73:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   811  01B5  301A               	movlw	26
   812  01B6  1283               	bcf	3,5	;RP0=0, select bank0
   813  01B7  1303               	bcf	3,6	;RP1=0, select bank0
   814  01B8  00E1               	movwf	??_main+2
   815  01B9  305E               	movlw	94
   816  01BA  00E0               	movwf	??_main+1
   817  01BB  306D               	movlw	109
   818  01BC  00DF               	movwf	??_main
   819  01BD                     u1127:
   820  01BD  0BDF               	decfsz	??_main,f
   821  01BE  29BD               	goto	u1127
   822  01BF  0BE0               	decfsz	??_main+1,f
   823  01C0  29BD               	goto	u1127
   824  01C1  0BE1               	decfsz	??_main+2,f
   825  01C2  29BD               	goto	u1127
   826  01C3  29C4               	nop2
   827  01C4  293F               	goto	l1566
   828  01C5  120A  118A  2810   	ljmp	start
   829  01C8                     __end_of_main:
   830                           
   831                           	psect	text1
   832  039C                     __ptext1:	
   833 ;; *************** function _setPumpValue *****************
   834 ;; Defined at:
   835 ;;		line 88 in file "main.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;  r_rh            1    wreg     unsigned char 
   838 ;;  id_rh           1    3[BANK0 ] unsigned char 
   839 ;; Auto vars:     Size  Location     Type
   840 ;;  r_rh            1    4[BANK0 ] unsigned char 
   841 ;;  delta           1    5[BANK0 ] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   851 ;;      Params:         0       1       0       0       0
   852 ;;      Locals:         0       2       0       0       0
   853 ;;      Temps:          0       0       0       0       0
   854 ;;      Totals:         0       3       0       0       0
   855 ;;Total ram usage:        3 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    3
   858 ;; This function calls:
   859 ;;		___bmul
   860 ;;		_setPWM
   861 ;; This function is called by:
   862 ;;		_main
   863 ;; This function uses a non-reentrant model
   864 ;;
   865                           
   866                           
   867                           ;psect for function _setPumpValue
   868  039C                     _setPumpValue:
   869                           
   870                           ;incstack = 0
   871                           ; Regs used in _setPumpValue: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   872                           ;setPumpValue@r_rh stored from wreg
   873  039C  1283               	bcf	3,5	;RP0=0, select bank0
   874  039D  1303               	bcf	3,6	;RP1=0, select bank0
   875  039E  00D1               	movwf	setPumpValue@r_rh
   876  039F                     l1548:
   877                           
   878                           ;main.c: 88: void setPumpValue(unsigned char r_rh, unsigned char id_rh);main.c: 89: {;ma
      +                          in.c: 90:     char delta = 10*(id_rh - r_rh);
   879  039F  300A               	movlw	10
   880  03A0  00FF               	movwf	btemp+1
   881  03A1  087F               	movf	btemp+1,w
   882  03A2  00CD               	movwf	___bmul@multiplicand
   883  03A3  0851               	movf	setPumpValue@r_rh,w
   884  03A4  0250               	subwf	setPumpValue@id_rh,w
   885  03A5  120A  118A  24C4  120A  118A  	fcall	___bmul
   886  03AA  00FF               	movwf	btemp+1
   887  03AB  087F               	movf	btemp+1,w
   888  03AC  1283               	bcf	3,5	;RP0=0, select bank0
   889  03AD  1303               	bcf	3,6	;RP1=0, select bank0
   890  03AE  00D2               	movwf	setPumpValue@delta
   891  03AF                     l1550:
   892                           
   893                           ;main.c: 91:     if(delta > 0)
   894  03AF  0852               	movf	setPumpValue@delta,w
   895  03B0  1903               	btfsc	3,2
   896  03B1  2BB3               	goto	u1081
   897  03B2  2BB4               	goto	u1080
   898  03B3                     u1081:
   899  03B3  2BD1               	goto	l1558
   900  03B4                     u1080:
   901  03B4                     l1552:
   902                           
   903                           ;main.c: 92:     {;main.c: 93:         if(delta < 200) setPWM(10*delta);
   904  03B4  30C8               	movlw	200
   905  03B5  0252               	subwf	setPumpValue@delta,w
   906  03B6  1803               	skipnc
   907  03B7  2BB9               	goto	u1091
   908  03B8  2BBA               	goto	u1090
   909  03B9                     u1091:
   910  03B9  2BCA               	goto	l1556
   911  03BA                     u1090:
   912  03BA                     l1554:
   913  03BA  300A               	movlw	10
   914  03BB  00FF               	movwf	btemp+1
   915  03BC  087F               	movf	btemp+1,w
   916  03BD  00CD               	movwf	___bmul@multiplicand
   917  03BE  0852               	movf	setPumpValue@delta,w
   918  03BF  120A  118A  24C4  120A  118A  	fcall	___bmul
   919  03C4  120A  118A  2493  120A  118A  	fcall	_setPWM
   920  03C9  2BD7               	goto	l142
   921  03CA                     l1556:
   922  03CA  30C8               	movlw	200
   923  03CB  120A  118A  2493  120A  118A  	fcall	_setPWM
   924  03D0  2BD7               	goto	l142
   925  03D1                     l1558:
   926  03D1  3000               	movlw	0
   927  03D2  120A  118A  2493  120A  118A  	fcall	_setPWM
   928  03D7                     l142:
   929  03D7  0008               	return
   930  03D8                     __end_of_setPumpValue:
   931                           
   932                           	psect	text2
   933  0493                     __ptext2:	
   934 ;; *************** function _setPWM *****************
   935 ;; Defined at:
   936 ;;		line 29 in file "./pwm.h"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  DC              1    wreg     unsigned char 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  DC              1    1[BANK0 ] unsigned char 
   941 ;; Return value:  Size  Location     Type
   942 ;;                  1    wreg      void 
   943 ;; Registers used:
   944 ;;		wreg, status,2, status,0
   945 ;; Tracked objects:
   946 ;;		On entry : 0/0
   947 ;;		On exit  : 0/0
   948 ;;		Unchanged: 0/0
   949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   950 ;;      Params:         0       0       0       0       0
   951 ;;      Locals:         0       1       0       0       0
   952 ;;      Temps:          0       1       0       0       0
   953 ;;      Totals:         0       2       0       0       0
   954 ;;Total ram usage:        2 bytes
   955 ;; Hardware stack levels used:    1
   956 ;; Hardware stack levels required when called:    2
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_setPumpValue
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           
   965                           ;psect for function _setPWM
   966  0493                     _setPWM:
   967                           
   968                           ;incstack = 0
   969                           ; Regs used in _setPWM: [wreg+status,2+status,0]
   970                           ;setPWM@DC stored from wreg
   971  0493  1283               	bcf	3,5	;RP0=0, select bank0
   972  0494  1303               	bcf	3,6	;RP1=0, select bank0
   973  0495  00CE               	movwf	setPWM@DC
   974  0496                     l1448:
   975                           
   976                           ;./pwm.h: 29:     void setPWM(unsigned char DC);./pwm.h: 30:     {;./pwm.h: 32:         
      +                          CCP1Y = DC & (1<<0);
   977  0496  184E               	btfsc	setPWM@DC,0
   978  0497  2C99               	goto	u921
   979  0498  2C9D               	goto	u920
   980  0499                     u921:
   981  0499  1283               	bcf	3,5	;RP0=0, select bank0
   982  049A  1303               	bcf	3,6	;RP1=0, select bank0
   983  049B  1617               	bsf	23,4	;volatile
   984  049C  2CA0               	goto	u934
   985  049D                     u920:
   986  049D  1283               	bcf	3,5	;RP0=0, select bank0
   987  049E  1303               	bcf	3,6	;RP1=0, select bank0
   988  049F  1217               	bcf	23,4	;volatile
   989  04A0                     u934:
   990                           
   991                           ;./pwm.h: 33:         CCP1X = DC & (1<<1);
   992  04A0  1297               	bcf	23,5	;volatile
   993  04A1                     l1450:
   994                           
   995                           ;./pwm.h: 35:         CCPR1L = DC >> 2;
   996  04A1  084E               	movf	setPWM@DC,w
   997  04A2  00CD               	movwf	??_setPWM
   998  04A3  3002               	movlw	2
   999  04A4                     u945:
  1000  04A4  1003               	clrc
  1001  04A5  0CCD               	rrf	??_setPWM,f
  1002  04A6  3EFF               	addlw	-1
  1003  04A7  1D03               	skipz
  1004  04A8  2CA4               	goto	u945
  1005  04A9  084D               	movf	??_setPWM,w
  1006  04AA  0095               	movwf	21	;volatile
  1007  04AB                     l107:
  1008  04AB  0008               	return
  1009  04AC                     __end_of_setPWM:
  1010                           
  1011                           	psect	text3
  1012  04C4                     __ptext3:	
  1013 ;; *************** function ___bmul *****************
  1014 ;; Defined at:
  1015 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  1016 ;; Parameters:    Size  Location     Type
  1017 ;;  multiplier      1    wreg     unsigned char 
  1018 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1021 ;;  product         1    1[BANK0 ] unsigned char 
  1022 ;; Return value:  Size  Location     Type
  1023 ;;                  1    wreg      unsigned char 
  1024 ;; Registers used:
  1025 ;;		wreg, status,2, status,0, btemp+1
  1026 ;; Tracked objects:
  1027 ;;		On entry : 0/0
  1028 ;;		On exit  : 0/0
  1029 ;;		Unchanged: 0/0
  1030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1031 ;;      Params:         0       1       0       0       0
  1032 ;;      Locals:         0       2       0       0       0
  1033 ;;      Temps:          0       0       0       0       0
  1034 ;;      Totals:         0       3       0       0       0
  1035 ;;Total ram usage:        3 bytes
  1036 ;; Hardware stack levels used:    1
  1037 ;; Hardware stack levels required when called:    2
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_setPumpValue
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045                           
  1046                           ;psect for function ___bmul
  1047  04C4                     ___bmul:
  1048                           
  1049                           ;incstack = 0
  1050                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1051                           ;___bmul@multiplier stored from wreg
  1052  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  1053  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  1054  04C6  00CF               	movwf	___bmul@multiplier
  1055  04C7                     l1452:
  1056  04C7  01CE               	clrf	___bmul@product
  1057  04C8                     l1454:
  1058  04C8  1C4F               	btfss	___bmul@multiplier,0
  1059  04C9  2CCB               	goto	u951
  1060  04CA  2CCC               	goto	u950
  1061  04CB                     u951:
  1062  04CB  2CD0               	goto	l1458
  1063  04CC                     u950:
  1064  04CC                     l1456:
  1065  04CC  084D               	movf	___bmul@multiplicand,w
  1066  04CD  00FF               	movwf	btemp+1
  1067  04CE  087F               	movf	btemp+1,w
  1068  04CF  07CE               	addwf	___bmul@product,f
  1069  04D0                     l1458:
  1070  04D0  1003               	clrc
  1071  04D1  0DCD               	rlf	___bmul@multiplicand,f
  1072  04D2                     l1460:
  1073  04D2  1003               	clrc
  1074  04D3  0CCF               	rrf	___bmul@multiplier,f
  1075  04D4                     l1462:
  1076  04D4  084F               	movf	___bmul@multiplier,w
  1077  04D5  1D03               	btfss	3,2
  1078  04D6  2CD8               	goto	u961
  1079  04D7  2CD9               	goto	u960
  1080  04D8                     u961:
  1081  04D8  2CC8               	goto	l1454
  1082  04D9                     u960:
  1083  04D9                     l1464:
  1084  04D9  084E               	movf	___bmul@product,w
  1085  04DA                     l254:
  1086  04DA  0008               	return
  1087  04DB                     __end_of___bmul:
  1088                           
  1089                           	psect	text4
  1090  0504                     __ptext4:	
  1091 ;; *************** function _configPWM *****************
  1092 ;; Defined at:
  1093 ;;		line 10 in file "./pwm.h"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    2
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _configPWM
  1123  0504                     _configPWM:
  1124  0504                     l1280:	
  1125                           ;incstack = 0
  1126                           ; Regs used in _configPWM: [wreg]
  1127                           
  1128                           
  1129                           ;./pwm.h: 13:         CCP1M2 = 1;
  1130  0504  1283               	bcf	3,5	;RP0=0, select bank0
  1131  0505  1303               	bcf	3,6	;RP1=0, select bank0
  1132  0506  1517               	bsf	23,2	;volatile
  1133                           
  1134                           ;./pwm.h: 14:         CCP1M3 = 1;
  1135  0507  1597               	bsf	23,3	;volatile
  1136                           
  1137                           ;./pwm.h: 16:         TRISC2 = 0;
  1138  0508  1683               	bsf	3,5	;RP0=1, select bank1
  1139  0509  1303               	bcf	3,6	;RP1=0, select bank1
  1140  050A  1107               	bcf	7,2	;volatile
  1141                           
  1142                           ;./pwm.h: 18:         T2CKPS0 = 1;
  1143  050B  1283               	bcf	3,5	;RP0=0, select bank0
  1144  050C  1303               	bcf	3,6	;RP1=0, select bank0
  1145  050D  1412               	bsf	18,0	;volatile
  1146                           
  1147                           ;./pwm.h: 19:         T2CKPS1 = 1;
  1148  050E  1492               	bsf	18,1	;volatile
  1149                           
  1150                           ;./pwm.h: 20:         TMR2ON = 1;
  1151  050F  1512               	bsf	18,2	;volatile
  1152  0510                     l1282:
  1153                           
  1154                           ;./pwm.h: 23:         PR2 = 49;
  1155  0510  3031               	movlw	49
  1156  0511  1683               	bsf	3,5	;RP0=1, select bank1
  1157  0512  1303               	bcf	3,6	;RP1=0, select bank1
  1158  0513  0092               	movwf	18	;volatile
  1159  0514                     l104:
  1160  0514  0008               	return
  1161  0515                     __end_of_configPWM:
  1162                           
  1163                           	psect	text5
  1164  0405                     __ptext5:	
  1165 ;; *************** function _LcdMsgPrint *****************
  1166 ;; Defined at:
  1167 ;;		line 79 in file "./lcd.h"
  1168 ;; Parameters:    Size  Location     Type
  1169 ;;  msg             2    3[BANK0 ] PTR unsigned char 
  1170 ;;		 -> idea_humi(16), idea_temp(16), STR_1(6), humi(14), 
  1171 ;;		 -> temp(14), 
  1172 ;; Auto vars:     Size  Location     Type
  1173 ;;  i               1    5[BANK0 ] unsigned char 
  1174 ;; Return value:  Size  Location     Type
  1175 ;;                  1    wreg      void 
  1176 ;; Registers used:
  1177 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1178 ;; Tracked objects:
  1179 ;;		On entry : 0/0
  1180 ;;		On exit  : 0/0
  1181 ;;		Unchanged: 0/0
  1182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1183 ;;      Params:         0       2       0       0       0
  1184 ;;      Locals:         0       1       0       0       0
  1185 ;;      Temps:          0       0       0       0       0
  1186 ;;      Totals:         0       3       0       0       0
  1187 ;;Total ram usage:        3 bytes
  1188 ;; Hardware stack levels used:    1
  1189 ;; Hardware stack levels required when called:    3
  1190 ;; This function calls:
  1191 ;;		_LcdDataWrite
  1192 ;; This function is called by:
  1193 ;;		_main
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           
  1198                           ;psect for function _LcdMsgPrint
  1199  0405                     _LcdMsgPrint:
  1200  0405                     l1516:	
  1201                           ;incstack = 0
  1202                           ; Regs used in _LcdMsgPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1203                           
  1204                           
  1205                           ;./lcd.h: 79:     void LcdMsgPrint(char* msg);./lcd.h: 80:     {;./lcd.h: 81:         fo
      +                          r(char i = 0; msg[i] != '\0'; i++)
  1206  0405  1283               	bcf	3,5	;RP0=0, select bank0
  1207  0406  1303               	bcf	3,6	;RP1=0, select bank0
  1208  0407  01D2               	clrf	LcdMsgPrint@i
  1209  0408  2C20               	goto	l1522
  1210  0409                     l1518:
  1211                           
  1212                           ;./lcd.h: 82:         {;./lcd.h: 83:             LcdDataWrite(msg[i]);
  1213  0409  0852               	movf	LcdMsgPrint@i,w
  1214  040A  0750               	addwf	LcdMsgPrint@msg,w
  1215  040B  0084               	movwf	4
  1216  040C  0851               	movf	LcdMsgPrint@msg+1,w
  1217  040D  1803               	skipnc
  1218  040E  0A51               	incf	LcdMsgPrint@msg+1,w
  1219  040F  00FF               	movwf	btemp+1
  1220  0410  120A  118A  24DB  120A  118A  	fcall	stringtab
  1221  0415  120A  118A  235B  120A  118A  	fcall	_LcdDataWrite
  1222  041A                     l1520:
  1223                           
  1224                           ;./lcd.h: 84:         }
  1225  041A  3001               	movlw	1
  1226  041B  00FF               	movwf	btemp+1
  1227  041C  087F               	movf	btemp+1,w
  1228  041D  1283               	bcf	3,5	;RP0=0, select bank0
  1229  041E  1303               	bcf	3,6	;RP1=0, select bank0
  1230  041F  07D2               	addwf	LcdMsgPrint@i,f
  1231  0420                     l1522:
  1232  0420  0852               	movf	LcdMsgPrint@i,w
  1233  0421  0750               	addwf	LcdMsgPrint@msg,w
  1234  0422  0084               	movwf	4
  1235  0423  0851               	movf	LcdMsgPrint@msg+1,w
  1236  0424  1803               	skipnc
  1237  0425  0A51               	incf	LcdMsgPrint@msg+1,w
  1238  0426  00FF               	movwf	btemp+1
  1239  0427  120A  118A  24DB  120A  118A  	fcall	stringtab
  1240  042C  3A00               	xorlw	0
  1241  042D  1D03               	skipz
  1242  042E  2C30               	goto	u1061
  1243  042F  2C31               	goto	u1060
  1244  0430                     u1061:
  1245  0430  2C09               	goto	l1518
  1246  0431                     u1060:
  1247  0431                     l55:
  1248  0431  0008               	return
  1249  0432                     __end_of_LcdMsgPrint:
  1250                           
  1251                           	psect	text6
  1252  035B                     __ptext6:	
  1253 ;; *************** function _LcdDataWrite *****************
  1254 ;; Defined at:
  1255 ;;		line 61 in file "./lcd.h"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  data            1    wreg     unsigned char 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  data            1    2[BANK0 ] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      void 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0, btemp+1
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1269 ;;      Params:         0       0       0       0       0
  1270 ;;      Locals:         0       1       0       0       0
  1271 ;;      Temps:          0       2       0       0       0
  1272 ;;      Totals:         0       3       0       0       0
  1273 ;;Total ram usage:        3 bytes
  1274 ;; Hardware stack levels used:    1
  1275 ;; Hardware stack levels required when called:    2
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_LcdMsgPrint
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           
  1284                           ;psect for function _LcdDataWrite
  1285  035B                     _LcdDataWrite:
  1286                           
  1287                           ;incstack = 0
  1288                           ; Regs used in _LcdDataWrite: [wreg+status,2+status,0+btemp+1]
  1289                           ;LcdDataWrite@data stored from wreg
  1290  035B  1283               	bcf	3,5	;RP0=0, select bank0
  1291  035C  1303               	bcf	3,6	;RP1=0, select bank0
  1292  035D  00CF               	movwf	LcdDataWrite@data
  1293  035E                     l1382:
  1294                           
  1295                           ;./lcd.h: 61:     void LcdDataWrite(char data);./lcd.h: 62:     {;./lcd.h: 63:         P
      +                          ORTD = (data & 0xF0);
  1296  035E  084F               	movf	LcdDataWrite@data,w
  1297  035F  39F0               	andlw	240
  1298  0360  0088               	movwf	8	;volatile
  1299  0361                     l1384:
  1300                           
  1301                           ;./lcd.h: 64:         PORTD |= (1<<0);
  1302  0361  1408               	bsf	8,0	;volatile
  1303  0362                     l1386:
  1304                           
  1305                           ;./lcd.h: 65:         PORTD &= ~(1<<1);
  1306  0362  30FD               	movlw	253
  1307  0363  00FF               	movwf	btemp+1
  1308  0364  087F               	movf	btemp+1,w
  1309  0365  0588               	andwf	8,f	;volatile
  1310  0366                     l1388:
  1311                           
  1312                           ;./lcd.h: 66:         PORTD |= (1<<2);
  1313  0366  1508               	bsf	8,2	;volatile
  1314  0367                     l1390:
  1315                           
  1316                           ;./lcd.h: 67:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1317  0367  3041               	movlw	65
  1318  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1320  036A  00CE               	movwf	??_LcdDataWrite+1
  1321  036B  30ED               	movlw	237
  1322  036C  00CD               	movwf	??_LcdDataWrite
  1323  036D                     u1137:
  1324  036D  0BCD               	decfsz	??_LcdDataWrite,f
  1325  036E  2B6D               	goto	u1137
  1326  036F  0BCE               	decfsz	??_LcdDataWrite+1,f
  1327  0370  2B6D               	goto	u1137
  1328  0371  2B72               	nop2
  1329  0372                     l1392:
  1330                           
  1331                           ;./lcd.h: 68:         PORTD &= ~(1<<2);
  1332  0372  30FB               	movlw	251
  1333  0373  00FF               	movwf	btemp+1
  1334  0374  087F               	movf	btemp+1,w
  1335  0375  1283               	bcf	3,5	;RP0=0, select bank0
  1336  0376  1303               	bcf	3,6	;RP1=0, select bank0
  1337  0377  0588               	andwf	8,f	;volatile
  1338  0378                     l1394:
  1339                           
  1340                           ;./lcd.h: 70:         PORTD = ((data<<4) & 0xF0);
  1341  0378  084F               	movf	LcdDataWrite@data,w
  1342  0379  00CD               	movwf	??_LcdDataWrite
  1343  037A  3003               	movlw	3
  1344  037B                     u845:
  1345  037B  1003               	clrc
  1346  037C  0DCD               	rlf	??_LcdDataWrite,f
  1347  037D  3EFF               	addlw	-1
  1348  037E  1D03               	skipz
  1349  037F  2B7B               	goto	u845
  1350  0380  1003               	clrc
  1351  0381  0D4D               	rlf	??_LcdDataWrite,w
  1352  0382  39F0               	andlw	240
  1353  0383  0088               	movwf	8	;volatile
  1354  0384                     l1396:
  1355                           
  1356                           ;./lcd.h: 71:         PORTD |= (1<<0);
  1357  0384  1408               	bsf	8,0	;volatile
  1358  0385                     l1398:
  1359                           
  1360                           ;./lcd.h: 72:         PORTD &= ~(1<<1);
  1361  0385  30FD               	movlw	253
  1362  0386  00FF               	movwf	btemp+1
  1363  0387  087F               	movf	btemp+1,w
  1364  0388  0588               	andwf	8,f	;volatile
  1365  0389                     l1400:
  1366                           
  1367                           ;./lcd.h: 73:         PORTD |= (1<<2);
  1368  0389  1508               	bsf	8,2	;volatile
  1369  038A                     l1402:
  1370                           
  1371                           ;./lcd.h: 74:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1372  038A  3041               	movlw	65
  1373  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1374  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1375  038D  00CE               	movwf	??_LcdDataWrite+1
  1376  038E  30ED               	movlw	237
  1377  038F  00CD               	movwf	??_LcdDataWrite
  1378  0390                     u1147:
  1379  0390  0BCD               	decfsz	??_LcdDataWrite,f
  1380  0391  2B90               	goto	u1147
  1381  0392  0BCE               	decfsz	??_LcdDataWrite+1,f
  1382  0393  2B90               	goto	u1147
  1383  0394  2B95               	nop2
  1384  0395                     l1404:
  1385                           
  1386                           ;./lcd.h: 75:         PORTD &= ~(1<<2);
  1387  0395  30FB               	movlw	251
  1388  0396  00FF               	movwf	btemp+1
  1389  0397  087F               	movf	btemp+1,w
  1390  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1392  039A  0588               	andwf	8,f	;volatile
  1393  039B                     l49:
  1394  039B  0008               	return
  1395  039C                     __end_of_LcdDataWrite:
  1396                           
  1397                           	psect	text7
  1398  0477                     __ptext7:	
  1399 ;; *************** function _LcdInit *****************
  1400 ;; Defined at:
  1401 ;;		line 50 in file "./lcd.h"
  1402 ;; Parameters:    Size  Location     Type
  1403 ;;		None
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;		None
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1415 ;;      Params:         0       0       0       0       0
  1416 ;;      Locals:         0       0       0       0       0
  1417 ;;      Temps:          0       0       0       0       0
  1418 ;;      Totals:         0       0       0       0       0
  1419 ;;Total ram usage:        0 bytes
  1420 ;; Hardware stack levels used:    1
  1421 ;; Hardware stack levels required when called:    3
  1422 ;; This function calls:
  1423 ;;		_LcdCmdWrite
  1424 ;; This function is called by:
  1425 ;;		_main
  1426 ;; This function uses a non-reentrant model
  1427 ;;
  1428                           
  1429                           
  1430                           ;psect for function _LcdInit
  1431  0477                     _LcdInit:
  1432  0477                     l1506:	
  1433                           ;incstack = 0
  1434                           ; Regs used in _LcdInit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1435                           
  1436                           
  1437                           ;./lcd.h: 52:         TRISD = 0x00;
  1438  0477  1683               	bsf	3,5	;RP0=1, select bank1
  1439  0478  1303               	bcf	3,6	;RP1=0, select bank1
  1440  0479  0188               	clrf	8	;volatile
  1441  047A                     l1508:
  1442                           
  1443                           ;./lcd.h: 53:         LcdCmdWrite(0x02);
  1444  047A  3002               	movlw	2
  1445  047B  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
  1446  0480                     l1510:
  1447                           
  1448                           ;./lcd.h: 54:         LcdCmdWrite(0x28);
  1449  0480  3028               	movlw	40
  1450  0481  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
  1451  0486                     l1512:
  1452                           
  1453                           ;./lcd.h: 55:         LcdCmdWrite(0x0E);
  1454  0486  300E               	movlw	14
  1455  0487  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
  1456  048C                     l1514:
  1457                           
  1458                           ;./lcd.h: 56:         LcdCmdWrite(0x01);
  1459  048C  3001               	movlw	1
  1460  048D  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
  1461  0492                     l46:
  1462  0492  0008               	return
  1463  0493                     __end_of_LcdInit:
  1464                           
  1465                           	psect	text8
  1466  028C                     __ptext8:	
  1467 ;; *************** function _LcdCmdWrite *****************
  1468 ;; Defined at:
  1469 ;;		line 32 in file "./lcd.h"
  1470 ;; Parameters:    Size  Location     Type
  1471 ;;  cmd             1    wreg     unsigned char 
  1472 ;; Auto vars:     Size  Location     Type
  1473 ;;  cmd             1    2[BANK0 ] unsigned char 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  1    wreg      void 
  1476 ;; Registers used:
  1477 ;;		wreg, status,2, status,0, btemp+1
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1483 ;;      Params:         0       0       0       0       0
  1484 ;;      Locals:         0       1       0       0       0
  1485 ;;      Temps:          0       2       0       0       0
  1486 ;;      Totals:         0       3       0       0       0
  1487 ;;Total ram usage:        3 bytes
  1488 ;; Hardware stack levels used:    1
  1489 ;; Hardware stack levels required when called:    2
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_LcdInit
  1494 ;;		_main
  1495 ;; This function uses a non-reentrant model
  1496 ;;
  1497                           
  1498                           
  1499                           ;psect for function _LcdCmdWrite
  1500  028C                     _LcdCmdWrite:
  1501                           
  1502                           ;incstack = 0
  1503                           ; Regs used in _LcdCmdWrite: [wreg+status,2+status,0+btemp+1]
  1504                           ;LcdCmdWrite@cmd stored from wreg
  1505  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1506  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1507  028E  00CF               	movwf	LcdCmdWrite@cmd
  1508  028F                     l1358:
  1509                           
  1510                           ;./lcd.h: 32:     void LcdCmdWrite(char cmd);./lcd.h: 33:     {;./lcd.h: 34:         POR
      +                          TD = (cmd & 0xF0);
  1511  028F  084F               	movf	LcdCmdWrite@cmd,w
  1512  0290  39F0               	andlw	240
  1513  0291  0088               	movwf	8	;volatile
  1514  0292                     l1360:
  1515                           
  1516                           ;./lcd.h: 35:         PORTD &= ~(1<<0);
  1517  0292  30FE               	movlw	254
  1518  0293  00FF               	movwf	btemp+1
  1519  0294  087F               	movf	btemp+1,w
  1520  0295  0588               	andwf	8,f	;volatile
  1521  0296                     l1362:
  1522                           
  1523                           ;./lcd.h: 36:         PORTD &= ~(1<<1);
  1524  0296  30FD               	movlw	253
  1525  0297  00FF               	movwf	btemp+1
  1526  0298  087F               	movf	btemp+1,w
  1527  0299  0588               	andwf	8,f	;volatile
  1528  029A                     l1364:
  1529                           
  1530                           ;./lcd.h: 37:         PORTD |= (1<<2);
  1531  029A  1508               	bsf	8,2	;volatile
  1532  029B                     l1366:
  1533                           
  1534                           ;./lcd.h: 38:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1535  029B  3041               	movlw	65
  1536  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1537  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1538  029E  00CE               	movwf	??_LcdCmdWrite+1
  1539  029F  30ED               	movlw	237
  1540  02A0  00CD               	movwf	??_LcdCmdWrite
  1541  02A1                     u1157:
  1542  02A1  0BCD               	decfsz	??_LcdCmdWrite,f
  1543  02A2  2AA1               	goto	u1157
  1544  02A3  0BCE               	decfsz	??_LcdCmdWrite+1,f
  1545  02A4  2AA1               	goto	u1157
  1546  02A5  2AA6               	nop2
  1547  02A6                     l1368:
  1548                           
  1549                           ;./lcd.h: 39:         PORTD &= ~(1<<2);
  1550  02A6  30FB               	movlw	251
  1551  02A7  00FF               	movwf	btemp+1
  1552  02A8  087F               	movf	btemp+1,w
  1553  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1554  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1555  02AB  0588               	andwf	8,f	;volatile
  1556  02AC                     l1370:
  1557                           
  1558                           ;./lcd.h: 41:         PORTD = ((cmd<<4) & 0xF0);
  1559  02AC  084F               	movf	LcdCmdWrite@cmd,w
  1560  02AD  00CD               	movwf	??_LcdCmdWrite
  1561  02AE  3003               	movlw	3
  1562  02AF                     u835:
  1563  02AF  1003               	clrc
  1564  02B0  0DCD               	rlf	??_LcdCmdWrite,f
  1565  02B1  3EFF               	addlw	-1
  1566  02B2  1D03               	skipz
  1567  02B3  2AAF               	goto	u835
  1568  02B4  1003               	clrc
  1569  02B5  0D4D               	rlf	??_LcdCmdWrite,w
  1570  02B6  39F0               	andlw	240
  1571  02B7  0088               	movwf	8	;volatile
  1572  02B8                     l1372:
  1573                           
  1574                           ;./lcd.h: 42:         PORTD &= ~(1<<0);
  1575  02B8  30FE               	movlw	254
  1576  02B9  00FF               	movwf	btemp+1
  1577  02BA  087F               	movf	btemp+1,w
  1578  02BB  0588               	andwf	8,f	;volatile
  1579  02BC                     l1374:
  1580                           
  1581                           ;./lcd.h: 43:         PORTD &= ~(1<<1);
  1582  02BC  30FD               	movlw	253
  1583  02BD  00FF               	movwf	btemp+1
  1584  02BE  087F               	movf	btemp+1,w
  1585  02BF  0588               	andwf	8,f	;volatile
  1586  02C0                     l1376:
  1587                           
  1588                           ;./lcd.h: 44:         PORTD |= (1<<2);
  1589  02C0  1508               	bsf	8,2	;volatile
  1590  02C1                     l1378:
  1591                           
  1592                           ;./lcd.h: 45:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1593  02C1  3041               	movlw	65
  1594  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1595  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1596  02C4  00CE               	movwf	??_LcdCmdWrite+1
  1597  02C5  30ED               	movlw	237
  1598  02C6  00CD               	movwf	??_LcdCmdWrite
  1599  02C7                     u1167:
  1600  02C7  0BCD               	decfsz	??_LcdCmdWrite,f
  1601  02C8  2AC7               	goto	u1167
  1602  02C9  0BCE               	decfsz	??_LcdCmdWrite+1,f
  1603  02CA  2AC7               	goto	u1167
  1604  02CB  2ACC               	nop2
  1605  02CC                     l1380:
  1606                           
  1607                           ;./lcd.h: 46:         PORTD &= ~(1<<2);
  1608  02CC  30FB               	movlw	251
  1609  02CD  00FF               	movwf	btemp+1
  1610  02CE  087F               	movf	btemp+1,w
  1611  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1612  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1613  02D1  0588               	andwf	8,f	;volatile
  1614  02D2                     l43:
  1615  02D2  0008               	return
  1616  02D3                     __end_of_LcdCmdWrite:
  1617                           
  1618                           	psect	text9
  1619  003E                     __ptext9:	
  1620 ;; *************** function _DhtUpdateData *****************
  1621 ;; Defined at:
  1622 ;;		line 61 in file "./dht11.h"
  1623 ;; Parameters:    Size  Location     Type
  1624 ;;		None
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;		None
  1627 ;; Return value:  Size  Location     Type
  1628 ;;		None               void
  1629 ;; Registers used:
  1630 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1631 ;; Tracked objects:
  1632 ;;		On entry : 0/0
  1633 ;;		On exit  : 0/0
  1634 ;;		Unchanged: 0/0
  1635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1636 ;;      Params:         0       0       0       0       0
  1637 ;;      Locals:         0       0       0       0       0
  1638 ;;      Temps:          0      10       0       0       0
  1639 ;;      Totals:         0      10       0       0       0
  1640 ;;Total ram usage:       10 bytes
  1641 ;; Hardware stack levels used:    1
  1642 ;; Hardware stack levels required when called:    3
  1643 ;; This function calls:
  1644 ;;		_DhtCheckResponse
  1645 ;;		_DhtReadData
  1646 ;;		_DhtStartSignal
  1647 ;;		___awdiv
  1648 ;;		___awmod
  1649 ;; This function is called by:
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           
  1655                           ;psect for function _DhtUpdateData
  1656  003E                     _DhtUpdateData:
  1657  003E                     l1524:	
  1658                           ;incstack = 0
  1659                           ; Regs used in _DhtUpdateData: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1660                           
  1661                           
  1662                           ;./dht11.h: 63:         DhtStartSignal();
  1663  003E  120A  118A  2459  120A  118A  	fcall	_DhtStartSignal
  1664                           
  1665                           ;./dht11.h: 64:         DhtCheckResponse();
  1666  0043  120A  118A  2432  120A  118A  	fcall	_DhtCheckResponse
  1667  0048                     l1526:
  1668                           
  1669                           ;./dht11.h: 66:         rh_byte1 = DhtReadData();
  1670  0048  120A  118A  22D3  120A  118A  	fcall	_DhtReadData
  1671  004D  00FF               	movwf	btemp+1
  1672  004E  087F               	movf	btemp+1,w
  1673  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1674  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1675  0051  00E4               	movwf	_rh_byte1
  1676  0052                     l1528:
  1677                           
  1678                           ;./dht11.h: 67:         rh_byte2 = DhtReadData();
  1679  0052  120A  118A  22D3  120A  118A  	fcall	_DhtReadData
  1680  0057  00FF               	movwf	btemp+1
  1681  0058  087F               	movf	btemp+1,w
  1682  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1683  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1684  005B  00E3               	movwf	_rh_byte2
  1685  005C                     l1530:
  1686                           
  1687                           ;./dht11.h: 68:         t_byte1 = DhtReadData();
  1688  005C  120A  118A  22D3  120A  118A  	fcall	_DhtReadData
  1689  0061  00FF               	movwf	btemp+1
  1690  0062  087F               	movf	btemp+1,w
  1691  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1692  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1693  0065  00E6               	movwf	_t_byte1
  1694  0066                     l1532:
  1695                           
  1696                           ;./dht11.h: 69:         t_byte2 = DhtReadData();
  1697  0066  120A  118A  22D3  120A  118A  	fcall	_DhtReadData
  1698  006B  00FF               	movwf	btemp+1
  1699  006C  087F               	movf	btemp+1,w
  1700  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1701  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1702  006F  00E5               	movwf	_t_byte2
  1703  0070                     l1534:
  1704                           
  1705                           ;./dht11.h: 70:         check_sum = DhtReadData();
  1706  0070  120A  118A  22D3  120A  118A  	fcall	_DhtReadData
  1707  0075  00FF               	movwf	btemp+1
  1708  0076  087F               	movf	btemp+1,w
  1709  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0079  00E2               	movwf	_check_sum
  1712  007A                     l1536:
  1713                           
  1714                           ;./dht11.h: 72:         if(check_sum == ((rh_byte1 + rh_byte2 + t_byte1 + t_byte2) & 0xF
      +                          F))
  1715  007A  0864               	movf	_rh_byte1,w
  1716  007B  0763               	addwf	_rh_byte2,w
  1717  007C  00D5               	movwf	??_DhtUpdateData
  1718  007D  01D6               	clrf	??_DhtUpdateData+1
  1719  007E  0DD6               	rlf	??_DhtUpdateData+1,f
  1720  007F  0866               	movf	_t_byte1,w
  1721  0080  0755               	addwf	??_DhtUpdateData,w
  1722  0081  00D7               	movwf	??_DhtUpdateData+2
  1723  0082  3000               	movlw	0
  1724  0083  1803               	skipnc
  1725  0084  3001               	movlw	1
  1726  0085  0756               	addwf	??_DhtUpdateData+1,w
  1727  0086  00D8               	movwf	??_DhtUpdateData+3
  1728  0087  0865               	movf	_t_byte2,w
  1729  0088  0757               	addwf	??_DhtUpdateData+2,w
  1730  0089  00D9               	movwf	??_DhtUpdateData+4
  1731  008A  3000               	movlw	0
  1732  008B  1803               	skipnc
  1733  008C  3001               	movlw	1
  1734  008D  0758               	addwf	??_DhtUpdateData+3,w
  1735  008E  00DA               	movwf	??_DhtUpdateData+5
  1736  008F  30FF               	movlw	255
  1737  0090  0559               	andwf	??_DhtUpdateData+4,w
  1738  0091  00DB               	movwf	??_DhtUpdateData+6
  1739  0092  3000               	movlw	0
  1740  0093  055A               	andwf	??_DhtUpdateData+5,w
  1741  0094  00DC               	movwf	??_DhtUpdateData+7
  1742  0095  0862               	movf	_check_sum,w
  1743  0096  00DD               	movwf	??_DhtUpdateData+8
  1744  0097  01DE               	clrf	??_DhtUpdateData+9
  1745  0098  085C               	movf	??_DhtUpdateData+7,w
  1746  0099  065E               	xorwf	??_DhtUpdateData+9,w
  1747  009A  1D03               	skipz
  1748  009B  289E               	goto	u1075
  1749  009C  085B               	movf	??_DhtUpdateData+6,w
  1750  009D  065D               	xorwf	??_DhtUpdateData+8,w
  1751  009E                     u1075:
  1752  009E  1D03               	skipz
  1753  009F  28A1               	goto	u1071
  1754  00A0  28A2               	goto	u1070
  1755  00A1                     u1071:
  1756  00A1  292E               	goto	l1544
  1757  00A2                     u1070:
  1758  00A2                     l1538:
  1759                           
  1760                           ;./dht11.h: 73:         {;./dht11.h: 74:             temp[7] = t_byte1 / 10 + 48;
  1761  00A2  300A               	movlw	10
  1762  00A3  00CD               	movwf	___awdiv@divisor
  1763  00A4  3000               	movlw	0
  1764  00A5  00CE               	movwf	___awdiv@divisor+1
  1765  00A6  0866               	movf	_t_byte1,w
  1766  00A7  00D5               	movwf	??_DhtUpdateData
  1767  00A8  01D6               	clrf	??_DhtUpdateData+1
  1768  00A9  0855               	movf	??_DhtUpdateData,w
  1769  00AA  00CF               	movwf	___awdiv@dividend
  1770  00AB  0856               	movf	??_DhtUpdateData+1,w
  1771  00AC  00D0               	movwf	___awdiv@dividend+1
  1772  00AD  120A  118A  21C8  120A  118A  	fcall	___awdiv
  1773  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1774  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1775  00B4  084D               	movf	?___awdiv,w
  1776  00B5  3E30               	addlw	48
  1777  00B6  00FF               	movwf	btemp+1
  1778  00B7  087F               	movf	btemp+1,w
  1779  00B8  00C6               	movwf	_temp+7
  1780                           
  1781                           ;./dht11.h: 75:             temp[8] = t_byte1 % 10 + 48;
  1782  00B9  300A               	movlw	10
  1783  00BA  00CD               	movwf	___awmod@divisor
  1784  00BB  3000               	movlw	0
  1785  00BC  00CE               	movwf	___awmod@divisor+1
  1786  00BD  0866               	movf	_t_byte1,w
  1787  00BE  00D5               	movwf	??_DhtUpdateData
  1788  00BF  01D6               	clrf	??_DhtUpdateData+1
  1789  00C0  0855               	movf	??_DhtUpdateData,w
  1790  00C1  00CF               	movwf	___awmod@dividend
  1791  00C2  0856               	movf	??_DhtUpdateData+1,w
  1792  00C3  00D0               	movwf	___awmod@dividend+1
  1793  00C4  120A  118A  2231  120A  118A  	fcall	___awmod
  1794  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1795  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1796  00CB  084D               	movf	?___awmod,w
  1797  00CC  3E30               	addlw	48
  1798  00CD  00FF               	movwf	btemp+1
  1799  00CE  087F               	movf	btemp+1,w
  1800  00CF  00C7               	movwf	_temp+8
  1801                           
  1802                           ;./dht11.h: 76:             temp[10] = t_byte2 / 10 + 48;
  1803  00D0  300A               	movlw	10
  1804  00D1  00CD               	movwf	___awdiv@divisor
  1805  00D2  3000               	movlw	0
  1806  00D3  00CE               	movwf	___awdiv@divisor+1
  1807  00D4  0865               	movf	_t_byte2,w
  1808  00D5  00D5               	movwf	??_DhtUpdateData
  1809  00D6  01D6               	clrf	??_DhtUpdateData+1
  1810  00D7  0855               	movf	??_DhtUpdateData,w
  1811  00D8  00CF               	movwf	___awdiv@dividend
  1812  00D9  0856               	movf	??_DhtUpdateData+1,w
  1813  00DA  00D0               	movwf	___awdiv@dividend+1
  1814  00DB  120A  118A  21C8  120A  118A  	fcall	___awdiv
  1815  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1816  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1817  00E2  084D               	movf	?___awdiv,w
  1818  00E3  3E30               	addlw	48
  1819  00E4  00FF               	movwf	btemp+1
  1820  00E5  087F               	movf	btemp+1,w
  1821  00E6  00C9               	movwf	_temp+10
  1822                           
  1823                           ;./dht11.h: 78:             humi[7] = rh_byte1 / 10 + 48;
  1824  00E7  300A               	movlw	10
  1825  00E8  00CD               	movwf	___awdiv@divisor
  1826  00E9  3000               	movlw	0
  1827  00EA  00CE               	movwf	___awdiv@divisor+1
  1828  00EB  0864               	movf	_rh_byte1,w
  1829  00EC  00D5               	movwf	??_DhtUpdateData
  1830  00ED  01D6               	clrf	??_DhtUpdateData+1
  1831  00EE  0855               	movf	??_DhtUpdateData,w
  1832  00EF  00CF               	movwf	___awdiv@dividend
  1833  00F0  0856               	movf	??_DhtUpdateData+1,w
  1834  00F1  00D0               	movwf	___awdiv@dividend+1
  1835  00F2  120A  118A  21C8  120A  118A  	fcall	___awdiv
  1836  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1837  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1838  00F9  084D               	movf	?___awdiv,w
  1839  00FA  3E30               	addlw	48
  1840  00FB  00FF               	movwf	btemp+1
  1841  00FC  087F               	movf	btemp+1,w
  1842  00FD  00B8               	movwf	_humi+7
  1843                           
  1844                           ;./dht11.h: 79:             humi[8] = rh_byte1 % 10 + 48;
  1845  00FE  300A               	movlw	10
  1846  00FF  00CD               	movwf	___awmod@divisor
  1847  0100  3000               	movlw	0
  1848  0101  00CE               	movwf	___awmod@divisor+1
  1849  0102  0864               	movf	_rh_byte1,w
  1850  0103  00D5               	movwf	??_DhtUpdateData
  1851  0104  01D6               	clrf	??_DhtUpdateData+1
  1852  0105  0855               	movf	??_DhtUpdateData,w
  1853  0106  00CF               	movwf	___awmod@dividend
  1854  0107  0856               	movf	??_DhtUpdateData+1,w
  1855  0108  00D0               	movwf	___awmod@dividend+1
  1856  0109  120A  118A  2231  120A  118A  	fcall	___awmod
  1857  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1858  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0110  084D               	movf	?___awmod,w
  1860  0111  3E30               	addlw	48
  1861  0112  00FF               	movwf	btemp+1
  1862  0113  087F               	movf	btemp+1,w
  1863  0114  00B9               	movwf	_humi+8
  1864                           
  1865                           ;./dht11.h: 80:             humi[10] = rh_byte2 / 10 + 48;
  1866  0115  300A               	movlw	10
  1867  0116  00CD               	movwf	___awdiv@divisor
  1868  0117  3000               	movlw	0
  1869  0118  00CE               	movwf	___awdiv@divisor+1
  1870  0119  0863               	movf	_rh_byte2,w
  1871  011A  00D5               	movwf	??_DhtUpdateData
  1872  011B  01D6               	clrf	??_DhtUpdateData+1
  1873  011C  0855               	movf	??_DhtUpdateData,w
  1874  011D  00CF               	movwf	___awdiv@dividend
  1875  011E  0856               	movf	??_DhtUpdateData+1,w
  1876  011F  00D0               	movwf	___awdiv@dividend+1
  1877  0120  120A  118A  21C8  120A  118A  	fcall	___awdiv
  1878  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0127  084D               	movf	?___awdiv,w
  1881  0128  3E30               	addlw	48
  1882  0129  00FF               	movwf	btemp+1
  1883  012A  087F               	movf	btemp+1,w
  1884  012B  00BB               	movwf	_humi+10
  1885  012C                     l1540:
  1886                           
  1887                           ;./dht11.h: 82:             return 1;
  1888  012C  1403               	setc
  1889  012D  292F               	goto	l101
  1890  012E                     l1544:
  1891                           
  1892                           ;./dht11.h: 84:         return 0;
  1893  012E  1003               	clrc
  1894  012F                     l101:
  1895  012F  0008               	return
  1896  0130                     __end_of_DhtUpdateData:
  1897                           
  1898                           	psect	text10
  1899  0231                     __ptext10:	
  1900 ;; *************** function ___awmod *****************
  1901 ;; Defined at:
  1902 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  divisor         2    0[BANK0 ] int 
  1905 ;;  dividend        2    2[BANK0 ] int 
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  sign            1    5[BANK0 ] unsigned char 
  1908 ;;  counter         1    4[BANK0 ] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  2    0[BANK0 ] int 
  1911 ;; Registers used:
  1912 ;;		wreg, status,2, status,0, btemp+1
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1918 ;;      Params:         0       4       0       0       0
  1919 ;;      Locals:         0       2       0       0       0
  1920 ;;      Temps:          0       0       0       0       0
  1921 ;;      Totals:         0       6       0       0       0
  1922 ;;Total ram usage:        6 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    2
  1925 ;; This function calls:
  1926 ;;		Nothing
  1927 ;; This function is called by:
  1928 ;;		_DhtUpdateData
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           
  1933                           ;psect for function ___awmod
  1934  0231                     ___awmod:
  1935  0231                     l1468:	
  1936                           ;incstack = 0
  1937                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1938                           
  1939  0231  1283               	bcf	3,5	;RP0=0, select bank0
  1940  0232  1303               	bcf	3,6	;RP1=0, select bank0
  1941  0233  01D2               	clrf	___awmod@sign
  1942  0234                     l1470:
  1943  0234  1FD0               	btfss	___awmod@dividend+1,7
  1944  0235  2A37               	goto	u971
  1945  0236  2A38               	goto	u970
  1946  0237                     u971:
  1947  0237  2A3F               	goto	l1476
  1948  0238                     u970:
  1949  0238                     l1472:
  1950  0238  09CF               	comf	___awmod@dividend,f
  1951  0239  09D0               	comf	___awmod@dividend+1,f
  1952  023A  0ACF               	incf	___awmod@dividend,f
  1953  023B  1903               	skipnz
  1954  023C  0AD0               	incf	___awmod@dividend+1,f
  1955  023D                     l1474:
  1956  023D  01D2               	clrf	___awmod@sign
  1957  023E  0AD2               	incf	___awmod@sign,f
  1958  023F                     l1476:
  1959  023F  1FCE               	btfss	___awmod@divisor+1,7
  1960  0240  2A42               	goto	u981
  1961  0241  2A43               	goto	u980
  1962  0242                     u981:
  1963  0242  2A48               	goto	l1480
  1964  0243                     u980:
  1965  0243                     l1478:
  1966  0243  09CD               	comf	___awmod@divisor,f
  1967  0244  09CE               	comf	___awmod@divisor+1,f
  1968  0245  0ACD               	incf	___awmod@divisor,f
  1969  0246  1903               	skipnz
  1970  0247  0ACE               	incf	___awmod@divisor+1,f
  1971  0248                     l1480:
  1972  0248  084D               	movf	___awmod@divisor,w
  1973  0249  044E               	iorwf	___awmod@divisor+1,w
  1974  024A  1903               	btfsc	3,2
  1975  024B  2A4D               	goto	u991
  1976  024C  2A4E               	goto	u990
  1977  024D                     u991:
  1978  024D  2A7D               	goto	l1498
  1979  024E                     u990:
  1980  024E                     l1482:
  1981  024E  01D1               	clrf	___awmod@counter
  1982  024F  0AD1               	incf	___awmod@counter,f
  1983  0250  2A5C               	goto	l1488
  1984  0251                     l1484:
  1985  0251  3001               	movlw	1
  1986  0252                     u1005:
  1987  0252  1003               	clrc
  1988  0253  0DCD               	rlf	___awmod@divisor,f
  1989  0254  0DCE               	rlf	___awmod@divisor+1,f
  1990  0255  3EFF               	addlw	-1
  1991  0256  1D03               	skipz
  1992  0257  2A52               	goto	u1005
  1993  0258                     l1486:
  1994  0258  3001               	movlw	1
  1995  0259  00FF               	movwf	btemp+1
  1996  025A  087F               	movf	btemp+1,w
  1997  025B  07D1               	addwf	___awmod@counter,f
  1998  025C                     l1488:
  1999  025C  1FCE               	btfss	___awmod@divisor+1,7
  2000  025D  2A5F               	goto	u1011
  2001  025E  2A60               	goto	u1010
  2002  025F                     u1011:
  2003  025F  2A51               	goto	l1484
  2004  0260                     u1010:
  2005  0260                     l1490:
  2006  0260  084E               	movf	___awmod@divisor+1,w
  2007  0261  0250               	subwf	___awmod@dividend+1,w
  2008  0262  1D03               	skipz
  2009  0263  2A66               	goto	u1025
  2010  0264  084D               	movf	___awmod@divisor,w
  2011  0265  024F               	subwf	___awmod@dividend,w
  2012  0266                     u1025:
  2013  0266  1C03               	skipc
  2014  0267  2A69               	goto	u1021
  2015  0268  2A6A               	goto	u1020
  2016  0269                     u1021:
  2017  0269  2A70               	goto	l1494
  2018  026A                     u1020:
  2019  026A                     l1492:
  2020  026A  084D               	movf	___awmod@divisor,w
  2021  026B  02CF               	subwf	___awmod@dividend,f
  2022  026C  084E               	movf	___awmod@divisor+1,w
  2023  026D  1C03               	skipc
  2024  026E  03D0               	decf	___awmod@dividend+1,f
  2025  026F  02D0               	subwf	___awmod@dividend+1,f
  2026  0270                     l1494:
  2027  0270  3001               	movlw	1
  2028  0271                     u1035:
  2029  0271  1003               	clrc
  2030  0272  0CCE               	rrf	___awmod@divisor+1,f
  2031  0273  0CCD               	rrf	___awmod@divisor,f
  2032  0274  3EFF               	addlw	-1
  2033  0275  1D03               	skipz
  2034  0276  2A71               	goto	u1035
  2035  0277                     l1496:
  2036  0277  3001               	movlw	1
  2037  0278  02D1               	subwf	___awmod@counter,f
  2038  0279  1D03               	btfss	3,2
  2039  027A  2A7C               	goto	u1041
  2040  027B  2A7D               	goto	u1040
  2041  027C                     u1041:
  2042  027C  2A60               	goto	l1490
  2043  027D                     u1040:
  2044  027D                     l1498:
  2045  027D  0852               	movf	___awmod@sign,w
  2046  027E  1903               	btfsc	3,2
  2047  027F  2A81               	goto	u1051
  2048  0280  2A82               	goto	u1050
  2049  0281                     u1051:
  2050  0281  2A87               	goto	l1502
  2051  0282                     u1050:
  2052  0282                     l1500:
  2053  0282  09CF               	comf	___awmod@dividend,f
  2054  0283  09D0               	comf	___awmod@dividend+1,f
  2055  0284  0ACF               	incf	___awmod@dividend,f
  2056  0285  1903               	skipnz
  2057  0286  0AD0               	incf	___awmod@dividend+1,f
  2058  0287                     l1502:
  2059  0287  0850               	movf	___awmod@dividend+1,w
  2060  0288  00CE               	movwf	?___awmod+1
  2061  0289  084F               	movf	___awmod@dividend,w
  2062  028A  00CD               	movwf	?___awmod
  2063  028B                     l394:
  2064  028B  0008               	return
  2065  028C                     __end_of___awmod:
  2066                           
  2067                           	psect	text11
  2068  01C8                     __ptext11:	
  2069 ;; *************** function ___awdiv *****************
  2070 ;; Defined at:
  2071 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2072 ;; Parameters:    Size  Location     Type
  2073 ;;  divisor         2    0[BANK0 ] int 
  2074 ;;  dividend        2    2[BANK0 ] int 
  2075 ;; Auto vars:     Size  Location     Type
  2076 ;;  quotient        2    6[BANK0 ] int 
  2077 ;;  sign            1    5[BANK0 ] unsigned char 
  2078 ;;  counter         1    4[BANK0 ] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;                  2    0[BANK0 ] int 
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0, btemp+1
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2088 ;;      Params:         0       4       0       0       0
  2089 ;;      Locals:         0       4       0       0       0
  2090 ;;      Temps:          0       0       0       0       0
  2091 ;;      Totals:         0       8       0       0       0
  2092 ;;Total ram usage:        8 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    2
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_DhtUpdateData
  2099 ;; This function uses a non-reentrant model
  2100 ;;
  2101                           
  2102                           
  2103                           ;psect for function ___awdiv
  2104  01C8                     ___awdiv:
  2105  01C8                     l1156:	
  2106                           ;incstack = 0
  2107                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2108                           
  2109  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2110  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2111  01CA  01D2               	clrf	___awdiv@sign
  2112  01CB                     l1158:
  2113  01CB  1FCE               	btfss	___awdiv@divisor+1,7
  2114  01CC  29CE               	goto	u561
  2115  01CD  29CF               	goto	u560
  2116  01CE                     u561:
  2117  01CE  29D6               	goto	l1164
  2118  01CF                     u560:
  2119  01CF                     l1160:
  2120  01CF  09CD               	comf	___awdiv@divisor,f
  2121  01D0  09CE               	comf	___awdiv@divisor+1,f
  2122  01D1  0ACD               	incf	___awdiv@divisor,f
  2123  01D2  1903               	skipnz
  2124  01D3  0ACE               	incf	___awdiv@divisor+1,f
  2125  01D4                     l1162:
  2126  01D4  01D2               	clrf	___awdiv@sign
  2127  01D5  0AD2               	incf	___awdiv@sign,f
  2128  01D6                     l1164:
  2129  01D6  1FD0               	btfss	___awdiv@dividend+1,7
  2130  01D7  29D9               	goto	u571
  2131  01D8  29DA               	goto	u570
  2132  01D9                     u571:
  2133  01D9  29E3               	goto	l1170
  2134  01DA                     u570:
  2135  01DA                     l1166:
  2136  01DA  09CF               	comf	___awdiv@dividend,f
  2137  01DB  09D0               	comf	___awdiv@dividend+1,f
  2138  01DC  0ACF               	incf	___awdiv@dividend,f
  2139  01DD  1903               	skipnz
  2140  01DE  0AD0               	incf	___awdiv@dividend+1,f
  2141  01DF                     l1168:
  2142  01DF  3001               	movlw	1
  2143  01E0  00FF               	movwf	btemp+1
  2144  01E1  087F               	movf	btemp+1,w
  2145  01E2  06D2               	xorwf	___awdiv@sign,f
  2146  01E3                     l1170:
  2147  01E3  01D3               	clrf	___awdiv@quotient
  2148  01E4  01D4               	clrf	___awdiv@quotient+1
  2149  01E5                     l1172:
  2150  01E5  084D               	movf	___awdiv@divisor,w
  2151  01E6  044E               	iorwf	___awdiv@divisor+1,w
  2152  01E7  1903               	btfsc	3,2
  2153  01E8  29EA               	goto	u581
  2154  01E9  29EB               	goto	u580
  2155  01EA                     u581:
  2156  01EA  2A22               	goto	l1192
  2157  01EB                     u580:
  2158  01EB                     l1174:
  2159  01EB  01D1               	clrf	___awdiv@counter
  2160  01EC  0AD1               	incf	___awdiv@counter,f
  2161  01ED  29F9               	goto	l1180
  2162  01EE                     l1176:
  2163  01EE  3001               	movlw	1
  2164  01EF                     u595:
  2165  01EF  1003               	clrc
  2166  01F0  0DCD               	rlf	___awdiv@divisor,f
  2167  01F1  0DCE               	rlf	___awdiv@divisor+1,f
  2168  01F2  3EFF               	addlw	-1
  2169  01F3  1D03               	skipz
  2170  01F4  29EF               	goto	u595
  2171  01F5                     l1178:
  2172  01F5  3001               	movlw	1
  2173  01F6  00FF               	movwf	btemp+1
  2174  01F7  087F               	movf	btemp+1,w
  2175  01F8  07D1               	addwf	___awdiv@counter,f
  2176  01F9                     l1180:
  2177  01F9  1FCE               	btfss	___awdiv@divisor+1,7
  2178  01FA  29FC               	goto	u601
  2179  01FB  29FD               	goto	u600
  2180  01FC                     u601:
  2181  01FC  29EE               	goto	l1176
  2182  01FD                     u600:
  2183  01FD                     l1182:
  2184  01FD  3001               	movlw	1
  2185  01FE                     u615:
  2186  01FE  1003               	clrc
  2187  01FF  0DD3               	rlf	___awdiv@quotient,f
  2188  0200  0DD4               	rlf	___awdiv@quotient+1,f
  2189  0201  3EFF               	addlw	-1
  2190  0202  1D03               	skipz
  2191  0203  29FE               	goto	u615
  2192  0204  084E               	movf	___awdiv@divisor+1,w
  2193  0205  0250               	subwf	___awdiv@dividend+1,w
  2194  0206  1D03               	skipz
  2195  0207  2A0A               	goto	u625
  2196  0208  084D               	movf	___awdiv@divisor,w
  2197  0209  024F               	subwf	___awdiv@dividend,w
  2198  020A                     u625:
  2199  020A  1C03               	skipc
  2200  020B  2A0D               	goto	u621
  2201  020C  2A0E               	goto	u620
  2202  020D                     u621:
  2203  020D  2A15               	goto	l1188
  2204  020E                     u620:
  2205  020E                     l1184:
  2206  020E  084D               	movf	___awdiv@divisor,w
  2207  020F  02CF               	subwf	___awdiv@dividend,f
  2208  0210  084E               	movf	___awdiv@divisor+1,w
  2209  0211  1C03               	skipc
  2210  0212  03D0               	decf	___awdiv@dividend+1,f
  2211  0213  02D0               	subwf	___awdiv@dividend+1,f
  2212  0214                     l1186:
  2213  0214  1453               	bsf	___awdiv@quotient,0
  2214  0215                     l1188:
  2215  0215  3001               	movlw	1
  2216  0216                     u635:
  2217  0216  1003               	clrc
  2218  0217  0CCE               	rrf	___awdiv@divisor+1,f
  2219  0218  0CCD               	rrf	___awdiv@divisor,f
  2220  0219  3EFF               	addlw	-1
  2221  021A  1D03               	skipz
  2222  021B  2A16               	goto	u635
  2223  021C                     l1190:
  2224  021C  3001               	movlw	1
  2225  021D  02D1               	subwf	___awdiv@counter,f
  2226  021E  1D03               	btfss	3,2
  2227  021F  2A21               	goto	u641
  2228  0220  2A22               	goto	u640
  2229  0221                     u641:
  2230  0221  29FD               	goto	l1182
  2231  0222                     u640:
  2232  0222                     l1192:
  2233  0222  0852               	movf	___awdiv@sign,w
  2234  0223  1903               	btfsc	3,2
  2235  0224  2A26               	goto	u651
  2236  0225  2A27               	goto	u650
  2237  0226                     u651:
  2238  0226  2A2C               	goto	l1196
  2239  0227                     u650:
  2240  0227                     l1194:
  2241  0227  09D3               	comf	___awdiv@quotient,f
  2242  0228  09D4               	comf	___awdiv@quotient+1,f
  2243  0229  0AD3               	incf	___awdiv@quotient,f
  2244  022A  1903               	skipnz
  2245  022B  0AD4               	incf	___awdiv@quotient+1,f
  2246  022C                     l1196:
  2247  022C  0854               	movf	___awdiv@quotient+1,w
  2248  022D  00CE               	movwf	?___awdiv+1
  2249  022E  0853               	movf	___awdiv@quotient,w
  2250  022F  00CD               	movwf	?___awdiv
  2251  0230                     l381:
  2252  0230  0008               	return
  2253  0231                     __end_of___awdiv:
  2254                           
  2255                           	psect	text12
  2256  0459                     __ptext12:	
  2257 ;; *************** function _DhtStartSignal *****************
  2258 ;; Defined at:
  2259 ;;		line 24 in file "./dht11.h"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;		None
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;		None
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2273 ;;      Params:         0       0       0       0       0
  2274 ;;      Locals:         0       0       0       0       0
  2275 ;;      Temps:          0       2       0       0       0
  2276 ;;      Totals:         0       2       0       0       0
  2277 ;;Total ram usage:        2 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    2
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_DhtUpdateData
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           
  2288                           ;psect for function _DhtStartSignal
  2289  0459                     _DhtStartSignal:
  2290  0459                     l1406:	
  2291                           ;incstack = 0
  2292                           ; Regs used in _DhtStartSignal: [wreg]
  2293                           
  2294                           
  2295                           ;./dht11.h: 26:         TRISB4 = 0;
  2296  0459  1683               	bsf	3,5	;RP0=1, select bank1
  2297  045A  1303               	bcf	3,6	;RP1=0, select bank1
  2298  045B  1206               	bcf	6,4	;volatile
  2299                           
  2300                           ;./dht11.h: 27:         RB4 = 0;
  2301  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2302  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2303  045E  1206               	bcf	6,4	;volatile
  2304  045F                     l1408:
  2305                           
  2306                           ;./dht11.h: 29:         _delay((unsigned long)((25)*(20000000/4000.0)));
  2307  045F  30A3               	movlw	163
  2308  0460  1283               	bcf	3,5	;RP0=0, select bank0
  2309  0461  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0462  00CE               	movwf	??_DhtStartSignal+1
  2311  0463  3054               	movlw	84
  2312  0464  00CD               	movwf	??_DhtStartSignal
  2313  0465                     u1177:
  2314  0465  0BCD               	decfsz	??_DhtStartSignal,f
  2315  0466  2C65               	goto	u1177
  2316  0467  0BCE               	decfsz	??_DhtStartSignal+1,f
  2317  0468  2C65               	goto	u1177
  2318  0469  0000               	nop
  2319  046A                     l1410:
  2320                           
  2321                           ;./dht11.h: 30:         RB4 = 1;
  2322  046A  1283               	bcf	3,5	;RP0=0, select bank0
  2323  046B  1303               	bcf	3,6	;RP1=0, select bank0
  2324  046C  1606               	bsf	6,4	;volatile
  2325                           
  2326                           ;./dht11.h: 31:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  2327  046D  3031               	movlw	49
  2328  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2329  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2330  0470  00CD               	movwf	??_DhtStartSignal
  2331  0471                     u1187:
  2332  0471  0BCD               	decfsz	??_DhtStartSignal,f
  2333  0472  2C71               	goto	u1187
  2334  0473                     l1412:
  2335                           
  2336                           ;./dht11.h: 32:         TRISB4 = 1;
  2337  0473  1683               	bsf	3,5	;RP0=1, select bank1
  2338  0474  1303               	bcf	3,6	;RP1=0, select bank1
  2339  0475  1606               	bsf	6,4	;volatile
  2340  0476                     l72:
  2341  0476  0008               	return
  2342  0477                     __end_of_DhtStartSignal:
  2343                           
  2344                           	psect	text13
  2345  02D3                     __ptext13:	
  2346 ;; *************** function _DhtReadData *****************
  2347 ;; Defined at:
  2348 ;;		line 44 in file "./dht11.h"
  2349 ;; Parameters:    Size  Location     Type
  2350 ;;		None
  2351 ;; Auto vars:     Size  Location     Type
  2352 ;;  data            1    3[BANK0 ] unsigned char 
  2353 ;;  i               1    2[BANK0 ] unsigned char 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  1    wreg      unsigned char 
  2356 ;; Registers used:
  2357 ;;		wreg, status,2, status,0, btemp+1
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2363 ;;      Params:         0       0       0       0       0
  2364 ;;      Locals:         0       2       0       0       0
  2365 ;;      Temps:          0       2       0       0       0
  2366 ;;      Totals:         0       4       0       0       0
  2367 ;;Total ram usage:        4 bytes
  2368 ;; Hardware stack levels used:    1
  2369 ;; Hardware stack levels required when called:    2
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_DhtUpdateData
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           
  2378                           ;psect for function _DhtReadData
  2379  02D3                     _DhtReadData:
  2380  02D3                     l1422:	
  2381                           ;incstack = 0
  2382                           ; Regs used in _DhtReadData: [wreg+status,2+status,0+btemp+1]
  2383                           
  2384                           
  2385                           ;./dht11.h: 46:         char i, data = 0;
  2386  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2387  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2388  02D5  01D0               	clrf	DhtReadData@data
  2389                           
  2390                           ;./dht11.h: 47:         for(i = 0; i < 8; i++)
  2391  02D6  01CF               	clrf	DhtReadData@i
  2392  02D7                     l1428:
  2393  02D7  1003               	clrc
  2394  02D8  1A06               	btfsc	6,4	;volatile
  2395  02D9  1403               	setc
  2396  02DA  3000               	movlw	0
  2397  02DB  1803               	skipnc
  2398  02DC  3001               	movlw	1
  2399  02DD  00CD               	movwf	??_DhtReadData
  2400  02DE  01CE               	clrf	??_DhtReadData+1
  2401  02DF  1C4D               	btfss	??_DhtReadData,0
  2402  02E0  2AE2               	goto	u881
  2403  02E1  2AE3               	goto	u880
  2404  02E2                     u881:
  2405  02E2  2AD7               	goto	l1428
  2406  02E3                     u880:
  2407  02E3                     l1430:
  2408                           
  2409                           ;./dht11.h: 50:             _delay((unsigned long)((30)*(20000000/4000000.0)));
  2410  02E3  3031               	movlw	49
  2411  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2412  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2413  02E6  00CD               	movwf	??_DhtReadData
  2414  02E7                     u1197:
  2415  02E7  0BCD               	decfsz	??_DhtReadData,f
  2416  02E8  2AE7               	goto	u1197
  2417  02E9                     l1432:
  2418                           
  2419                           ;./dht11.h: 51:             if(RB4 & 1)
  2420  02E9  1003               	clrc
  2421  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2422  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2423  02EC  1A06               	btfsc	6,4	;volatile
  2424  02ED  1403               	setc
  2425  02EE  3000               	movlw	0
  2426  02EF  1803               	skipnc
  2427  02F0  3001               	movlw	1
  2428  02F1  00CD               	movwf	??_DhtReadData
  2429  02F2  01CE               	clrf	??_DhtReadData+1
  2430  02F3  1C4D               	btfss	??_DhtReadData,0
  2431  02F4  2AF6               	goto	u891
  2432  02F5  2AF7               	goto	u890
  2433  02F6                     u891:
  2434  02F6  2AFA               	goto	l1436
  2435  02F7                     u890:
  2436  02F7                     l1434:
  2437                           
  2438                           ;./dht11.h: 52:                 data = ((data<<1) | 1);
  2439  02F7  1403               	setc
  2440  02F8  0DD0               	rlf	DhtReadData@data,f
  2441  02F9  2B00               	goto	l1438
  2442  02FA                     l1436:
  2443                           
  2444                           ;./dht11.h: 54:                 data = (data<<1);
  2445  02FA  0850               	movf	DhtReadData@data,w
  2446  02FB  00CD               	movwf	??_DhtReadData
  2447  02FC  074D               	addwf	??_DhtReadData,w
  2448  02FD  00FF               	movwf	btemp+1
  2449  02FE  087F               	movf	btemp+1,w
  2450  02FF  00D0               	movwf	DhtReadData@data
  2451  0300                     l1438:
  2452  0300  1003               	clrc
  2453  0301  1A06               	btfsc	6,4	;volatile
  2454  0302  1403               	setc
  2455  0303  3000               	movlw	0
  2456  0304  1803               	skipnc
  2457  0305  3001               	movlw	1
  2458  0306  00CD               	movwf	??_DhtReadData
  2459  0307  01CE               	clrf	??_DhtReadData+1
  2460  0308  184D               	btfsc	??_DhtReadData,0
  2461  0309  2B0B               	goto	u901
  2462  030A  2B0C               	goto	u900
  2463  030B                     u901:
  2464  030B  2B00               	goto	l1438
  2465  030C                     u900:
  2466  030C                     l1440:
  2467                           
  2468                           ;./dht11.h: 56:         }
  2469  030C  3001               	movlw	1
  2470  030D  00FF               	movwf	btemp+1
  2471  030E  087F               	movf	btemp+1,w
  2472  030F  07CF               	addwf	DhtReadData@i,f
  2473  0310                     l1442:
  2474  0310  3008               	movlw	8
  2475  0311  024F               	subwf	DhtReadData@i,w
  2476  0312  1C03               	skipc
  2477  0313  2B15               	goto	u911
  2478  0314  2B16               	goto	u910
  2479  0315                     u911:
  2480  0315  2AD7               	goto	l1428
  2481  0316                     u910:
  2482  0316                     l1444:
  2483                           
  2484                           ;./dht11.h: 57:         return data;
  2485  0316  0850               	movf	DhtReadData@data,w
  2486  0317                     l97:
  2487  0317  0008               	return
  2488  0318                     __end_of_DhtReadData:
  2489                           
  2490                           	psect	text14
  2491  0432                     __ptext14:	
  2492 ;; *************** function _DhtCheckResponse *****************
  2493 ;; Defined at:
  2494 ;;		line 36 in file "./dht11.h"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;		None
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       0       0       0       0
  2509 ;;      Locals:         0       0       0       0       0
  2510 ;;      Temps:          0       2       0       0       0
  2511 ;;      Totals:         0       2       0       0       0
  2512 ;;Total ram usage:        2 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    2
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_DhtUpdateData
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _DhtCheckResponse
  2524  0432                     _DhtCheckResponse:
  2525  0432                     l1414:	
  2526                           ;incstack = 0
  2527                           ; Regs used in _DhtCheckResponse: [wreg+status,0]
  2528                           
  2529  0432                     l1416:	
  2530                           ;./dht11.h: 38:         while(RB4 & 1);
  2531                           
  2532  0432  1003               	clrc
  2533  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2534  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2535  0435  1A06               	btfsc	6,4	;volatile
  2536  0436  1403               	setc
  2537  0437  3000               	movlw	0
  2538  0438  1803               	skipnc
  2539  0439  3001               	movlw	1
  2540  043A  00CD               	movwf	??_DhtCheckResponse
  2541  043B  01CE               	clrf	??_DhtCheckResponse+1
  2542  043C  184D               	btfsc	??_DhtCheckResponse,0
  2543  043D  2C3F               	goto	u851
  2544  043E  2C40               	goto	u850
  2545  043F                     u851:
  2546  043F  2C32               	goto	l1416
  2547  0440                     u850:
  2548  0440                     l1418:
  2549  0440  1003               	clrc
  2550  0441  1A06               	btfsc	6,4	;volatile
  2551  0442  1403               	setc
  2552  0443  3000               	movlw	0
  2553  0444  1803               	skipnc
  2554  0445  3001               	movlw	1
  2555  0446  00CD               	movwf	??_DhtCheckResponse
  2556  0447  01CE               	clrf	??_DhtCheckResponse+1
  2557  0448  1C4D               	btfss	??_DhtCheckResponse,0
  2558  0449  2C4B               	goto	u861
  2559  044A  2C4C               	goto	u860
  2560  044B                     u861:
  2561  044B  2C40               	goto	l1418
  2562  044C                     u860:
  2563  044C                     l1420:
  2564  044C  1003               	clrc
  2565  044D  1A06               	btfsc	6,4	;volatile
  2566  044E  1403               	setc
  2567  044F  3000               	movlw	0
  2568  0450  1803               	skipnc
  2569  0451  3001               	movlw	1
  2570  0452  00CD               	movwf	??_DhtCheckResponse
  2571  0453  01CE               	clrf	??_DhtCheckResponse+1
  2572  0454  184D               	btfsc	??_DhtCheckResponse,0
  2573  0455  2C57               	goto	u871
  2574  0456  2C58               	goto	u870
  2575  0457                     u871:
  2576  0457  2C4C               	goto	l1420
  2577  0458                     u870:
  2578  0458                     l84:
  2579  0458  0008               	return
  2580  0459                     __end_of_DhtCheckResponse:
  2581                           
  2582                           	psect	text15
  2583  04AC                     __ptext15:	
  2584 ;; *************** function _ISR *****************
  2585 ;; Defined at:
  2586 ;;		line 78 in file "main.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2600 ;;      Params:         0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0
  2602 ;;      Temps:          3       0       0       0       0
  2603 ;;      Totals:         3       0       0       0       0
  2604 ;;Total ram usage:        3 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    1
  2607 ;; This function calls:
  2608 ;;		i1_LcdCmdWrite
  2609 ;; This function is called by:
  2610 ;;		Interrupt level 1
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function _ISR
  2616  04AC                     _ISR:
  2617  04AC                     i1l1350:
  2618                           
  2619                           ;main.c: 80:     if(INTF == 1)
  2620  04AC  1C8B               	btfss	11,1	;volatile
  2621  04AD  2CAF               	goto	u82_21
  2622  04AE  2CB0               	goto	u82_20
  2623  04AF                     u82_21:
  2624  04AF  2CB9               	goto	i1l135
  2625  04B0                     u82_20:
  2626  04B0                     i1l1352:
  2627                           
  2628                           ;main.c: 81:     {;main.c: 82:         status = ~status;
  2629  04B0  3001               	movlw	(0+1) shl (_status& (0+7))
  2630  04B1  06F6               	xorwf	_status/(0+8),f
  2631  04B2                     i1l1354:
  2632                           
  2633                           ;main.c: 83:         LcdCmdWrite(0x01);
  2634  04B2  3001               	movlw	1
  2635  04B3  120A  118A  2318  120A  118A  	fcall	i1_LcdCmdWrite
  2636  04B8                     i1l1356:
  2637                           
  2638                           ;main.c: 84:         INTF = 0;
  2639  04B8  108B               	bcf	11,1	;volatile
  2640  04B9                     i1l135:
  2641  04B9  0875               	movf	??_ISR+2,w
  2642  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  2643  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  2644  04BC  00FF               	movwf	btemp+1
  2645  04BD  0874               	movf	??_ISR+1,w
  2646  04BE  008A               	movwf	10
  2647  04BF  0E73               	swapf	??_ISR^(0+4294967168),w
  2648  04C0  0083               	movwf	3
  2649  04C1  0EFE               	swapf	btemp,f
  2650  04C2  0E7E               	swapf	btemp,w
  2651  04C3  0009               	retfie
  2652  04C4                     __end_of_ISR:
  2653                           
  2654                           	psect	intentry
  2655  0004                     __pintentry:	
  2656                           ;incstack = 0
  2657                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2658                           
  2659  0004                     interrupt_function:
  2660  007E                     saved_w	set	btemp
  2661  0004  00FE               	movwf	btemp
  2662  0005  0E03               	swapf	3,w
  2663  0006  00F3               	movwf	??_ISR
  2664  0007  080A               	movf	10,w
  2665  0008  00F4               	movwf	??_ISR+1
  2666  0009  1283               	bcf	3,5	;RP0=0, select bank0
  2667  000A  1303               	bcf	3,6	;RP1=0, select bank0
  2668  000B  087F               	movf	btemp+1,w
  2669  000C  00F5               	movwf	??_ISR+2
  2670  000D  120A  118A  2CAC   	ljmp	_ISR
  2671                           
  2672                           	psect	text16
  2673  0318                     __ptext16:	
  2674 ;; *************** function i1_LcdCmdWrite *****************
  2675 ;; Defined at:
  2676 ;;		line 32 in file "./lcd.h"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;  cmd             1    wreg     unsigned char 
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  cmd             1    2[COMMON] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  1    wreg      void 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, btemp+1
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2690 ;;      Params:         0       0       0       0       0
  2691 ;;      Locals:         1       0       0       0       0
  2692 ;;      Temps:          2       0       0       0       0
  2693 ;;      Totals:         3       0       0       0       0
  2694 ;;Total ram usage:        3 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; This function calls:
  2697 ;;		Nothing
  2698 ;; This function is called by:
  2699 ;;		_ISR
  2700 ;; This function uses a non-reentrant model
  2701 ;;
  2702                           
  2703                           
  2704                           ;psect for function i1_LcdCmdWrite
  2705  0318                     i1_LcdCmdWrite:
  2706                           
  2707                           ;incstack = 0
  2708                           ; Regs used in i1_LcdCmdWrite: [wreg+status,2+status,0+btemp+1]
  2709                           ;i1LcdCmdWrite@cmd stored from wreg
  2710  0318  00F2               	movwf	i1LcdCmdWrite@cmd
  2711  0319                     i1l1296:
  2712                           
  2713                           ;./lcd.h: 32:     void LcdCmdWrite(char cmd);./lcd.h: 33:     {;./lcd.h: 34:         POR
      +                          TD = (cmd & 0xF0);
  2714  0319  0872               	movf	i1LcdCmdWrite@cmd,w
  2715  031A  39F0               	andlw	240
  2716  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2717  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2718  031D  0088               	movwf	8	;volatile
  2719  031E                     i1l1298:
  2720                           
  2721                           ;./lcd.h: 35:         PORTD &= ~(1<<0);
  2722  031E  30FE               	movlw	254
  2723  031F  00FF               	movwf	btemp+1
  2724  0320  087F               	movf	btemp+1,w
  2725  0321  0588               	andwf	8,f	;volatile
  2726  0322                     i1l1300:
  2727                           
  2728                           ;./lcd.h: 36:         PORTD &= ~(1<<1);
  2729  0322  30FD               	movlw	253
  2730  0323  00FF               	movwf	btemp+1
  2731  0324  087F               	movf	btemp+1,w
  2732  0325  0588               	andwf	8,f	;volatile
  2733  0326                     i1l1302:
  2734                           
  2735                           ;./lcd.h: 37:         PORTD |= (1<<2);
  2736  0326  1508               	bsf	8,2	;volatile
  2737  0327                     i1l1304:
  2738                           
  2739                           ;./lcd.h: 38:         _delay((unsigned long)((10)*(20000000/4000.0)));
  2740  0327  3041               	movlw	65
  2741  0328  00F1               	movwf	??i1_LcdCmdWrite+1
  2742  0329  30EE               	movlw	238
  2743  032A  00F0               	movwf	??i1_LcdCmdWrite
  2744  032B                     u120_27:
  2745  032B  0BF0               	decfsz	??i1_LcdCmdWrite,f
  2746  032C  2B2B               	goto	u120_27
  2747  032D  0BF1               	decfsz	??i1_LcdCmdWrite+1,f
  2748  032E  2B2B               	goto	u120_27
  2749  032F  0000               	nop
  2750  0330                     i1l1306:
  2751                           
  2752                           ;./lcd.h: 39:         PORTD &= ~(1<<2);
  2753  0330  30FB               	movlw	251
  2754  0331  00FF               	movwf	btemp+1
  2755  0332  087F               	movf	btemp+1,w
  2756  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2757  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2758  0335  0588               	andwf	8,f	;volatile
  2759  0336                     i1l1308:
  2760                           
  2761                           ;./lcd.h: 41:         PORTD = ((cmd<<4) & 0xF0);
  2762  0336  0872               	movf	i1LcdCmdWrite@cmd,w
  2763  0337  00F0               	movwf	??i1_LcdCmdWrite
  2764  0338  3003               	movlw	3
  2765  0339                     u79_25:
  2766  0339  1003               	clrc
  2767  033A  0DF0               	rlf	??i1_LcdCmdWrite,f
  2768  033B  3EFF               	addlw	-1
  2769  033C  1D03               	skipz
  2770  033D  2B39               	goto	u79_25
  2771  033E  1003               	clrc
  2772  033F  0D70               	rlf	??i1_LcdCmdWrite,w
  2773  0340  39F0               	andlw	240
  2774  0341  0088               	movwf	8	;volatile
  2775  0342                     i1l1310:
  2776                           
  2777                           ;./lcd.h: 42:         PORTD &= ~(1<<0);
  2778  0342  30FE               	movlw	254
  2779  0343  00FF               	movwf	btemp+1
  2780  0344  087F               	movf	btemp+1,w
  2781  0345  0588               	andwf	8,f	;volatile
  2782  0346                     i1l1312:
  2783                           
  2784                           ;./lcd.h: 43:         PORTD &= ~(1<<1);
  2785  0346  30FD               	movlw	253
  2786  0347  00FF               	movwf	btemp+1
  2787  0348  087F               	movf	btemp+1,w
  2788  0349  0588               	andwf	8,f	;volatile
  2789  034A                     i1l1314:
  2790                           
  2791                           ;./lcd.h: 44:         PORTD |= (1<<2);
  2792  034A  1508               	bsf	8,2	;volatile
  2793  034B                     i1l1316:
  2794                           
  2795                           ;./lcd.h: 45:         _delay((unsigned long)((10)*(20000000/4000.0)));
  2796  034B  3041               	movlw	65
  2797  034C  00F1               	movwf	??i1_LcdCmdWrite+1
  2798  034D  30EE               	movlw	238
  2799  034E  00F0               	movwf	??i1_LcdCmdWrite
  2800  034F                     u121_27:
  2801  034F  0BF0               	decfsz	??i1_LcdCmdWrite,f
  2802  0350  2B4F               	goto	u121_27
  2803  0351  0BF1               	decfsz	??i1_LcdCmdWrite+1,f
  2804  0352  2B4F               	goto	u121_27
  2805  0353  0000               	nop
  2806  0354                     i1l1318:
  2807                           
  2808                           ;./lcd.h: 46:         PORTD &= ~(1<<2);
  2809  0354  30FB               	movlw	251
  2810  0355  00FF               	movwf	btemp+1
  2811  0356  087F               	movf	btemp+1,w
  2812  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2813  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2814  0359  0588               	andwf	8,f	;volatile
  2815  035A                     i1l43:
  2816  035A  0008               	return
  2817  035B                     __end_ofi1_LcdCmdWrite:
  2818  007E                     btemp	set	126	;btemp
  2819  007E                     wtemp0	set	126
  2820                           
  2821                           	psect	config
  2822                           
  2823                           ;Config register CONFIG @ 0x2007
  2824                           ;	Oscillator Selection bits
  2825                           ;	FOSC = XT, XT oscillator
  2826                           ;	Watchdog Timer Enable bit
  2827                           ;	WDTE = OFF, WDT disabled
  2828                           ;	Power-up Timer Enable bit
  2829                           ;	PWRTE = ON, PWRT enabled
  2830                           ;	Brown-out Reset Enable bit
  2831                           ;	BOREN = ON, BOR enabled
  2832                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2833                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2834                           ;	Data EEPROM Memory Code Protection bit
  2835                           ;	CPD = OFF, Data EEPROM code protection off
  2836                           ;	Flash Program Memory Write Enable bits
  2837                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2838                           ;	In-Circuit Debugger Mode bit
  2839                           ;	DEBUG = 0x1, unprogrammed default
  2840                           ;	Flash Program Memory Code Protection bit
  2841                           ;	CP = OFF, Code protection off
  2842  2007                     	org	8199
  2843  2007  3F71               	dw	16241

Data Sizes:
    Strings     6
    Constant    0
    Data        62
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     21      71
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LcdMsgPrint@msg	PTR unsigned char  size(2) Largest target is 16
		 -> idea_humi(BANK1[16]), idea_temp(BANK0[16]), STR_1(CODE[6]), humi(BANK0[14]), 
		 -> temp(BANK0[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LcdCmdWrite

Critical Paths under _main in BANK0

    _main->_DhtUpdateData
    _setPumpValue->___bmul
    _LcdMsgPrint->_LcdDataWrite
    _LcdInit->_LcdCmdWrite
    _DhtUpdateData->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3263
                                             18 BANK0      3     3      0
                      _DhtUpdateData
                        _LcdCmdWrite
                            _LcdInit
                        _LcdMsgPrint
                          _configPWM
                       _setPumpValue
 ---------------------------------------------------------------------------------
 (1) _setPumpValue                                         3     2      1     626
                                              3 BANK0      3     2      1
                             ___bmul
                             _setPWM
 ---------------------------------------------------------------------------------
 (2) _setPWM                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     316
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _configPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LcdMsgPrint                                          3     1      2     642
                                              3 BANK0      3     1      2
                       _LcdDataWrite
 ---------------------------------------------------------------------------------
 (2) _LcdDataWrite                                         3     3      0      62
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              0     0      0      62
                        _LcdCmdWrite
 ---------------------------------------------------------------------------------
 (2) _LcdCmdWrite                                          3     3      0      62
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DhtUpdateData                                       10    10      0    1871
                                              8 BANK0     10    10      0
                   _DhtCheckResponse
                        _DhtReadData
                     _DhtStartSignal
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     908
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _DhtStartSignal                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DhtReadData                                          4     4      0     170
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _DhtCheckResponse                                     2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      44
                                              3 COMMON     3     3      0
                      i1_LcdCmdWrite
 ---------------------------------------------------------------------------------
 (4) i1_LcdCmdWrite                                        3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DhtUpdateData
     _DhtCheckResponse
     _DhtReadData
     _DhtStartSignal
     ___awdiv
     ___awmod
   _LcdCmdWrite
   _LcdInit
     _LcdCmdWrite
   _LcdMsgPrint
     _LcdDataWrite
   _configPWM
   _setPumpValue
     ___bmul
     _setPWM

 _ISR (ROOT)
   i1_LcdCmdWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5F      12        0.0%
ABS                  0      0      5F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jun 15 20:31:51 2020

                        pc 0002        __end_of_LcdCmdWrite 02D3             ___bmul@product 004E  
                       l43 02D2                         l46 0492                         l55 0431  
                       l72 0476                         l49 039B                         l84 0458  
     __end_of_LcdDataWrite 039C                         l97 0317               ___awdiv@sign 0052  
                       fsr 0004                        l101 012F                        l104 0514  
                      l107 04AB                        l142 03D7                        l254 04DA  
                      l381 0230                        l394 028B                        _GIE 005F  
                      _RB4 0034                        _PR2 0092                        u600 01FD  
                      u601 01FC                        u620 020E                        _ISR 04AC  
                      u621 020D                        u615 01FE                        u640 0222  
                      u560 01CF                        u641 0221                        u625 020A  
                      u561 01CE                        u650 0227                        u570 01DA  
                      u651 0226                        u635 0216                        u571 01D9  
                      u900 030C                        u580 01EB                        u901 030B  
                      u581 01EA                        u910 0316                        u911 0315  
                      u920 049D                        u921 0499                        u850 0440  
                      u851 043F                        u595 01EF                        u835 02AF  
                      u860 044C                        u861 044B                        u845 037B  
                      u870 0458                        u950 04CC                        u934 04A0  
                      u871 0457                        u951 04CB                        u880 02E3  
                      u960 04D9                        u881 02E2                        u961 04D8  
                      u945 04A4                        u890 02F7                        u970 0238  
                      u891 02F6                        u971 0237                        u980 0243  
                      u981 0242                        u990 024E                        u991 024D  
                      fsr0 0004                        indf 0000               ___awmod@sign 0052  
      __end_of_LcdMsgPrint 0432                       ?_ISR 0070                       l1160 01CF  
                     l1400 0389                       l1410 046A                       l1170 01E3  
                     l1162 01D4                       l1402 038A                       l1420 044C  
                     l1412 0473                       l1180 01F9                       l1172 01E5  
                     l1164 01D6                       l1156 01C8                       l1500 0282  
                     l1404 0395                       l1414 0432                       l1430 02E3  
                     l1422 02D3                       l1406 0459                       l1190 021C  
                     l1182 01FD                       l1174 01EB                       l1166 01DA  
                     l1158 01CB                       l1502 0287                       l1510 0480  
                     l1416 0432                       l1440 030C                       l1432 02E9  
                     l1408 045F                       l1184 020E                       l1176 01EE  
                     l1192 0222                       l1168 01DF                       l1360 0292  
                     l1512 0486                       l1520 041A                       l1280 0504  
                     l1418 0440                       l1442 0310                       l1434 02F7  
                     l1194 0227                       l1186 0214                       l1178 01F5  
                     l1530 005C                       l1370 02AC                       l1362 0296  
                     l1514 048C                       l1506 0477                       l1522 0420  
                     l1282 0510                       l1450 04A1                       l1444 0316  
                     l1436 02FA                       l1428 02D7                       l1196 022C  
                     l1188 0215                       l1540 012C                       l1532 0066  
                     l1524 003E                       l1380 02CC                       l1372 02B8  
                     l1364 029A                       l1508 047A                       l1516 0405  
                     l1460 04D2                       l1452 04C7                       l1438 0300  
                     l1470 0234                       l1534 0070                       l1526 0048  
                     l1374 02BC                       l1366 029B                       l1358 028F  
                     l1390 0367                       l1382 035E                       l1518 0409  
                     l1462 04D4                       l1454 04C8                       l1550 03AF  
                     l1480 0248                       l1472 0238                       l1544 012E  
                     l1536 007A                       l1528 0052                       l1376 02C0  
                     l1368 02A6                       l1392 0372                       l1384 0361  
                     l1464 04D9                       l1456 04CC                       l1448 0496  
                     l1552 03B4                       l1560 0130                       l1490 0260  
                     l1482 024E                       l1474 023D                       l1538 00A2  
                     l1378 02C1                       l1394 0378                       l1386 0362  
                     l1458 04D0                       l1554 03BA                       l1570 014C  
                     l1562 0135                       l1492 026A                       l1484 0251  
                     l1476 023F                       l1468 0231                       l1396 0384  
                     l1388 0366                       l1556 03CA                       l1548 039F  
                     l1572 0152                       l1580 0181                       l1564 013A  
                     l1494 0270                       l1486 0258                       l1478 0243  
                     l1398 0385                       l1558 03D1                       l1582 018D  
                     l1574 015D                       l1566 013F                       l1496 0277  
                     l1488 025C                       l1584 0198                       l1576 016F  
                     l1568 0143                       l1498 027D                       l1578 0175  
                     l1586 01A9                       l1588 01B5                       STR_1 04EB  
                     u1010 0260                       u1011 025F                       u1020 026A  
                     u1100 0143                       u1021 0269                       u1005 0252  
                     u1101 0142                       u1110 014C                       u1111 014B  
                     u1040 027D                       u1041 027C                       u1025 0266  
                     u1050 0282                       u1051 0281                       u1035 0271  
                     u1060 0431                       u1061 0430                       u1070 00A2  
                     u1071 00A1                       u1127 01BD                       u1080 03B4  
                     u1137 036D                       u1081 03B3                       u1090 03BA  
                     u1075 009E                       u1147 0390                       u1091 03B9  
                     u1157 02A1                       u1167 02C7                       u1177 0465  
                     u1187 0471                       u1197 02E7                       _INTE 005C  
                     _INTF 0059                       i1l43 035A           LcdDataWrite@data 004F  
                     _main 0130                       _humi 0031                       _temp 003F  
                     btemp 007E                       start 0010            __end_of_LcdInit 0493  
        ___bmul@multiplier 004F                      ??_ISR 0073                      ?_main 0070  
                    _CCP1X 00BD                      _CCP1Y 00BC            __end_of___awdiv 0231  
          __end_of___awmod 028C           _DhtCheckResponse 0432            ___awdiv@divisor 004D  
                    i1l135 04B9            ___awdiv@counter 0051                      _PORTD 0008  
                    _TRISD 0088                      u82_20 04B0                      u82_21 04AF  
                    u79_25 0339      __end_of_DhtUpdateData 0130                      _ihumi 0020  
                    _itemp 0077             __pbitbssCOMMON 03B0                      pclath 000A  
              _DhtReadData 02D3                      status 0003                      wtemp0 007E  
              _LcdCmdWrite 028C            __initialization 0013               __end_of_main 01C8  
                   ??_main 005F                _LcdMsgPrint 0405             _DhtStartSignal 0459  
                   _CCP1M2 00BA                     _CCP1M3 00BB                     _CCPR1L 0015  
         ___awdiv@dividend 004F                     i1l1300 0322                     i1l1310 0342  
                   i1l1302 0326                     i1l1312 0346                     i1l1304 0327  
                   i1l1314 034A                     i1l1306 0330                     i1l1316 034B  
                   i1l1308 0336                     i1l1318 0354                     i1l1350 04AC  
                   i1l1352 04B0                     i1l1354 04B2                     i1l1356 04B8  
                   u120_27 032B                     i1l1296 0319                     i1l1298 031E  
                   u121_27 034F                     _INTEDG 040E                  ??_LcdInit 0076  
                   _TMR2ON 0092                     _TRISB4 0434                     _TRISC2 043A  
    __end_ofi1_LcdCmdWrite 035B      __size_of_LcdDataWrite 0041                     ___bmul 04C4  
                ??___awdiv 0076                  ??___awmod 0076                     _setPWM 0493  
         ___awdiv@quotient 0053            ___awmod@divisor 004D            ___awmod@counter 0051  
                   _status 03B0     __end_of_DhtStartSignal 0477               __pdataCOMMON 0077  
                   saved_w 007E               _LcdDataWrite 035B    __end_of__initialization 003A  
      ___bmul@multiplicand 004D             __pcstackCOMMON 0070               __pidataBANK0 03D8  
             __pidataBANK1 0515          setPumpValue@delta 0052          setPumpValue@id_rh 0050  
          ?_DhtStartSignal 0070         __size_of_configPWM 0011                 __pbssBANK0 0062  
 __end_of_DhtCheckResponse 0459                 __pmaintext 0130                    ?___bmul 004D  
               __pintentry 0004                    ?_setPWM 0070                    _T2CKPS0 0090  
                  _T2CKPS1 0091              ?_setPumpValue 0050                 __stringtab 04DB  
                  _LcdInit 0477               ?_DhtReadData 0070               ?_LcdCmdWrite 0070  
        __end_of_configPWM 0515            __size_of___bmul 0017                    ___awdiv 01C8  
                  ___awmod 0231            __size_of_setPWM 0019                    __ptext1 039C  
                  __ptext2 0493               ?_LcdMsgPrint 0050                    __ptext3 04C4  
                  __ptext4 0504                    __ptext5 0405                    __ptext6 035B  
                  __ptext7 0477                    __ptext8 028C                    __ptext9 003E  
           ??_setPumpValue 0076               __size_of_ISR 0018           ___awmod@dividend 004F  
                  _t_byte1 0066                    _t_byte2 0065       end_of_initialization 003A  
   __size_of_DhtUpdateData 00F2             __end_of___bmul 04DB           ??_DhtStartSignal 004D  
            __pidataCOMMON 0525             LcdCmdWrite@cmd 004F             __end_of_setPWM 04AC  
      start_initialization 0013     __size_ofi1_LcdCmdWrite 0043                __end_of_ISR 04C4  
            _DhtUpdateData 003E          ?_DhtCheckResponse 0070       __end_of_setPumpValue 03D8  
     __size_of_DhtReadData 0045         ??_DhtCheckResponse 004D       __size_of_LcdCmdWrite 0047  
                 ??___bmul 0076                 init_fetch0 04F1               DhtReadData@i 004F  
              __pdataBANK0 0020                __pdataBANK1 00A0                   ??_setPWM 004D  
     __size_of_LcdMsgPrint 002D                  ___latbits 0002              __pcstackBANK0 004D  
           ?_DhtUpdateData 0070           setPumpValue@r_rh 0051                   ?_LcdInit 0070  
                _check_sum 0062              i1_LcdCmdWrite 0318                  _idea_humi 00A0  
                _idea_temp 0021                   ?___awdiv 004D                   ?___awmod 004D  
                _configPWM 0504                  __pstrings 04DB          interrupt_function 0004  
           ?i1_LcdCmdWrite 0070                 ?_configPWM 0070               LcdMsgPrint@i 0052  
              __stringbase 04EA            ??_DhtUpdateData 0055              ?_LcdDataWrite 0070  
    __size_of_setPumpValue 003C           __size_of_LcdInit 001C           __size_of___awdiv 0069  
         __size_of___awmod 005B         __end_of__stringtab 04EB               _setPumpValue 039C  
                 __ptext10 0231                   __ptext11 01C8                   __ptext12 0459  
                 __ptext13 02D3                   __ptext14 0432                   __ptext15 04AC  
                 __ptext16 0318             ??_LcdDataWrite 004D           i1LcdCmdWrite@cmd 0072  
          ??i1_LcdCmdWrite 0070              __size_of_main 0098                   _rh_byte1 0064  
                 _rh_byte2 0063                ??_configPWM 0076            DhtReadData@data 0050  
__size_of_DhtCheckResponse 0027                   init_ram0 04F5                   setPWM@DC 004E  
                 intlevel1 0000              ??_DhtReadData 004D              ??_LcdCmdWrite 004D  
                stringcode 04E5              ??_LcdMsgPrint 0076                   stringdir 04E5  
                 stringtab 04DB    __size_of_DhtStartSignal 001E             LcdMsgPrint@msg 0050  
      __end_of_DhtReadData 0318  
