

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Jun 14 15:33:15 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 12/02/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F877A Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  0088                     	;# 
   113  0089                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  008E                     	;# 
   117  0091                     	;# 
   118  0092                     	;# 
   119  0093                     	;# 
   120  0094                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010F                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  0091                     	;# 
   178  0092                     	;# 
   179  0093                     	;# 
   180  0094                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  009F                     	;# 
   187  010C                     	;# 
   188  010D                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  018C                     	;# 
   192  018D                     	;# 
   193                           
   194                           	psect	idataCOMMON
   195  054A                     __pidataCOMMON:
   196                           
   197                           ;initializer for _itemp
   198  054A  3414               	retlw	20
   199                           
   200                           	psect	idataBANK0
   201  039C                     __pidataBANK0:
   202                           
   203                           ;initializer for _ihumi
   204  039C  345F               	retlw	95
   205                           
   206                           ;initializer for _idea_temp
   207  039D  3449               	retlw	73
   208  039E  3444               	retlw	68
   209  039F  3454               	retlw	84
   210  03A0  3465               	retlw	101
   211  03A1  346D               	retlw	109
   212  03A2  3470               	retlw	112
   213  03A3  3420               	retlw	32
   214  03A4  343D               	retlw	61
   215  03A5  3420               	retlw	32
   216  03A6  3432               	retlw	50
   217  03A7  3430               	retlw	48
   218  03A8  342E               	retlw	46
   219  03A9  3430               	retlw	48
   220  03AA  3420               	retlw	32
   221  03AB  3443               	retlw	67
   222  03AC  3400               	retlw	0
   223                           
   224                           ;initializer for _humi
   225  03AD  3452               	retlw	82
   226  03AE  3448               	retlw	72
   227  03AF  3420               	retlw	32
   228  03B0  3420               	retlw	32
   229  03B1  3420               	retlw	32
   230  03B2  343D               	retlw	61
   231  03B3  3420               	retlw	32
   232  03B4  3430               	retlw	48
   233  03B5  3430               	retlw	48
   234  03B6  342E               	retlw	46
   235  03B7  3430               	retlw	48
   236  03B8  3420               	retlw	32
   237  03B9  3425               	retlw	37
   238  03BA  3400               	retlw	0
   239                           
   240                           ;initializer for _temp
   241  03BB  3454               	retlw	84
   242  03BC  3465               	retlw	101
   243  03BD  346D               	retlw	109
   244  03BE  3470               	retlw	112
   245  03BF  3420               	retlw	32
   246  03C0  343D               	retlw	61
   247  03C1  3420               	retlw	32
   248  03C2  3430               	retlw	48
   249  03C3  3430               	retlw	48
   250  03C4  342E               	retlw	46
   251  03C5  3430               	retlw	48
   252  03C6  3420               	retlw	32
   253  03C7  3443               	retlw	67
   254  03C8  3400               	retlw	0
   255                           
   256                           	psect	idataBANK1
   257  053A                     __pidataBANK1:
   258                           
   259                           ;initializer for _idea_humi
   260  053A  3449               	retlw	73
   261  053B  3444               	retlw	68
   262  053C  3452               	retlw	82
   263  053D  3448               	retlw	72
   264  053E  3420               	retlw	32
   265  053F  3420               	retlw	32
   266  0540  3420               	retlw	32
   267  0541  343D               	retlw	61
   268  0542  3420               	retlw	32
   269  0543  3439               	retlw	57
   270  0544  3435               	retlw	53
   271  0545  342E               	retlw	46
   272  0546  3430               	retlw	48
   273  0547  3420               	retlw	32
   274  0548  3425               	retlw	37
   275  0549  3400               	retlw	0
   276  0015                     _CCPR1L	set	21
   277  0008                     _PORTD	set	8
   278  0059                     _INTF	set	89
   279  005F                     _GIE	set	95
   280  005C                     _INTE	set	92
   281  00BD                     _CCP1X	set	189
   282  00BC                     _CCP1Y	set	188
   283  0092                     _TMR2ON	set	146
   284  0091                     _T2CKPS1	set	145
   285  0090                     _T2CKPS0	set	144
   286  00BB                     _CCP1M3	set	187
   287  00BA                     _CCP1M2	set	186
   288  0034                     _RB4	set	52
   289  0092                     _PR2	set	146
   290  0088                     _TRISD	set	136
   291  040E                     _INTEDG	set	1038
   292  043A                     _TRISC2	set	1082
   293  0434                     _TRISB4	set	1076
   294                           
   295                           	psect	strings
   296  0500                     __pstrings:
   297  0500                     stringtab:
   298  0500                     __stringtab:
   299                           
   300                           ;	String table - string pointers are 1 byte each
   301  0500  1BFF               	btfsc	btemp+1,7
   302  0501  2D0A               	ljmp	stringcode
   303  0502  1383               	bcf	3,7
   304  0503  187F               	btfsc	btemp+1,0
   305  0504  1783               	bsf	3,7
   306  0505  0800               	movf	0,w
   307  0506  0A84               	incf	4,f
   308  0507  1903               	skipnz
   309  0508  0AFF               	incf	btemp+1,f
   310  0509  0008               	return
   311  050A                     stringcode:
   312  050A                     stringdir:
   313  050A  3005               	movlw	high stringdir
   314  050B  008A               	movwf	10
   315  050C  0804               	movf	4,w
   316  050D  0A84               	incf	4,f
   317  050E  0782               	addwf	2,f
   318  050F                     __stringbase:
   319  050F  3400               	retlw	0
   320  0510                     __end_of__stringtab:
   321  0510                     STR_1:
   322  0510  3445               	retlw	69	;'E'
   323  0511  3472               	retlw	114	;'r'
   324  0512  3472               	retlw	114	;'r'
   325  0513  346F               	retlw	111	;'o'
   326  0514  3472               	retlw	114	;'r'
   327  0515  3400               	retlw	0
   328                           
   329                           	psect	cinit
   330  0013                     start_initialization:	
   331                           ; #config settings
   332                           
   333  0013                     __initialization:
   334                           
   335                           ; Initialize objects allocated to BANK1
   336  0013  1383               	bcf	3,7	;select IRP bank0
   337  0014  30B0               	movlw	low (__pdataBANK1+16)
   338  0015  00FD               	movwf	btemp+-1
   339  0016  3005               	movlw	high __pidataBANK1
   340  0017  00FE               	movwf	btemp
   341  0018  303A               	movlw	low __pidataBANK1
   342  0019  00FF               	movwf	btemp+1
   343  001A  30A0               	movlw	low __pdataBANK1
   344  001B  0084               	movwf	4
   345  001C  120A  118A  251A  120A  118A  	fcall	init_ram0
   346                           
   347                           ; Initialize objects allocated to BANK0
   348  0021  304D               	movlw	low (__pdataBANK0+45)
   349  0022  00FD               	movwf	btemp+-1
   350  0023  3003               	movlw	high __pidataBANK0
   351  0024  00FE               	movwf	btemp
   352  0025  309C               	movlw	low __pidataBANK0
   353  0026  00FF               	movwf	btemp+1
   354  0027  3020               	movlw	low __pdataBANK0
   355  0028  0084               	movwf	4
   356  0029  120A  118A  251A  120A  118A  	fcall	init_ram0
   357                           
   358                           ; Initialize objects allocated to COMMON
   359  002E  120A  118A  254A  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   360  0033  00F7               	movwf	__pdataCOMMON& (0+127)
   361                           
   362                           ; Clear objects allocated to BANK0
   363  0034  01E2               	clrf	__pbssBANK0& (0+127)
   364  0035  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   365  0036  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   366  0037  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   367  0038  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   368                           
   369                           ; Clear objects allocated to BITCOMMON
   370  0039  01F6               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   371  003A                     end_of_initialization:	
   372                           ;End of C runtime variable initialization code
   373                           
   374  003A                     __end_of__initialization:
   375  003A  0183               	clrf	3
   376  003B  120A  118A  2930   	ljmp	_main	;jump to C main() function
   377                           
   378                           	psect	bitbssCOMMON
   379  03B0                     __pbitbssCOMMON:
   380  03B0                     _status:
   381  03B0                     	ds	1
   382                           
   383                           	psect	dataCOMMON
   384  0077                     __pdataCOMMON:
   385  0077                     _itemp:
   386  0077                     	ds	1
   387                           
   388                           	psect	bssBANK0
   389  0062                     __pbssBANK0:
   390  0062                     _check_sum:
   391  0062                     	ds	1
   392  0063                     _rh_byte2:
   393  0063                     	ds	1
   394  0064                     _rh_byte1:
   395  0064                     	ds	1
   396  0065                     _t_byte2:
   397  0065                     	ds	1
   398  0066                     _t_byte1:
   399  0066                     	ds	1
   400                           
   401                           	psect	dataBANK0
   402  0020                     __pdataBANK0:
   403  0020                     _ihumi:
   404  0020                     	ds	1
   405  0021                     _idea_temp:
   406  0021                     	ds	16
   407  0031                     _humi:
   408  0031                     	ds	14
   409  003F                     _temp:
   410  003F                     	ds	14
   411                           
   412                           	psect	dataBANK1
   413  00A0                     __pdataBANK1:
   414  00A0                     _idea_humi:
   415  00A0                     	ds	16
   416                           
   417                           	psect	inittext
   418  0516                     init_fetch0:	
   419                           ;	Called with low address in FSR and high address in W
   420                           
   421  0516  087E               	movf	btemp,w
   422  0517  008A               	movwf	10
   423  0518  087F               	movf	btemp+1,w
   424  0519  0082               	movwf	2
   425  051A                     init_ram0:	
   426                           ;Called with:
   427                           ;	high address of idata address in btemp 
   428                           ;	low address of idata address in btemp+1 
   429                           ;	low address of data in FSR
   430                           ;	high address + 1 of data in btemp-1
   431                           
   432  051A  120A  118A  2516  120A  118A  	fcall	init_fetch0
   433  051F  0080               	movwf	0
   434  0520  0A84               	incf	4,f
   435  0521  0804               	movf	4,w
   436  0522  067D               	xorwf	btemp+-1,w
   437  0523  1903               	btfsc	3,2
   438  0524  3400               	retlw	0
   439  0525  0AFF               	incf	btemp+1,f
   440  0526  1903               	btfsc	3,2
   441  0527  0AFE               	incf	btemp,f
   442  0528  2D1A               	goto	init_ram0
   443                           
   444                           	psect	cstackCOMMON
   445  0070                     __pcstackCOMMON:
   446  0070                     ?_DhtUpdateData:
   447  0070                     ?_LcdCmdWrite:	
   448                           ; 1 bit 
   449                           
   450  0070                     ?_LcdInit:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_LcdDataWrite:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ?_DhtStartSignal:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_DhtCheckResponse:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_DhtReadData:	
   463                           ; 1 bytes @ 0x0
   464                           
   465  0070                     ?_configPWM:	
   466                           ; 1 bytes @ 0x0
   467                           
   468  0070                     ?_setPWM:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_main:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_ISR:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?i1_LcdCmdWrite:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ??i1_LcdCmdWrite:	
   481                           ; 1 bytes @ 0x0
   482                           
   483                           
   484                           ; 1 bytes @ 0x0
   485  0070                     	ds	2
   486  0072                     i1LcdCmdWrite@cmd:
   487                           
   488                           ; 1 bytes @ 0x2
   489  0072                     	ds	1
   490  0073                     ??_ISR:
   491                           
   492                           ; 1 bytes @ 0x3
   493  0073                     	ds	3
   494  0076                     ??_setPumpValue:
   495  0076                     ??_LcdInit:	
   496                           ; 1 bytes @ 0x6
   497                           
   498  0076                     ??_LcdMsgPrint:	
   499                           ; 1 bytes @ 0x6
   500                           
   501  0076                     ??_configPWM:	
   502                           ; 1 bytes @ 0x6
   503                           
   504  0076                     ??___bmul:	
   505                           ; 1 bytes @ 0x6
   506                           
   507  0076                     ??___awdiv:	
   508                           ; 1 bytes @ 0x6
   509                           
   510  0076                     ??___awmod:	
   511                           ; 1 bytes @ 0x6
   512                           
   513  0076                     ??___lbdiv:	
   514                           ; 1 bytes @ 0x6
   515                           
   516                           
   517                           	psect	cstackBANK0
   518  004D                     __pcstackBANK0:	
   519                           ; 1 bytes @ 0x6
   520                           
   521  004D                     ??_LcdCmdWrite:
   522  004D                     ??_LcdDataWrite:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  004D                     ??_DhtStartSignal:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  004D                     ??_DhtCheckResponse:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  004D                     ??_DhtReadData:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  004D                     ??_setPWM:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  004D                     ?___lbdiv:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  004D                     ?___awdiv:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  004D                     ?___awmod:	
   544                           ; 2 bytes @ 0x0
   545                           
   546  004D                     ___lbdiv@divisor:	
   547                           ; 2 bytes @ 0x0
   548                           
   549  004D                     ___awdiv@divisor:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  004D                     ___awmod@divisor:	
   553                           ; 2 bytes @ 0x0
   554                           
   555                           
   556                           ; 2 bytes @ 0x0
   557  004D                     	ds	1
   558  004E                     setPWM@DC:
   559  004E                     ___lbdiv@dividend:	
   560                           ; 1 bytes @ 0x1
   561                           
   562                           
   563                           ; 1 bytes @ 0x1
   564  004E                     	ds	1
   565  004F                     LcdCmdWrite@cmd:
   566  004F                     LcdDataWrite@data:	
   567                           ; 1 bytes @ 0x2
   568                           
   569  004F                     DhtReadData@i:	
   570                           ; 1 bytes @ 0x2
   571                           
   572  004F                     ___lbdiv@counter:	
   573                           ; 1 bytes @ 0x2
   574                           
   575  004F                     ___awdiv@dividend:	
   576                           ; 1 bytes @ 0x2
   577                           
   578  004F                     ___awmod@dividend:	
   579                           ; 2 bytes @ 0x2
   580                           
   581                           
   582                           ; 2 bytes @ 0x2
   583  004F                     	ds	1
   584  0050                     ?_LcdMsgPrint:
   585  0050                     DhtReadData@data:	
   586                           ; 1 bytes @ 0x3
   587                           
   588  0050                     ___lbdiv@quotient:	
   589                           ; 1 bytes @ 0x3
   590                           
   591  0050                     LcdMsgPrint@msg:	
   592                           ; 1 bytes @ 0x3
   593                           
   594                           
   595                           ; 2 bytes @ 0x3
   596  0050                     	ds	1
   597  0051                     ?___bmul:
   598  0051                     ___bmul@multiplicand:	
   599                           ; 1 bytes @ 0x4
   600                           
   601  0051                     ___awdiv@counter:	
   602                           ; 1 bytes @ 0x4
   603                           
   604  0051                     ___awmod@counter:	
   605                           ; 1 bytes @ 0x4
   606                           
   607                           
   608                           ; 1 bytes @ 0x4
   609  0051                     	ds	1
   610  0052                     LcdMsgPrint@i:
   611  0052                     ___bmul@product:	
   612                           ; 1 bytes @ 0x5
   613                           
   614  0052                     ___awdiv@sign:	
   615                           ; 1 bytes @ 0x5
   616                           
   617  0052                     ___awmod@sign:	
   618                           ; 1 bytes @ 0x5
   619                           
   620                           
   621                           ; 1 bytes @ 0x5
   622  0052                     	ds	1
   623  0053                     ___bmul@multiplier:
   624  0053                     ___awdiv@quotient:	
   625                           ; 1 bytes @ 0x6
   626                           
   627                           
   628                           ; 2 bytes @ 0x6
   629  0053                     	ds	1
   630  0054                     ?_setPumpValue:
   631  0054                     setPumpValue@id_rh:	
   632                           ; 1 bytes @ 0x7
   633                           
   634                           
   635                           ; 1 bytes @ 0x7
   636  0054                     	ds	1
   637  0055                     ??_DhtUpdateData:
   638  0055                     setPumpValue@r_rh:	
   639                           ; 1 bytes @ 0x8
   640                           
   641                           
   642                           ; 1 bytes @ 0x8
   643  0055                     	ds	1
   644  0056                     setPumpValue@delta:
   645                           
   646                           ; 1 bytes @ 0x9
   647  0056                     	ds	9
   648  005F                     ??_main:
   649                           
   650                           ; 1 bytes @ 0x12
   651  005F                     	ds	3
   652                           
   653                           	psect	maintext
   654  0130                     __pmaintext:	
   655 ;;
   656 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   657 ;;
   658 ;; *************** function _main *****************
   659 ;; Defined at:
   660 ;;		line 31 in file "main.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;		None
   663 ;; Auto vars:     Size  Location     Type
   664 ;;		None
   665 ;; Return value:  Size  Location     Type
   666 ;;                  1    wreg      void 
   667 ;; Registers used:
   668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   669 ;; Tracked objects:
   670 ;;		On entry : B00/0
   671 ;;		On exit  : 0/0
   672 ;;		Unchanged: 0/0
   673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   674 ;;      Params:         0       0       0       0       0
   675 ;;      Locals:         0       0       0       0       0
   676 ;;      Temps:          0       3       0       0       0
   677 ;;      Totals:         0       3       0       0       0
   678 ;;Total ram usage:        3 bytes
   679 ;; Hardware stack levels required when called:    4
   680 ;; This function calls:
   681 ;;		_DhtUpdateData
   682 ;;		_LcdCmdWrite
   683 ;;		_LcdInit
   684 ;;		_LcdMsgPrint
   685 ;;		_configPWM
   686 ;;		_setPumpValue
   687 ;; This function is called by:
   688 ;;		Startup code after reset
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           
   693                           ;psect for function _main
   694  0130                     _main:
   695  0130                     l1617:	
   696                           ;incstack = 0
   697                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   698                           
   699                           
   700                           ;main.c: 35:     INTEDG = 1;
   701  0130  1683               	bsf	3,5	;RP0=1, select bank1
   702  0131  1303               	bcf	3,6	;RP1=0, select bank1
   703  0132  1701               	bsf	1,6	;volatile
   704                           
   705                           ;main.c: 36:     INTE = 1;
   706  0133  160B               	bsf	11,4	;volatile
   707                           
   708                           ;main.c: 37:     GIE = 1;
   709  0134  178B               	bsf	11,7	;volatile
   710  0135                     l1619:
   711                           
   712                           ;main.c: 42:     LcdInit();
   713  0135  120A  118A  248C  120A  118A  	fcall	_LcdInit
   714  013A                     l1621:
   715                           
   716                           ;main.c: 43:     configPWM();
   717  013A  120A  118A  2529  120A  118A  	fcall	_configPWM
   718  013F                     l1623:
   719                           
   720                           ;main.c: 46:     {;main.c: 47:         if(!status)
   721  013F  1876               	btfsc	_status/(0+8),_status& (0+7)
   722  0140  2942               	goto	u1191
   723  0141  2943               	goto	u1190
   724  0142                     u1191:
   725  0142  2981               	goto	l1637
   726  0143                     u1190:
   727  0143                     l1625:
   728                           
   729                           ;main.c: 48:         {;main.c: 49:             if(DhtUpdateData())
   730  0143  120A  118A  203E  120A  118A  	fcall	_DhtUpdateData
   731  0148  1C03               	btfss	3,0
   732  0149  294B               	goto	u1201
   733  014A  294C               	goto	u1200
   734  014B                     u1201:
   735  014B  296F               	goto	l1633
   736  014C                     u1200:
   737  014C                     l1627:
   738                           
   739                           ;main.c: 50:             {;main.c: 51:                 LcdCmdWrite(0x80);
   740  014C  3080               	movlw	128
   741  014D  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   742  0152                     l1629:
   743                           
   744                           ;main.c: 52:                 LcdMsgPrint(temp);
   745  0152  303F               	movlw	(low (_temp| 0))& (0+255)
   746  0153  1283               	bcf	3,5	;RP0=0, select bank0
   747  0154  1303               	bcf	3,6	;RP1=0, select bank0
   748  0155  00D0               	movwf	LcdMsgPrint@msg
   749  0156  3000               	movlw	0
   750  0157  00D1               	movwf	LcdMsgPrint@msg+1
   751  0158  120A  118A  23C9  120A  118A  	fcall	_LcdMsgPrint
   752  015D                     l1631:
   753                           
   754                           ;main.c: 53:                 LcdCmdWrite(0xC0);
   755  015D  30C0               	movlw	192
   756  015E  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   757                           
   758                           ;main.c: 54:                 LcdMsgPrint(humi);
   759  0163  3031               	movlw	(low (_humi| 0))& (0+255)
   760  0164  1283               	bcf	3,5	;RP0=0, select bank0
   761  0165  1303               	bcf	3,6	;RP1=0, select bank0
   762  0166  00D0               	movwf	LcdMsgPrint@msg
   763  0167  3000               	movlw	0
   764  0168  00D1               	movwf	LcdMsgPrint@msg+1
   765  0169  120A  118A  23C9  120A  118A  	fcall	_LcdMsgPrint
   766                           
   767                           ;main.c: 55:             }
   768  016E  29A9               	goto	l1643
   769  016F                     l1633:
   770                           
   771                           ;main.c: 57:             {;main.c: 58:                 LcdCmdWrite(0x80);
   772  016F  3080               	movlw	128
   773  0170  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   774  0175                     l1635:
   775                           
   776                           ;main.c: 59:                 LcdMsgPrint("Error");
   777  0175  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   778  0176  1283               	bcf	3,5	;RP0=0, select bank0
   779  0177  1303               	bcf	3,6	;RP1=0, select bank0
   780  0178  00D0               	movwf	LcdMsgPrint@msg
   781  0179  3080               	movlw	128
   782  017A  00D1               	movwf	LcdMsgPrint@msg+1
   783  017B  120A  118A  23C9  120A  118A  	fcall	_LcdMsgPrint
   784  0180  29A9               	goto	l1643
   785  0181                     l1637:
   786                           
   787                           ;main.c: 63:         {;main.c: 64:             LcdCmdWrite(0x01);
   788  0181  3001               	movlw	1
   789  0182  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   790                           
   791                           ;main.c: 65:             LcdCmdWrite(0x80);
   792  0187  3080               	movlw	128
   793  0188  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   794  018D                     l1639:
   795                           
   796                           ;main.c: 66:             LcdMsgPrint(idea_temp);
   797  018D  3021               	movlw	(low (_idea_temp| 0))& (0+255)
   798  018E  1283               	bcf	3,5	;RP0=0, select bank0
   799  018F  1303               	bcf	3,6	;RP1=0, select bank0
   800  0190  00D0               	movwf	LcdMsgPrint@msg
   801  0191  3000               	movlw	0
   802  0192  00D1               	movwf	LcdMsgPrint@msg+1
   803  0193  120A  118A  23C9  120A  118A  	fcall	_LcdMsgPrint
   804  0198                     l1641:
   805                           
   806                           ;main.c: 67:             LcdCmdWrite(0xC0);
   807  0198  30C0               	movlw	192
   808  0199  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
   809                           
   810                           ;main.c: 68:             LcdMsgPrint(idea_humi);
   811  019E  30A0               	movlw	(low (_idea_humi| 0))& (0+255)
   812  019F  1283               	bcf	3,5	;RP0=0, select bank0
   813  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   814  01A1  00D0               	movwf	LcdMsgPrint@msg
   815  01A2  3000               	movlw	0
   816  01A3  00D1               	movwf	LcdMsgPrint@msg+1
   817  01A4  120A  118A  23C9  120A  118A  	fcall	_LcdMsgPrint
   818  01A9                     l1643:
   819                           
   820                           ;main.c: 71:         setPumpValue(rh_byte1, ihumi);
   821  01A9  305F               	movlw	95
   822  01AA  00FF               	movwf	btemp+1
   823  01AB  087F               	movf	btemp+1,w
   824  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   825  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   826  01AE  00D4               	movwf	setPumpValue@id_rh
   827  01AF  0864               	movf	_rh_byte1,w
   828  01B0  120A  118A  2448  120A  118A  	fcall	_setPumpValue
   829  01B5                     l1645:
   830                           
   831                           ;main.c: 72:         _delay((unsigned long)((1000)*(20000000/4000.0)));
   832  01B5  301A               	movlw	26
   833  01B6  1283               	bcf	3,5	;RP0=0, select bank0
   834  01B7  1303               	bcf	3,6	;RP1=0, select bank0
   835  01B8  00E1               	movwf	??_main+2
   836  01B9  305E               	movlw	94
   837  01BA  00E0               	movwf	??_main+1
   838  01BB  306D               	movlw	109
   839  01BC  00DF               	movwf	??_main
   840  01BD                     u1217:
   841  01BD  0BDF               	decfsz	??_main,f
   842  01BE  29BD               	goto	u1217
   843  01BF  0BE0               	decfsz	??_main+1,f
   844  01C0  29BD               	goto	u1217
   845  01C1  0BE1               	decfsz	??_main+2,f
   846  01C2  29BD               	goto	u1217
   847  01C3  29C4               	nop2
   848  01C4  293F               	goto	l1623
   849  01C5  120A  118A  2810   	ljmp	start
   850  01C8                     __end_of_main:
   851                           
   852                           	psect	text1
   853  0448                     __ptext1:	
   854 ;; *************** function _setPumpValue *****************
   855 ;; Defined at:
   856 ;;		line 88 in file "main.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  r_rh            1    wreg     unsigned char 
   859 ;;  id_rh           1    7[BANK0 ] unsigned char 
   860 ;; Auto vars:     Size  Location     Type
   861 ;;  r_rh            1    8[BANK0 ] unsigned char 
   862 ;;  delta           1    9[BANK0 ] unsigned char 
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   872 ;;      Params:         0       1       0       0       0
   873 ;;      Locals:         0       2       0       0       0
   874 ;;      Temps:          0       0       0       0       0
   875 ;;      Totals:         0       3       0       0       0
   876 ;;Total ram usage:        3 bytes
   877 ;; Hardware stack levels used:    1
   878 ;; Hardware stack levels required when called:    3
   879 ;; This function calls:
   880 ;;		___bmul
   881 ;;		___lbdiv
   882 ;;		_setPWM
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _setPumpValue
   890  0448                     _setPumpValue:
   891                           
   892                           ;incstack = 0
   893                           ; Regs used in _setPumpValue: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   894                           ;setPumpValue@r_rh stored from wreg
   895  0448  1283               	bcf	3,5	;RP0=0, select bank0
   896  0449  1303               	bcf	3,6	;RP1=0, select bank0
   897  044A  00D5               	movwf	setPumpValue@r_rh
   898  044B                     l1611:
   899                           
   900                           ;main.c: 88: void setPumpValue(unsigned char r_rh, unsigned char id_rh);main.c: 89: {;ma
      +                          in.c: 90:     char delta = id_rh - r_rh;
   901  044B  0855               	movf	setPumpValue@r_rh,w
   902  044C  0254               	subwf	setPumpValue@id_rh,w
   903  044D  00FF               	movwf	btemp+1
   904  044E  087F               	movf	btemp+1,w
   905  044F  00D6               	movwf	setPumpValue@delta
   906  0450                     l1613:
   907                           
   908                           ;main.c: 91:     if(delta > 0)
   909  0450  0856               	movf	setPumpValue@delta,w
   910  0451  1903               	btfsc	3,2
   911  0452  2C54               	goto	u1181
   912  0453  2C55               	goto	u1180
   913  0454                     u1181:
   914  0454  2C6D               	goto	l139
   915  0455                     u1180:
   916  0455                     l1615:
   917                           
   918                           ;main.c: 92:     {;main.c: 93:         setPWM(delta/id_rh*200);
   919  0455  30C8               	movlw	200
   920  0456  00FF               	movwf	btemp+1
   921  0457  087F               	movf	btemp+1,w
   922  0458  00D1               	movwf	___bmul@multiplicand
   923  0459  0854               	movf	setPumpValue@id_rh,w
   924  045A  00FF               	movwf	btemp+1
   925  045B  087F               	movf	btemp+1,w
   926  045C  00CD               	movwf	___lbdiv@divisor
   927  045D  0856               	movf	setPumpValue@delta,w
   928  045E  120A  118A  23F6  120A  118A  	fcall	___lbdiv
   929  0463  120A  118A  24D9  120A  118A  	fcall	___bmul
   930  0468  120A  118A  24A8  120A  118A  	fcall	_setPWM
   931  046D                     l139:
   932  046D  0008               	return
   933  046E                     __end_of_setPumpValue:
   934                           
   935                           	psect	text2
   936  04A8                     __ptext2:	
   937 ;; *************** function _setPWM *****************
   938 ;; Defined at:
   939 ;;		line 29 in file "./pwm.h"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  DC              1    wreg     unsigned char 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  DC              1    1[BANK0 ] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         0       1       0       0       0
   955 ;;      Temps:          0       1       0       0       0
   956 ;;      Totals:         0       2       0       0       0
   957 ;;Total ram usage:        2 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    2
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_setPumpValue
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967                           
   968                           ;psect for function _setPWM
   969  04A8                     _setPWM:
   970                           
   971                           ;incstack = 0
   972                           ; Regs used in _setPWM: [wreg+status,2+status,0]
   973                           ;setPWM@DC stored from wreg
   974  04A8  1283               	bcf	3,5	;RP0=0, select bank0
   975  04A9  1303               	bcf	3,6	;RP1=0, select bank0
   976  04AA  00CE               	movwf	setPWM@DC
   977  04AB                     l1485:
   978                           
   979                           ;./pwm.h: 29:     void setPWM(unsigned char DC);./pwm.h: 30:     {;./pwm.h: 32:         
      +                          CCP1Y = DC & (1<<0);
   980  04AB  184E               	btfsc	setPWM@DC,0
   981  04AC  2CAE               	goto	u981
   982  04AD  2CB2               	goto	u980
   983  04AE                     u981:
   984  04AE  1283               	bcf	3,5	;RP0=0, select bank0
   985  04AF  1303               	bcf	3,6	;RP1=0, select bank0
   986  04B0  1617               	bsf	23,4	;volatile
   987  04B1  2CB5               	goto	u994
   988  04B2                     u980:
   989  04B2  1283               	bcf	3,5	;RP0=0, select bank0
   990  04B3  1303               	bcf	3,6	;RP1=0, select bank0
   991  04B4  1217               	bcf	23,4	;volatile
   992  04B5                     u994:
   993                           
   994                           ;./pwm.h: 33:         CCP1X = DC & (1<<1);
   995  04B5  1297               	bcf	23,5	;volatile
   996  04B6                     l1487:
   997                           
   998                           ;./pwm.h: 35:         CCPR1L = DC >> 2;
   999  04B6  084E               	movf	setPWM@DC,w
  1000  04B7  00CD               	movwf	??_setPWM
  1001  04B8  3002               	movlw	2
  1002  04B9                     u1005:
  1003  04B9  1003               	clrc
  1004  04BA  0CCD               	rrf	??_setPWM,f
  1005  04BB  3EFF               	addlw	-1
  1006  04BC  1D03               	skipz
  1007  04BD  2CB9               	goto	u1005
  1008  04BE  084D               	movf	??_setPWM,w
  1009  04BF  0095               	movwf	21	;volatile
  1010  04C0                     l107:
  1011  04C0  0008               	return
  1012  04C1                     __end_of_setPWM:
  1013                           
  1014                           	psect	text3
  1015  03F6                     __ptext3:	
  1016 ;; *************** function ___lbdiv *****************
  1017 ;; Defined at:
  1018 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lbdiv.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  dividend        1    wreg     unsigned char 
  1021 ;;  divisor         1    0[BANK0 ] unsigned char 
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;  dividend        1    1[BANK0 ] unsigned char 
  1024 ;;  quotient        1    3[BANK0 ] unsigned char 
  1025 ;;  counter         1    2[BANK0 ] unsigned char 
  1026 ;; Return value:  Size  Location     Type
  1027 ;;                  1    wreg      unsigned char 
  1028 ;; Registers used:
  1029 ;;		wreg, status,2, status,0, btemp+1
  1030 ;; Tracked objects:
  1031 ;;		On entry : 0/0
  1032 ;;		On exit  : 0/0
  1033 ;;		Unchanged: 0/0
  1034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1035 ;;      Params:         0       1       0       0       0
  1036 ;;      Locals:         0       3       0       0       0
  1037 ;;      Temps:          0       0       0       0       0
  1038 ;;      Totals:         0       4       0       0       0
  1039 ;;Total ram usage:        4 bytes
  1040 ;; Hardware stack levels used:    1
  1041 ;; Hardware stack levels required when called:    2
  1042 ;; This function calls:
  1043 ;;		Nothing
  1044 ;; This function is called by:
  1045 ;;		_setPumpValue
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function ___lbdiv
  1051  03F6                     ___lbdiv:
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in ___lbdiv: [wreg+status,2+status,0+btemp+1]
  1055                           ;___lbdiv@dividend stored from wreg
  1056  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1057  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1058  03F8  00CE               	movwf	___lbdiv@dividend
  1059  03F9                     l1543:
  1060  03F9  01D0               	clrf	___lbdiv@quotient
  1061  03FA                     l1545:
  1062  03FA  084D               	movf	___lbdiv@divisor,w
  1063  03FB  1903               	btfsc	3,2
  1064  03FC  2BFE               	goto	u1121
  1065  03FD  2BFF               	goto	u1120
  1066  03FE                     u1121:
  1067  03FE  2C1F               	goto	l1565
  1068  03FF                     u1120:
  1069  03FF                     l1547:
  1070  03FF  01CF               	clrf	___lbdiv@counter
  1071  0400  0ACF               	incf	___lbdiv@counter,f
  1072  0401  2C08               	goto	l1553
  1073  0402                     l1549:
  1074  0402  1003               	clrc
  1075  0403  0DCD               	rlf	___lbdiv@divisor,f
  1076  0404                     l1551:
  1077  0404  3001               	movlw	1
  1078  0405  00FF               	movwf	btemp+1
  1079  0406  087F               	movf	btemp+1,w
  1080  0407  07CF               	addwf	___lbdiv@counter,f
  1081  0408                     l1553:
  1082  0408  1FCD               	btfss	___lbdiv@divisor,7
  1083  0409  2C0B               	goto	u1131
  1084  040A  2C0C               	goto	u1130
  1085  040B                     u1131:
  1086  040B  2C02               	goto	l1549
  1087  040C                     u1130:
  1088  040C                     l1555:
  1089  040C  1003               	clrc
  1090  040D  0DD0               	rlf	___lbdiv@quotient,f
  1091  040E  084D               	movf	___lbdiv@divisor,w
  1092  040F  024E               	subwf	___lbdiv@dividend,w
  1093  0410  1C03               	skipc
  1094  0411  2C13               	goto	u1141
  1095  0412  2C14               	goto	u1140
  1096  0413                     u1141:
  1097  0413  2C17               	goto	l1561
  1098  0414                     u1140:
  1099  0414                     l1557:
  1100  0414  084D               	movf	___lbdiv@divisor,w
  1101  0415  02CE               	subwf	___lbdiv@dividend,f
  1102  0416                     l1559:
  1103  0416  1450               	bsf	___lbdiv@quotient,0
  1104  0417                     l1561:
  1105  0417  1003               	clrc
  1106  0418  0CCD               	rrf	___lbdiv@divisor,f
  1107  0419                     l1563:
  1108  0419  3001               	movlw	1
  1109  041A  02CF               	subwf	___lbdiv@counter,f
  1110  041B  1D03               	btfss	3,2
  1111  041C  2C1E               	goto	u1151
  1112  041D  2C1F               	goto	u1150
  1113  041E                     u1151:
  1114  041E  2C0C               	goto	l1555
  1115  041F                     u1150:
  1116  041F                     l1565:
  1117  041F  0850               	movf	___lbdiv@quotient,w
  1118  0420                     l431:
  1119  0420  0008               	return
  1120  0421                     __end_of___lbdiv:
  1121                           
  1122                           	psect	text4
  1123  04D9                     __ptext4:	
  1124 ;; *************** function ___bmul *****************
  1125 ;; Defined at:
  1126 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  multiplier      1    wreg     unsigned char 
  1129 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  1130 ;; Auto vars:     Size  Location     Type
  1131 ;;  multiplier      1    6[BANK0 ] unsigned char 
  1132 ;;  product         1    5[BANK0 ] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      unsigned char 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0, btemp+1
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       1       0       0       0
  1143 ;;      Locals:         0       2       0       0       0
  1144 ;;      Temps:          0       0       0       0       0
  1145 ;;      Totals:         0       3       0       0       0
  1146 ;;Total ram usage:        3 bytes
  1147 ;; Hardware stack levels used:    1
  1148 ;; Hardware stack levels required when called:    2
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_setPumpValue
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156                           
  1157                           ;psect for function ___bmul
  1158  04D9                     ___bmul:
  1159                           
  1160                           ;incstack = 0
  1161                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1162                           ;___bmul@multiplier stored from wreg
  1163  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  1164  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  1165  04DB  00D3               	movwf	___bmul@multiplier
  1166  04DC                     l1489:
  1167  04DC  01D2               	clrf	___bmul@product
  1168  04DD                     l1491:
  1169  04DD  1C53               	btfss	___bmul@multiplier,0
  1170  04DE  2CE0               	goto	u1011
  1171  04DF  2CE1               	goto	u1010
  1172  04E0                     u1011:
  1173  04E0  2CE5               	goto	l1495
  1174  04E1                     u1010:
  1175  04E1                     l1493:
  1176  04E1  0851               	movf	___bmul@multiplicand,w
  1177  04E2  00FF               	movwf	btemp+1
  1178  04E3  087F               	movf	btemp+1,w
  1179  04E4  07D2               	addwf	___bmul@product,f
  1180  04E5                     l1495:
  1181  04E5  1003               	clrc
  1182  04E6  0DD1               	rlf	___bmul@multiplicand,f
  1183  04E7                     l1497:
  1184  04E7  1003               	clrc
  1185  04E8  0CD3               	rrf	___bmul@multiplier,f
  1186  04E9                     l1499:
  1187  04E9  0853               	movf	___bmul@multiplier,w
  1188  04EA  1D03               	btfss	3,2
  1189  04EB  2CED               	goto	u1021
  1190  04EC  2CEE               	goto	u1020
  1191  04ED                     u1021:
  1192  04ED  2CDD               	goto	l1491
  1193  04EE                     u1020:
  1194  04EE                     l1501:
  1195  04EE  0852               	movf	___bmul@product,w
  1196  04EF                     l251:
  1197  04EF  0008               	return
  1198  04F0                     __end_of___bmul:
  1199                           
  1200                           	psect	text5
  1201  0529                     __ptext5:	
  1202 ;; *************** function _configPWM *****************
  1203 ;; Defined at:
  1204 ;;		line 10 in file "./pwm.h"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;		None
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       0       0       0       0
  1219 ;;      Locals:         0       0       0       0       0
  1220 ;;      Temps:          0       0       0       0       0
  1221 ;;      Totals:         0       0       0       0       0
  1222 ;;Total ram usage:        0 bytes
  1223 ;; Hardware stack levels used:    1
  1224 ;; Hardware stack levels required when called:    2
  1225 ;; This function calls:
  1226 ;;		Nothing
  1227 ;; This function is called by:
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _configPWM
  1234  0529                     _configPWM:
  1235  0529                     l1323:	
  1236                           ;incstack = 0
  1237                           ; Regs used in _configPWM: [wreg]
  1238                           
  1239                           
  1240                           ;./pwm.h: 13:         CCP1M2 = 1;
  1241  0529  1283               	bcf	3,5	;RP0=0, select bank0
  1242  052A  1303               	bcf	3,6	;RP1=0, select bank0
  1243  052B  1517               	bsf	23,2	;volatile
  1244                           
  1245                           ;./pwm.h: 14:         CCP1M3 = 1;
  1246  052C  1597               	bsf	23,3	;volatile
  1247                           
  1248                           ;./pwm.h: 16:         TRISC2 = 0;
  1249  052D  1683               	bsf	3,5	;RP0=1, select bank1
  1250  052E  1303               	bcf	3,6	;RP1=0, select bank1
  1251  052F  1107               	bcf	7,2	;volatile
  1252                           
  1253                           ;./pwm.h: 18:         T2CKPS0 = 1;
  1254  0530  1283               	bcf	3,5	;RP0=0, select bank0
  1255  0531  1303               	bcf	3,6	;RP1=0, select bank0
  1256  0532  1412               	bsf	18,0	;volatile
  1257                           
  1258                           ;./pwm.h: 19:         T2CKPS1 = 1;
  1259  0533  1492               	bsf	18,1	;volatile
  1260                           
  1261                           ;./pwm.h: 20:         TMR2ON = 1;
  1262  0534  1512               	bsf	18,2	;volatile
  1263  0535                     l1325:
  1264                           
  1265                           ;./pwm.h: 23:         PR2 = 49;
  1266  0535  3031               	movlw	49
  1267  0536  1683               	bsf	3,5	;RP0=1, select bank1
  1268  0537  1303               	bcf	3,6	;RP1=0, select bank1
  1269  0538  0092               	movwf	18	;volatile
  1270  0539                     l104:
  1271  0539  0008               	return
  1272  053A                     __end_of_configPWM:
  1273                           
  1274                           	psect	text6
  1275  03C9                     __ptext6:	
  1276 ;; *************** function _LcdMsgPrint *****************
  1277 ;; Defined at:
  1278 ;;		line 79 in file "./lcd.h"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  msg             2    3[BANK0 ] PTR unsigned char 
  1281 ;;		 -> idea_humi(16), idea_temp(16), STR_1(6), humi(14), 
  1282 ;;		 -> temp(14), 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  i               1    5[BANK0 ] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       2       0       0       0
  1295 ;;      Locals:         0       1       0       0       0
  1296 ;;      Temps:          0       0       0       0       0
  1297 ;;      Totals:         0       3       0       0       0
  1298 ;;Total ram usage:        3 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    3
  1301 ;; This function calls:
  1302 ;;		_LcdDataWrite
  1303 ;; This function is called by:
  1304 ;;		_main
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _LcdMsgPrint
  1310  03C9                     _LcdMsgPrint:
  1311  03C9                     l1579:	
  1312                           ;incstack = 0
  1313                           ; Regs used in _LcdMsgPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1314                           
  1315                           
  1316                           ;./lcd.h: 79:     void LcdMsgPrint(char* msg);./lcd.h: 80:     {;./lcd.h: 81:         fo
      +                          r(char i = 0; msg[i] != '\0'; i++)
  1317  03C9  1283               	bcf	3,5	;RP0=0, select bank0
  1318  03CA  1303               	bcf	3,6	;RP1=0, select bank0
  1319  03CB  01D2               	clrf	LcdMsgPrint@i
  1320  03CC  2BE4               	goto	l1585
  1321  03CD                     l1581:
  1322                           
  1323                           ;./lcd.h: 82:         {;./lcd.h: 83:             LcdDataWrite(msg[i]);
  1324  03CD  0852               	movf	LcdMsgPrint@i,w
  1325  03CE  0750               	addwf	LcdMsgPrint@msg,w
  1326  03CF  0084               	movwf	4
  1327  03D0  0851               	movf	LcdMsgPrint@msg+1,w
  1328  03D1  1803               	skipnc
  1329  03D2  0A51               	incf	LcdMsgPrint@msg+1,w
  1330  03D3  00FF               	movwf	btemp+1
  1331  03D4  120A  118A  2500  120A  118A  	fcall	stringtab
  1332  03D9  120A  118A  235B  120A  118A  	fcall	_LcdDataWrite
  1333  03DE                     l1583:
  1334                           
  1335                           ;./lcd.h: 84:         }
  1336  03DE  3001               	movlw	1
  1337  03DF  00FF               	movwf	btemp+1
  1338  03E0  087F               	movf	btemp+1,w
  1339  03E1  1283               	bcf	3,5	;RP0=0, select bank0
  1340  03E2  1303               	bcf	3,6	;RP1=0, select bank0
  1341  03E3  07D2               	addwf	LcdMsgPrint@i,f
  1342  03E4                     l1585:
  1343  03E4  0852               	movf	LcdMsgPrint@i,w
  1344  03E5  0750               	addwf	LcdMsgPrint@msg,w
  1345  03E6  0084               	movwf	4
  1346  03E7  0851               	movf	LcdMsgPrint@msg+1,w
  1347  03E8  1803               	skipnc
  1348  03E9  0A51               	incf	LcdMsgPrint@msg+1,w
  1349  03EA  00FF               	movwf	btemp+1
  1350  03EB  120A  118A  2500  120A  118A  	fcall	stringtab
  1351  03F0  3A00               	xorlw	0
  1352  03F1  1D03               	skipz
  1353  03F2  2BF4               	goto	u1161
  1354  03F3  2BF5               	goto	u1160
  1355  03F4                     u1161:
  1356  03F4  2BCD               	goto	l1581
  1357  03F5                     u1160:
  1358  03F5                     l55:
  1359  03F5  0008               	return
  1360  03F6                     __end_of_LcdMsgPrint:
  1361                           
  1362                           	psect	text7
  1363  035B                     __ptext7:	
  1364 ;; *************** function _LcdDataWrite *****************
  1365 ;; Defined at:
  1366 ;;		line 61 in file "./lcd.h"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  data            1    wreg     unsigned char 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  data            1    2[BANK0 ] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  1    wreg      void 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0, btemp+1
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         0       1       0       0       0
  1382 ;;      Temps:          0       2       0       0       0
  1383 ;;      Totals:         0       3       0       0       0
  1384 ;;Total ram usage:        3 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    2
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_LcdMsgPrint
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           
  1394                           
  1395                           ;psect for function _LcdDataWrite
  1396  035B                     _LcdDataWrite:
  1397                           
  1398                           ;incstack = 0
  1399                           ; Regs used in _LcdDataWrite: [wreg+status,2+status,0+btemp+1]
  1400                           ;LcdDataWrite@data stored from wreg
  1401  035B  1283               	bcf	3,5	;RP0=0, select bank0
  1402  035C  1303               	bcf	3,6	;RP1=0, select bank0
  1403  035D  00CF               	movwf	LcdDataWrite@data
  1404  035E                     l1419:
  1405                           
  1406                           ;./lcd.h: 61:     void LcdDataWrite(char data);./lcd.h: 62:     {;./lcd.h: 63:         P
      +                          ORTD = (data & 0xF0);
  1407  035E  084F               	movf	LcdDataWrite@data,w
  1408  035F  39F0               	andlw	240
  1409  0360  0088               	movwf	8	;volatile
  1410  0361                     l1421:
  1411                           
  1412                           ;./lcd.h: 64:         PORTD |= (1<<0);
  1413  0361  1408               	bsf	8,0	;volatile
  1414  0362                     l1423:
  1415                           
  1416                           ;./lcd.h: 65:         PORTD &= ~(1<<1);
  1417  0362  30FD               	movlw	253
  1418  0363  00FF               	movwf	btemp+1
  1419  0364  087F               	movf	btemp+1,w
  1420  0365  0588               	andwf	8,f	;volatile
  1421  0366                     l1425:
  1422                           
  1423                           ;./lcd.h: 66:         PORTD |= (1<<2);
  1424  0366  1508               	bsf	8,2	;volatile
  1425  0367                     l1427:
  1426                           
  1427                           ;./lcd.h: 67:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1428  0367  3041               	movlw	65
  1429  0368  1283               	bcf	3,5	;RP0=0, select bank0
  1430  0369  1303               	bcf	3,6	;RP1=0, select bank0
  1431  036A  00CE               	movwf	??_LcdDataWrite+1
  1432  036B  30ED               	movlw	237
  1433  036C  00CD               	movwf	??_LcdDataWrite
  1434  036D                     u1227:
  1435  036D  0BCD               	decfsz	??_LcdDataWrite,f
  1436  036E  2B6D               	goto	u1227
  1437  036F  0BCE               	decfsz	??_LcdDataWrite+1,f
  1438  0370  2B6D               	goto	u1227
  1439  0371  2B72               	nop2
  1440  0372                     l1429:
  1441                           
  1442                           ;./lcd.h: 68:         PORTD &= ~(1<<2);
  1443  0372  30FB               	movlw	251
  1444  0373  00FF               	movwf	btemp+1
  1445  0374  087F               	movf	btemp+1,w
  1446  0375  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0376  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0377  0588               	andwf	8,f	;volatile
  1449  0378                     l1431:
  1450                           
  1451                           ;./lcd.h: 70:         PORTD = ((data<<4) & 0xF0);
  1452  0378  084F               	movf	LcdDataWrite@data,w
  1453  0379  00CD               	movwf	??_LcdDataWrite
  1454  037A  3003               	movlw	3
  1455  037B                     u905:
  1456  037B  1003               	clrc
  1457  037C  0DCD               	rlf	??_LcdDataWrite,f
  1458  037D  3EFF               	addlw	-1
  1459  037E  1D03               	skipz
  1460  037F  2B7B               	goto	u905
  1461  0380  1003               	clrc
  1462  0381  0D4D               	rlf	??_LcdDataWrite,w
  1463  0382  39F0               	andlw	240
  1464  0383  0088               	movwf	8	;volatile
  1465  0384                     l1433:
  1466                           
  1467                           ;./lcd.h: 71:         PORTD |= (1<<0);
  1468  0384  1408               	bsf	8,0	;volatile
  1469  0385                     l1435:
  1470                           
  1471                           ;./lcd.h: 72:         PORTD &= ~(1<<1);
  1472  0385  30FD               	movlw	253
  1473  0386  00FF               	movwf	btemp+1
  1474  0387  087F               	movf	btemp+1,w
  1475  0388  0588               	andwf	8,f	;volatile
  1476  0389                     l1437:
  1477                           
  1478                           ;./lcd.h: 73:         PORTD |= (1<<2);
  1479  0389  1508               	bsf	8,2	;volatile
  1480  038A                     l1439:
  1481                           
  1482                           ;./lcd.h: 74:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1483  038A  3041               	movlw	65
  1484  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1485  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1486  038D  00CE               	movwf	??_LcdDataWrite+1
  1487  038E  30ED               	movlw	237
  1488  038F  00CD               	movwf	??_LcdDataWrite
  1489  0390                     u1237:
  1490  0390  0BCD               	decfsz	??_LcdDataWrite,f
  1491  0391  2B90               	goto	u1237
  1492  0392  0BCE               	decfsz	??_LcdDataWrite+1,f
  1493  0393  2B90               	goto	u1237
  1494  0394  2B95               	nop2
  1495  0395                     l1441:
  1496                           
  1497                           ;./lcd.h: 75:         PORTD &= ~(1<<2);
  1498  0395  30FB               	movlw	251
  1499  0396  00FF               	movwf	btemp+1
  1500  0397  087F               	movf	btemp+1,w
  1501  0398  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0399  1303               	bcf	3,6	;RP1=0, select bank0
  1503  039A  0588               	andwf	8,f	;volatile
  1504  039B                     l49:
  1505  039B  0008               	return
  1506  039C                     __end_of_LcdDataWrite:
  1507                           
  1508                           	psect	text8
  1509  048C                     __ptext8:	
  1510 ;; *************** function _LcdInit *****************
  1511 ;; Defined at:
  1512 ;;		line 50 in file "./lcd.h"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    3
  1533 ;; This function calls:
  1534 ;;		_LcdCmdWrite
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _LcdInit
  1542  048C                     _LcdInit:
  1543  048C                     l1569:	
  1544                           ;incstack = 0
  1545                           ; Regs used in _LcdInit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1546                           
  1547                           
  1548                           ;./lcd.h: 52:         TRISD = 0x00;
  1549  048C  1683               	bsf	3,5	;RP0=1, select bank1
  1550  048D  1303               	bcf	3,6	;RP1=0, select bank1
  1551  048E  0188               	clrf	8	;volatile
  1552  048F                     l1571:
  1553                           
  1554                           ;./lcd.h: 53:         LcdCmdWrite(0x02);
  1555  048F  3002               	movlw	2
  1556  0490  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
  1557  0495                     l1573:
  1558                           
  1559                           ;./lcd.h: 54:         LcdCmdWrite(0x28);
  1560  0495  3028               	movlw	40
  1561  0496  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
  1562  049B                     l1575:
  1563                           
  1564                           ;./lcd.h: 55:         LcdCmdWrite(0x0E);
  1565  049B  300E               	movlw	14
  1566  049C  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
  1567  04A1                     l1577:
  1568                           
  1569                           ;./lcd.h: 56:         LcdCmdWrite(0x01);
  1570  04A1  3001               	movlw	1
  1571  04A2  120A  118A  228C  120A  118A  	fcall	_LcdCmdWrite
  1572  04A7                     l46:
  1573  04A7  0008               	return
  1574  04A8                     __end_of_LcdInit:
  1575                           
  1576                           	psect	text9
  1577  028C                     __ptext9:	
  1578 ;; *************** function _LcdCmdWrite *****************
  1579 ;; Defined at:
  1580 ;;		line 32 in file "./lcd.h"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  cmd             1    wreg     unsigned char 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  cmd             1    2[BANK0 ] unsigned char 
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0, btemp+1
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1594 ;;      Params:         0       0       0       0       0
  1595 ;;      Locals:         0       1       0       0       0
  1596 ;;      Temps:          0       2       0       0       0
  1597 ;;      Totals:         0       3       0       0       0
  1598 ;;Total ram usage:        3 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    2
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_LcdInit
  1605 ;;		_main
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function _LcdCmdWrite
  1611  028C                     _LcdCmdWrite:
  1612                           
  1613                           ;incstack = 0
  1614                           ; Regs used in _LcdCmdWrite: [wreg+status,2+status,0+btemp+1]
  1615                           ;LcdCmdWrite@cmd stored from wreg
  1616  028C  1283               	bcf	3,5	;RP0=0, select bank0
  1617  028D  1303               	bcf	3,6	;RP1=0, select bank0
  1618  028E  00CF               	movwf	LcdCmdWrite@cmd
  1619  028F                     l1395:
  1620                           
  1621                           ;./lcd.h: 32:     void LcdCmdWrite(char cmd);./lcd.h: 33:     {;./lcd.h: 34:         POR
      +                          TD = (cmd & 0xF0);
  1622  028F  084F               	movf	LcdCmdWrite@cmd,w
  1623  0290  39F0               	andlw	240
  1624  0291  0088               	movwf	8	;volatile
  1625  0292                     l1397:
  1626                           
  1627                           ;./lcd.h: 35:         PORTD &= ~(1<<0);
  1628  0292  30FE               	movlw	254
  1629  0293  00FF               	movwf	btemp+1
  1630  0294  087F               	movf	btemp+1,w
  1631  0295  0588               	andwf	8,f	;volatile
  1632  0296                     l1399:
  1633                           
  1634                           ;./lcd.h: 36:         PORTD &= ~(1<<1);
  1635  0296  30FD               	movlw	253
  1636  0297  00FF               	movwf	btemp+1
  1637  0298  087F               	movf	btemp+1,w
  1638  0299  0588               	andwf	8,f	;volatile
  1639  029A                     l1401:
  1640                           
  1641                           ;./lcd.h: 37:         PORTD |= (1<<2);
  1642  029A  1508               	bsf	8,2	;volatile
  1643  029B                     l1403:
  1644                           
  1645                           ;./lcd.h: 38:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1646  029B  3041               	movlw	65
  1647  029C  1283               	bcf	3,5	;RP0=0, select bank0
  1648  029D  1303               	bcf	3,6	;RP1=0, select bank0
  1649  029E  00CE               	movwf	??_LcdCmdWrite+1
  1650  029F  30ED               	movlw	237
  1651  02A0  00CD               	movwf	??_LcdCmdWrite
  1652  02A1                     u1247:
  1653  02A1  0BCD               	decfsz	??_LcdCmdWrite,f
  1654  02A2  2AA1               	goto	u1247
  1655  02A3  0BCE               	decfsz	??_LcdCmdWrite+1,f
  1656  02A4  2AA1               	goto	u1247
  1657  02A5  2AA6               	nop2
  1658  02A6                     l1405:
  1659                           
  1660                           ;./lcd.h: 39:         PORTD &= ~(1<<2);
  1661  02A6  30FB               	movlw	251
  1662  02A7  00FF               	movwf	btemp+1
  1663  02A8  087F               	movf	btemp+1,w
  1664  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  1665  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  1666  02AB  0588               	andwf	8,f	;volatile
  1667  02AC                     l1407:
  1668                           
  1669                           ;./lcd.h: 41:         PORTD = ((cmd<<4) & 0xF0);
  1670  02AC  084F               	movf	LcdCmdWrite@cmd,w
  1671  02AD  00CD               	movwf	??_LcdCmdWrite
  1672  02AE  3003               	movlw	3
  1673  02AF                     u895:
  1674  02AF  1003               	clrc
  1675  02B0  0DCD               	rlf	??_LcdCmdWrite,f
  1676  02B1  3EFF               	addlw	-1
  1677  02B2  1D03               	skipz
  1678  02B3  2AAF               	goto	u895
  1679  02B4  1003               	clrc
  1680  02B5  0D4D               	rlf	??_LcdCmdWrite,w
  1681  02B6  39F0               	andlw	240
  1682  02B7  0088               	movwf	8	;volatile
  1683  02B8                     l1409:
  1684                           
  1685                           ;./lcd.h: 42:         PORTD &= ~(1<<0);
  1686  02B8  30FE               	movlw	254
  1687  02B9  00FF               	movwf	btemp+1
  1688  02BA  087F               	movf	btemp+1,w
  1689  02BB  0588               	andwf	8,f	;volatile
  1690  02BC                     l1411:
  1691                           
  1692                           ;./lcd.h: 43:         PORTD &= ~(1<<1);
  1693  02BC  30FD               	movlw	253
  1694  02BD  00FF               	movwf	btemp+1
  1695  02BE  087F               	movf	btemp+1,w
  1696  02BF  0588               	andwf	8,f	;volatile
  1697  02C0                     l1413:
  1698                           
  1699                           ;./lcd.h: 44:         PORTD |= (1<<2);
  1700  02C0  1508               	bsf	8,2	;volatile
  1701  02C1                     l1415:
  1702                           
  1703                           ;./lcd.h: 45:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1704  02C1  3041               	movlw	65
  1705  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1706  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1707  02C4  00CE               	movwf	??_LcdCmdWrite+1
  1708  02C5  30ED               	movlw	237
  1709  02C6  00CD               	movwf	??_LcdCmdWrite
  1710  02C7                     u1257:
  1711  02C7  0BCD               	decfsz	??_LcdCmdWrite,f
  1712  02C8  2AC7               	goto	u1257
  1713  02C9  0BCE               	decfsz	??_LcdCmdWrite+1,f
  1714  02CA  2AC7               	goto	u1257
  1715  02CB  2ACC               	nop2
  1716  02CC                     l1417:
  1717                           
  1718                           ;./lcd.h: 46:         PORTD &= ~(1<<2);
  1719  02CC  30FB               	movlw	251
  1720  02CD  00FF               	movwf	btemp+1
  1721  02CE  087F               	movf	btemp+1,w
  1722  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1723  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1724  02D1  0588               	andwf	8,f	;volatile
  1725  02D2                     l43:
  1726  02D2  0008               	return
  1727  02D3                     __end_of_LcdCmdWrite:
  1728                           
  1729                           	psect	text10
  1730  003E                     __ptext10:	
  1731 ;; *************** function _DhtUpdateData *****************
  1732 ;; Defined at:
  1733 ;;		line 61 in file "./dht11.h"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;		None
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;		None
  1738 ;; Return value:  Size  Location     Type
  1739 ;;		None               void
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1747 ;;      Params:         0       0       0       0       0
  1748 ;;      Locals:         0       0       0       0       0
  1749 ;;      Temps:          0      10       0       0       0
  1750 ;;      Totals:         0      10       0       0       0
  1751 ;;Total ram usage:       10 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    3
  1754 ;; This function calls:
  1755 ;;		_DhtCheckResponse
  1756 ;;		_DhtReadData
  1757 ;;		_DhtStartSignal
  1758 ;;		___awdiv
  1759 ;;		___awmod
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _DhtUpdateData
  1767  003E                     _DhtUpdateData:
  1768  003E                     l1587:	
  1769                           ;incstack = 0
  1770                           ; Regs used in _DhtUpdateData: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1771                           
  1772                           
  1773                           ;./dht11.h: 63:         DhtStartSignal();
  1774  003E  120A  118A  246E  120A  118A  	fcall	_DhtStartSignal
  1775                           
  1776                           ;./dht11.h: 64:         DhtCheckResponse();
  1777  0043  120A  118A  2421  120A  118A  	fcall	_DhtCheckResponse
  1778  0048                     l1589:
  1779                           
  1780                           ;./dht11.h: 66:         rh_byte1 = DhtReadData();
  1781  0048  120A  118A  22D3  120A  118A  	fcall	_DhtReadData
  1782  004D  00FF               	movwf	btemp+1
  1783  004E  087F               	movf	btemp+1,w
  1784  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0051  00E4               	movwf	_rh_byte1
  1787  0052                     l1591:
  1788                           
  1789                           ;./dht11.h: 67:         rh_byte2 = DhtReadData();
  1790  0052  120A  118A  22D3  120A  118A  	fcall	_DhtReadData
  1791  0057  00FF               	movwf	btemp+1
  1792  0058  087F               	movf	btemp+1,w
  1793  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1794  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1795  005B  00E3               	movwf	_rh_byte2
  1796  005C                     l1593:
  1797                           
  1798                           ;./dht11.h: 68:         t_byte1 = DhtReadData();
  1799  005C  120A  118A  22D3  120A  118A  	fcall	_DhtReadData
  1800  0061  00FF               	movwf	btemp+1
  1801  0062  087F               	movf	btemp+1,w
  1802  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0065  00E6               	movwf	_t_byte1
  1805  0066                     l1595:
  1806                           
  1807                           ;./dht11.h: 69:         t_byte2 = DhtReadData();
  1808  0066  120A  118A  22D3  120A  118A  	fcall	_DhtReadData
  1809  006B  00FF               	movwf	btemp+1
  1810  006C  087F               	movf	btemp+1,w
  1811  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1812  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1813  006F  00E5               	movwf	_t_byte2
  1814  0070                     l1597:
  1815                           
  1816                           ;./dht11.h: 70:         check_sum = DhtReadData();
  1817  0070  120A  118A  22D3  120A  118A  	fcall	_DhtReadData
  1818  0075  00FF               	movwf	btemp+1
  1819  0076  087F               	movf	btemp+1,w
  1820  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1821  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1822  0079  00E2               	movwf	_check_sum
  1823  007A                     l1599:
  1824                           
  1825                           ;./dht11.h: 72:         if(check_sum == ((rh_byte1 + rh_byte2 + t_byte1 + t_byte2) & 0xF
      +                          F))
  1826  007A  0864               	movf	_rh_byte1,w
  1827  007B  0763               	addwf	_rh_byte2,w
  1828  007C  00D5               	movwf	??_DhtUpdateData
  1829  007D  01D6               	clrf	??_DhtUpdateData+1
  1830  007E  0DD6               	rlf	??_DhtUpdateData+1,f
  1831  007F  0866               	movf	_t_byte1,w
  1832  0080  0755               	addwf	??_DhtUpdateData,w
  1833  0081  00D7               	movwf	??_DhtUpdateData+2
  1834  0082  3000               	movlw	0
  1835  0083  1803               	skipnc
  1836  0084  3001               	movlw	1
  1837  0085  0756               	addwf	??_DhtUpdateData+1,w
  1838  0086  00D8               	movwf	??_DhtUpdateData+3
  1839  0087  0865               	movf	_t_byte2,w
  1840  0088  0757               	addwf	??_DhtUpdateData+2,w
  1841  0089  00D9               	movwf	??_DhtUpdateData+4
  1842  008A  3000               	movlw	0
  1843  008B  1803               	skipnc
  1844  008C  3001               	movlw	1
  1845  008D  0758               	addwf	??_DhtUpdateData+3,w
  1846  008E  00DA               	movwf	??_DhtUpdateData+5
  1847  008F  30FF               	movlw	255
  1848  0090  0559               	andwf	??_DhtUpdateData+4,w
  1849  0091  00DB               	movwf	??_DhtUpdateData+6
  1850  0092  3000               	movlw	0
  1851  0093  055A               	andwf	??_DhtUpdateData+5,w
  1852  0094  00DC               	movwf	??_DhtUpdateData+7
  1853  0095  0862               	movf	_check_sum,w
  1854  0096  00DD               	movwf	??_DhtUpdateData+8
  1855  0097  01DE               	clrf	??_DhtUpdateData+9
  1856  0098  085C               	movf	??_DhtUpdateData+7,w
  1857  0099  065E               	xorwf	??_DhtUpdateData+9,w
  1858  009A  1D03               	skipz
  1859  009B  289E               	goto	u1175
  1860  009C  085B               	movf	??_DhtUpdateData+6,w
  1861  009D  065D               	xorwf	??_DhtUpdateData+8,w
  1862  009E                     u1175:
  1863  009E  1D03               	skipz
  1864  009F  28A1               	goto	u1171
  1865  00A0  28A2               	goto	u1170
  1866  00A1                     u1171:
  1867  00A1  292E               	goto	l1607
  1868  00A2                     u1170:
  1869  00A2                     l1601:
  1870                           
  1871                           ;./dht11.h: 73:         {;./dht11.h: 74:             temp[7] = t_byte1 / 10 + 48;
  1872  00A2  300A               	movlw	10
  1873  00A3  00CD               	movwf	___awdiv@divisor
  1874  00A4  3000               	movlw	0
  1875  00A5  00CE               	movwf	___awdiv@divisor+1
  1876  00A6  0866               	movf	_t_byte1,w
  1877  00A7  00D5               	movwf	??_DhtUpdateData
  1878  00A8  01D6               	clrf	??_DhtUpdateData+1
  1879  00A9  0855               	movf	??_DhtUpdateData,w
  1880  00AA  00CF               	movwf	___awdiv@dividend
  1881  00AB  0856               	movf	??_DhtUpdateData+1,w
  1882  00AC  00D0               	movwf	___awdiv@dividend+1
  1883  00AD  120A  118A  21C8  120A  118A  	fcall	___awdiv
  1884  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1885  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1886  00B4  084D               	movf	?___awdiv,w
  1887  00B5  3E30               	addlw	48
  1888  00B6  00FF               	movwf	btemp+1
  1889  00B7  087F               	movf	btemp+1,w
  1890  00B8  00C6               	movwf	_temp+7
  1891                           
  1892                           ;./dht11.h: 75:             temp[8] = t_byte1 % 10 + 48;
  1893  00B9  300A               	movlw	10
  1894  00BA  00CD               	movwf	___awmod@divisor
  1895  00BB  3000               	movlw	0
  1896  00BC  00CE               	movwf	___awmod@divisor+1
  1897  00BD  0866               	movf	_t_byte1,w
  1898  00BE  00D5               	movwf	??_DhtUpdateData
  1899  00BF  01D6               	clrf	??_DhtUpdateData+1
  1900  00C0  0855               	movf	??_DhtUpdateData,w
  1901  00C1  00CF               	movwf	___awmod@dividend
  1902  00C2  0856               	movf	??_DhtUpdateData+1,w
  1903  00C3  00D0               	movwf	___awmod@dividend+1
  1904  00C4  120A  118A  2231  120A  118A  	fcall	___awmod
  1905  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1906  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1907  00CB  084D               	movf	?___awmod,w
  1908  00CC  3E30               	addlw	48
  1909  00CD  00FF               	movwf	btemp+1
  1910  00CE  087F               	movf	btemp+1,w
  1911  00CF  00C7               	movwf	_temp+8
  1912                           
  1913                           ;./dht11.h: 76:             temp[10] = t_byte2 / 10 + 48;
  1914  00D0  300A               	movlw	10
  1915  00D1  00CD               	movwf	___awdiv@divisor
  1916  00D2  3000               	movlw	0
  1917  00D3  00CE               	movwf	___awdiv@divisor+1
  1918  00D4  0865               	movf	_t_byte2,w
  1919  00D5  00D5               	movwf	??_DhtUpdateData
  1920  00D6  01D6               	clrf	??_DhtUpdateData+1
  1921  00D7  0855               	movf	??_DhtUpdateData,w
  1922  00D8  00CF               	movwf	___awdiv@dividend
  1923  00D9  0856               	movf	??_DhtUpdateData+1,w
  1924  00DA  00D0               	movwf	___awdiv@dividend+1
  1925  00DB  120A  118A  21C8  120A  118A  	fcall	___awdiv
  1926  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1927  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1928  00E2  084D               	movf	?___awdiv,w
  1929  00E3  3E30               	addlw	48
  1930  00E4  00FF               	movwf	btemp+1
  1931  00E5  087F               	movf	btemp+1,w
  1932  00E6  00C9               	movwf	_temp+10
  1933                           
  1934                           ;./dht11.h: 78:             humi[7] = rh_byte1 / 10 + 48;
  1935  00E7  300A               	movlw	10
  1936  00E8  00CD               	movwf	___awdiv@divisor
  1937  00E9  3000               	movlw	0
  1938  00EA  00CE               	movwf	___awdiv@divisor+1
  1939  00EB  0864               	movf	_rh_byte1,w
  1940  00EC  00D5               	movwf	??_DhtUpdateData
  1941  00ED  01D6               	clrf	??_DhtUpdateData+1
  1942  00EE  0855               	movf	??_DhtUpdateData,w
  1943  00EF  00CF               	movwf	___awdiv@dividend
  1944  00F0  0856               	movf	??_DhtUpdateData+1,w
  1945  00F1  00D0               	movwf	___awdiv@dividend+1
  1946  00F2  120A  118A  21C8  120A  118A  	fcall	___awdiv
  1947  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1948  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1949  00F9  084D               	movf	?___awdiv,w
  1950  00FA  3E30               	addlw	48
  1951  00FB  00FF               	movwf	btemp+1
  1952  00FC  087F               	movf	btemp+1,w
  1953  00FD  00B8               	movwf	_humi+7
  1954                           
  1955                           ;./dht11.h: 79:             humi[8] = rh_byte1 % 10 + 48;
  1956  00FE  300A               	movlw	10
  1957  00FF  00CD               	movwf	___awmod@divisor
  1958  0100  3000               	movlw	0
  1959  0101  00CE               	movwf	___awmod@divisor+1
  1960  0102  0864               	movf	_rh_byte1,w
  1961  0103  00D5               	movwf	??_DhtUpdateData
  1962  0104  01D6               	clrf	??_DhtUpdateData+1
  1963  0105  0855               	movf	??_DhtUpdateData,w
  1964  0106  00CF               	movwf	___awmod@dividend
  1965  0107  0856               	movf	??_DhtUpdateData+1,w
  1966  0108  00D0               	movwf	___awmod@dividend+1
  1967  0109  120A  118A  2231  120A  118A  	fcall	___awmod
  1968  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1969  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0110  084D               	movf	?___awmod,w
  1971  0111  3E30               	addlw	48
  1972  0112  00FF               	movwf	btemp+1
  1973  0113  087F               	movf	btemp+1,w
  1974  0114  00B9               	movwf	_humi+8
  1975                           
  1976                           ;./dht11.h: 80:             humi[10] = rh_byte2 / 10 + 48;
  1977  0115  300A               	movlw	10
  1978  0116  00CD               	movwf	___awdiv@divisor
  1979  0117  3000               	movlw	0
  1980  0118  00CE               	movwf	___awdiv@divisor+1
  1981  0119  0863               	movf	_rh_byte2,w
  1982  011A  00D5               	movwf	??_DhtUpdateData
  1983  011B  01D6               	clrf	??_DhtUpdateData+1
  1984  011C  0855               	movf	??_DhtUpdateData,w
  1985  011D  00CF               	movwf	___awdiv@dividend
  1986  011E  0856               	movf	??_DhtUpdateData+1,w
  1987  011F  00D0               	movwf	___awdiv@dividend+1
  1988  0120  120A  118A  21C8  120A  118A  	fcall	___awdiv
  1989  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0127  084D               	movf	?___awdiv,w
  1992  0128  3E30               	addlw	48
  1993  0129  00FF               	movwf	btemp+1
  1994  012A  087F               	movf	btemp+1,w
  1995  012B  00BB               	movwf	_humi+10
  1996  012C                     l1603:
  1997                           
  1998                           ;./dht11.h: 82:             return 1;
  1999  012C  1403               	setc
  2000  012D  292F               	goto	l101
  2001  012E                     l1607:
  2002                           
  2003                           ;./dht11.h: 84:         return 0;
  2004  012E  1003               	clrc
  2005  012F                     l101:
  2006  012F  0008               	return
  2007  0130                     __end_of_DhtUpdateData:
  2008                           
  2009                           	psect	text11
  2010  0231                     __ptext11:	
  2011 ;; *************** function ___awmod *****************
  2012 ;; Defined at:
  2013 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  divisor         2    0[BANK0 ] int 
  2016 ;;  dividend        2    2[BANK0 ] int 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  sign            1    5[BANK0 ] unsigned char 
  2019 ;;  counter         1    4[BANK0 ] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2    0[BANK0 ] int 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0, btemp+1
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2029 ;;      Params:         0       4       0       0       0
  2030 ;;      Locals:         0       2       0       0       0
  2031 ;;      Temps:          0       0       0       0       0
  2032 ;;      Totals:         0       6       0       0       0
  2033 ;;Total ram usage:        6 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    2
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_DhtUpdateData
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           
  2044                           ;psect for function ___awmod
  2045  0231                     ___awmod:
  2046  0231                     l1505:	
  2047                           ;incstack = 0
  2048                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2049                           
  2050  0231  1283               	bcf	3,5	;RP0=0, select bank0
  2051  0232  1303               	bcf	3,6	;RP1=0, select bank0
  2052  0233  01D2               	clrf	___awmod@sign
  2053  0234                     l1507:
  2054  0234  1FD0               	btfss	___awmod@dividend+1,7
  2055  0235  2A37               	goto	u1031
  2056  0236  2A38               	goto	u1030
  2057  0237                     u1031:
  2058  0237  2A3F               	goto	l1513
  2059  0238                     u1030:
  2060  0238                     l1509:
  2061  0238  09CF               	comf	___awmod@dividend,f
  2062  0239  09D0               	comf	___awmod@dividend+1,f
  2063  023A  0ACF               	incf	___awmod@dividend,f
  2064  023B  1903               	skipnz
  2065  023C  0AD0               	incf	___awmod@dividend+1,f
  2066  023D                     l1511:
  2067  023D  01D2               	clrf	___awmod@sign
  2068  023E  0AD2               	incf	___awmod@sign,f
  2069  023F                     l1513:
  2070  023F  1FCE               	btfss	___awmod@divisor+1,7
  2071  0240  2A42               	goto	u1041
  2072  0241  2A43               	goto	u1040
  2073  0242                     u1041:
  2074  0242  2A48               	goto	l1517
  2075  0243                     u1040:
  2076  0243                     l1515:
  2077  0243  09CD               	comf	___awmod@divisor,f
  2078  0244  09CE               	comf	___awmod@divisor+1,f
  2079  0245  0ACD               	incf	___awmod@divisor,f
  2080  0246  1903               	skipnz
  2081  0247  0ACE               	incf	___awmod@divisor+1,f
  2082  0248                     l1517:
  2083  0248  084D               	movf	___awmod@divisor,w
  2084  0249  044E               	iorwf	___awmod@divisor+1,w
  2085  024A  1903               	btfsc	3,2
  2086  024B  2A4D               	goto	u1051
  2087  024C  2A4E               	goto	u1050
  2088  024D                     u1051:
  2089  024D  2A7D               	goto	l1535
  2090  024E                     u1050:
  2091  024E                     l1519:
  2092  024E  01D1               	clrf	___awmod@counter
  2093  024F  0AD1               	incf	___awmod@counter,f
  2094  0250  2A5C               	goto	l1525
  2095  0251                     l1521:
  2096  0251  3001               	movlw	1
  2097  0252                     u1065:
  2098  0252  1003               	clrc
  2099  0253  0DCD               	rlf	___awmod@divisor,f
  2100  0254  0DCE               	rlf	___awmod@divisor+1,f
  2101  0255  3EFF               	addlw	-1
  2102  0256  1D03               	skipz
  2103  0257  2A52               	goto	u1065
  2104  0258                     l1523:
  2105  0258  3001               	movlw	1
  2106  0259  00FF               	movwf	btemp+1
  2107  025A  087F               	movf	btemp+1,w
  2108  025B  07D1               	addwf	___awmod@counter,f
  2109  025C                     l1525:
  2110  025C  1FCE               	btfss	___awmod@divisor+1,7
  2111  025D  2A5F               	goto	u1071
  2112  025E  2A60               	goto	u1070
  2113  025F                     u1071:
  2114  025F  2A51               	goto	l1521
  2115  0260                     u1070:
  2116  0260                     l1527:
  2117  0260  084E               	movf	___awmod@divisor+1,w
  2118  0261  0250               	subwf	___awmod@dividend+1,w
  2119  0262  1D03               	skipz
  2120  0263  2A66               	goto	u1085
  2121  0264  084D               	movf	___awmod@divisor,w
  2122  0265  024F               	subwf	___awmod@dividend,w
  2123  0266                     u1085:
  2124  0266  1C03               	skipc
  2125  0267  2A69               	goto	u1081
  2126  0268  2A6A               	goto	u1080
  2127  0269                     u1081:
  2128  0269  2A70               	goto	l1531
  2129  026A                     u1080:
  2130  026A                     l1529:
  2131  026A  084D               	movf	___awmod@divisor,w
  2132  026B  02CF               	subwf	___awmod@dividend,f
  2133  026C  084E               	movf	___awmod@divisor+1,w
  2134  026D  1C03               	skipc
  2135  026E  03D0               	decf	___awmod@dividend+1,f
  2136  026F  02D0               	subwf	___awmod@dividend+1,f
  2137  0270                     l1531:
  2138  0270  3001               	movlw	1
  2139  0271                     u1095:
  2140  0271  1003               	clrc
  2141  0272  0CCE               	rrf	___awmod@divisor+1,f
  2142  0273  0CCD               	rrf	___awmod@divisor,f
  2143  0274  3EFF               	addlw	-1
  2144  0275  1D03               	skipz
  2145  0276  2A71               	goto	u1095
  2146  0277                     l1533:
  2147  0277  3001               	movlw	1
  2148  0278  02D1               	subwf	___awmod@counter,f
  2149  0279  1D03               	btfss	3,2
  2150  027A  2A7C               	goto	u1101
  2151  027B  2A7D               	goto	u1100
  2152  027C                     u1101:
  2153  027C  2A60               	goto	l1527
  2154  027D                     u1100:
  2155  027D                     l1535:
  2156  027D  0852               	movf	___awmod@sign,w
  2157  027E  1903               	btfsc	3,2
  2158  027F  2A81               	goto	u1111
  2159  0280  2A82               	goto	u1110
  2160  0281                     u1111:
  2161  0281  2A87               	goto	l1539
  2162  0282                     u1110:
  2163  0282                     l1537:
  2164  0282  09CF               	comf	___awmod@dividend,f
  2165  0283  09D0               	comf	___awmod@dividend+1,f
  2166  0284  0ACF               	incf	___awmod@dividend,f
  2167  0285  1903               	skipnz
  2168  0286  0AD0               	incf	___awmod@dividend+1,f
  2169  0287                     l1539:
  2170  0287  0850               	movf	___awmod@dividend+1,w
  2171  0288  00CE               	movwf	?___awmod+1
  2172  0289  084F               	movf	___awmod@dividend,w
  2173  028A  00CD               	movwf	?___awmod
  2174  028B                     l391:
  2175  028B  0008               	return
  2176  028C                     __end_of___awmod:
  2177                           
  2178                           	psect	text12
  2179  01C8                     __ptext12:	
  2180 ;; *************** function ___awdiv *****************
  2181 ;; Defined at:
  2182 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  divisor         2    0[BANK0 ] int 
  2185 ;;  dividend        2    2[BANK0 ] int 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  quotient        2    6[BANK0 ] int 
  2188 ;;  sign            1    5[BANK0 ] unsigned char 
  2189 ;;  counter         1    4[BANK0 ] unsigned char 
  2190 ;; Return value:  Size  Location     Type
  2191 ;;                  2    0[BANK0 ] int 
  2192 ;; Registers used:
  2193 ;;		wreg, status,2, status,0, btemp+1
  2194 ;; Tracked objects:
  2195 ;;		On entry : 0/0
  2196 ;;		On exit  : 0/0
  2197 ;;		Unchanged: 0/0
  2198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2199 ;;      Params:         0       4       0       0       0
  2200 ;;      Locals:         0       4       0       0       0
  2201 ;;      Temps:          0       0       0       0       0
  2202 ;;      Totals:         0       8       0       0       0
  2203 ;;Total ram usage:        8 bytes
  2204 ;; Hardware stack levels used:    1
  2205 ;; Hardware stack levels required when called:    2
  2206 ;; This function calls:
  2207 ;;		Nothing
  2208 ;; This function is called by:
  2209 ;;		_DhtUpdateData
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function ___awdiv
  2215  01C8                     ___awdiv:
  2216  01C8                     l1173:	
  2217                           ;incstack = 0
  2218                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2219                           
  2220  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  2221  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  2222  01CA  01D2               	clrf	___awdiv@sign
  2223  01CB                     l1175:
  2224  01CB  1FCE               	btfss	___awdiv@divisor+1,7
  2225  01CC  29CE               	goto	u591
  2226  01CD  29CF               	goto	u590
  2227  01CE                     u591:
  2228  01CE  29D6               	goto	l1181
  2229  01CF                     u590:
  2230  01CF                     l1177:
  2231  01CF  09CD               	comf	___awdiv@divisor,f
  2232  01D0  09CE               	comf	___awdiv@divisor+1,f
  2233  01D1  0ACD               	incf	___awdiv@divisor,f
  2234  01D2  1903               	skipnz
  2235  01D3  0ACE               	incf	___awdiv@divisor+1,f
  2236  01D4                     l1179:
  2237  01D4  01D2               	clrf	___awdiv@sign
  2238  01D5  0AD2               	incf	___awdiv@sign,f
  2239  01D6                     l1181:
  2240  01D6  1FD0               	btfss	___awdiv@dividend+1,7
  2241  01D7  29D9               	goto	u601
  2242  01D8  29DA               	goto	u600
  2243  01D9                     u601:
  2244  01D9  29E3               	goto	l1187
  2245  01DA                     u600:
  2246  01DA                     l1183:
  2247  01DA  09CF               	comf	___awdiv@dividend,f
  2248  01DB  09D0               	comf	___awdiv@dividend+1,f
  2249  01DC  0ACF               	incf	___awdiv@dividend,f
  2250  01DD  1903               	skipnz
  2251  01DE  0AD0               	incf	___awdiv@dividend+1,f
  2252  01DF                     l1185:
  2253  01DF  3001               	movlw	1
  2254  01E0  00FF               	movwf	btemp+1
  2255  01E1  087F               	movf	btemp+1,w
  2256  01E2  06D2               	xorwf	___awdiv@sign,f
  2257  01E3                     l1187:
  2258  01E3  01D3               	clrf	___awdiv@quotient
  2259  01E4  01D4               	clrf	___awdiv@quotient+1
  2260  01E5                     l1189:
  2261  01E5  084D               	movf	___awdiv@divisor,w
  2262  01E6  044E               	iorwf	___awdiv@divisor+1,w
  2263  01E7  1903               	btfsc	3,2
  2264  01E8  29EA               	goto	u611
  2265  01E9  29EB               	goto	u610
  2266  01EA                     u611:
  2267  01EA  2A22               	goto	l1209
  2268  01EB                     u610:
  2269  01EB                     l1191:
  2270  01EB  01D1               	clrf	___awdiv@counter
  2271  01EC  0AD1               	incf	___awdiv@counter,f
  2272  01ED  29F9               	goto	l1197
  2273  01EE                     l1193:
  2274  01EE  3001               	movlw	1
  2275  01EF                     u625:
  2276  01EF  1003               	clrc
  2277  01F0  0DCD               	rlf	___awdiv@divisor,f
  2278  01F1  0DCE               	rlf	___awdiv@divisor+1,f
  2279  01F2  3EFF               	addlw	-1
  2280  01F3  1D03               	skipz
  2281  01F4  29EF               	goto	u625
  2282  01F5                     l1195:
  2283  01F5  3001               	movlw	1
  2284  01F6  00FF               	movwf	btemp+1
  2285  01F7  087F               	movf	btemp+1,w
  2286  01F8  07D1               	addwf	___awdiv@counter,f
  2287  01F9                     l1197:
  2288  01F9  1FCE               	btfss	___awdiv@divisor+1,7
  2289  01FA  29FC               	goto	u631
  2290  01FB  29FD               	goto	u630
  2291  01FC                     u631:
  2292  01FC  29EE               	goto	l1193
  2293  01FD                     u630:
  2294  01FD                     l1199:
  2295  01FD  3001               	movlw	1
  2296  01FE                     u645:
  2297  01FE  1003               	clrc
  2298  01FF  0DD3               	rlf	___awdiv@quotient,f
  2299  0200  0DD4               	rlf	___awdiv@quotient+1,f
  2300  0201  3EFF               	addlw	-1
  2301  0202  1D03               	skipz
  2302  0203  29FE               	goto	u645
  2303  0204  084E               	movf	___awdiv@divisor+1,w
  2304  0205  0250               	subwf	___awdiv@dividend+1,w
  2305  0206  1D03               	skipz
  2306  0207  2A0A               	goto	u655
  2307  0208  084D               	movf	___awdiv@divisor,w
  2308  0209  024F               	subwf	___awdiv@dividend,w
  2309  020A                     u655:
  2310  020A  1C03               	skipc
  2311  020B  2A0D               	goto	u651
  2312  020C  2A0E               	goto	u650
  2313  020D                     u651:
  2314  020D  2A15               	goto	l1205
  2315  020E                     u650:
  2316  020E                     l1201:
  2317  020E  084D               	movf	___awdiv@divisor,w
  2318  020F  02CF               	subwf	___awdiv@dividend,f
  2319  0210  084E               	movf	___awdiv@divisor+1,w
  2320  0211  1C03               	skipc
  2321  0212  03D0               	decf	___awdiv@dividend+1,f
  2322  0213  02D0               	subwf	___awdiv@dividend+1,f
  2323  0214                     l1203:
  2324  0214  1453               	bsf	___awdiv@quotient,0
  2325  0215                     l1205:
  2326  0215  3001               	movlw	1
  2327  0216                     u665:
  2328  0216  1003               	clrc
  2329  0217  0CCE               	rrf	___awdiv@divisor+1,f
  2330  0218  0CCD               	rrf	___awdiv@divisor,f
  2331  0219  3EFF               	addlw	-1
  2332  021A  1D03               	skipz
  2333  021B  2A16               	goto	u665
  2334  021C                     l1207:
  2335  021C  3001               	movlw	1
  2336  021D  02D1               	subwf	___awdiv@counter,f
  2337  021E  1D03               	btfss	3,2
  2338  021F  2A21               	goto	u671
  2339  0220  2A22               	goto	u670
  2340  0221                     u671:
  2341  0221  29FD               	goto	l1199
  2342  0222                     u670:
  2343  0222                     l1209:
  2344  0222  0852               	movf	___awdiv@sign,w
  2345  0223  1903               	btfsc	3,2
  2346  0224  2A26               	goto	u681
  2347  0225  2A27               	goto	u680
  2348  0226                     u681:
  2349  0226  2A2C               	goto	l1213
  2350  0227                     u680:
  2351  0227                     l1211:
  2352  0227  09D3               	comf	___awdiv@quotient,f
  2353  0228  09D4               	comf	___awdiv@quotient+1,f
  2354  0229  0AD3               	incf	___awdiv@quotient,f
  2355  022A  1903               	skipnz
  2356  022B  0AD4               	incf	___awdiv@quotient+1,f
  2357  022C                     l1213:
  2358  022C  0854               	movf	___awdiv@quotient+1,w
  2359  022D  00CE               	movwf	?___awdiv+1
  2360  022E  0853               	movf	___awdiv@quotient,w
  2361  022F  00CD               	movwf	?___awdiv
  2362  0230                     l378:
  2363  0230  0008               	return
  2364  0231                     __end_of___awdiv:
  2365                           
  2366                           	psect	text13
  2367  046E                     __ptext13:	
  2368 ;; *************** function _DhtStartSignal *****************
  2369 ;; Defined at:
  2370 ;;		line 24 in file "./dht11.h"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0
  2386 ;;      Temps:          0       2       0       0       0
  2387 ;;      Totals:         0       2       0       0       0
  2388 ;;Total ram usage:        2 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    2
  2391 ;; This function calls:
  2392 ;;		Nothing
  2393 ;; This function is called by:
  2394 ;;		_DhtUpdateData
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function _DhtStartSignal
  2400  046E                     _DhtStartSignal:
  2401  046E                     l1443:	
  2402                           ;incstack = 0
  2403                           ; Regs used in _DhtStartSignal: [wreg]
  2404                           
  2405                           
  2406                           ;./dht11.h: 26:         TRISB4 = 0;
  2407  046E  1683               	bsf	3,5	;RP0=1, select bank1
  2408  046F  1303               	bcf	3,6	;RP1=0, select bank1
  2409  0470  1206               	bcf	6,4	;volatile
  2410                           
  2411                           ;./dht11.h: 27:         RB4 = 0;
  2412  0471  1283               	bcf	3,5	;RP0=0, select bank0
  2413  0472  1303               	bcf	3,6	;RP1=0, select bank0
  2414  0473  1206               	bcf	6,4	;volatile
  2415  0474                     l1445:
  2416                           
  2417                           ;./dht11.h: 29:         _delay((unsigned long)((25)*(20000000/4000.0)));
  2418  0474  30A3               	movlw	163
  2419  0475  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0476  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0477  00CE               	movwf	??_DhtStartSignal+1
  2422  0478  3054               	movlw	84
  2423  0479  00CD               	movwf	??_DhtStartSignal
  2424  047A                     u1267:
  2425  047A  0BCD               	decfsz	??_DhtStartSignal,f
  2426  047B  2C7A               	goto	u1267
  2427  047C  0BCE               	decfsz	??_DhtStartSignal+1,f
  2428  047D  2C7A               	goto	u1267
  2429  047E  0000               	nop
  2430  047F                     l1447:
  2431                           
  2432                           ;./dht11.h: 30:         RB4 = 1;
  2433  047F  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0480  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0481  1606               	bsf	6,4	;volatile
  2436                           
  2437                           ;./dht11.h: 31:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  2438  0482  3031               	movlw	49
  2439  0483  1283               	bcf	3,5	;RP0=0, select bank0
  2440  0484  1303               	bcf	3,6	;RP1=0, select bank0
  2441  0485  00CD               	movwf	??_DhtStartSignal
  2442  0486                     u1277:
  2443  0486  0BCD               	decfsz	??_DhtStartSignal,f
  2444  0487  2C86               	goto	u1277
  2445  0488                     l1449:
  2446                           
  2447                           ;./dht11.h: 32:         TRISB4 = 1;
  2448  0488  1683               	bsf	3,5	;RP0=1, select bank1
  2449  0489  1303               	bcf	3,6	;RP1=0, select bank1
  2450  048A  1606               	bsf	6,4	;volatile
  2451  048B                     l72:
  2452  048B  0008               	return
  2453  048C                     __end_of_DhtStartSignal:
  2454                           
  2455                           	psect	text14
  2456  02D3                     __ptext14:	
  2457 ;; *************** function _DhtReadData *****************
  2458 ;; Defined at:
  2459 ;;		line 44 in file "./dht11.h"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;		None
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  data            1    3[BANK0 ] unsigned char 
  2464 ;;  i               1    2[BANK0 ] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      unsigned char 
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0, btemp+1
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         0       2       0       0       0
  2476 ;;      Temps:          0       2       0       0       0
  2477 ;;      Totals:         0       4       0       0       0
  2478 ;;Total ram usage:        4 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; Hardware stack levels required when called:    2
  2481 ;; This function calls:
  2482 ;;		Nothing
  2483 ;; This function is called by:
  2484 ;;		_DhtUpdateData
  2485 ;; This function uses a non-reentrant model
  2486 ;;
  2487                           
  2488                           
  2489                           ;psect for function _DhtReadData
  2490  02D3                     _DhtReadData:
  2491  02D3                     l1459:	
  2492                           ;incstack = 0
  2493                           ; Regs used in _DhtReadData: [wreg+status,2+status,0+btemp+1]
  2494                           
  2495                           
  2496                           ;./dht11.h: 46:         char i, data = 0;
  2497  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  2498  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  2499  02D5  01D0               	clrf	DhtReadData@data
  2500                           
  2501                           ;./dht11.h: 47:         for(i = 0; i < 8; i++)
  2502  02D6  01CF               	clrf	DhtReadData@i
  2503  02D7                     l1465:
  2504  02D7  1003               	clrc
  2505  02D8  1A06               	btfsc	6,4	;volatile
  2506  02D9  1403               	setc
  2507  02DA  3000               	movlw	0
  2508  02DB  1803               	skipnc
  2509  02DC  3001               	movlw	1
  2510  02DD  00CD               	movwf	??_DhtReadData
  2511  02DE  01CE               	clrf	??_DhtReadData+1
  2512  02DF  1C4D               	btfss	??_DhtReadData,0
  2513  02E0  2AE2               	goto	u941
  2514  02E1  2AE3               	goto	u940
  2515  02E2                     u941:
  2516  02E2  2AD7               	goto	l1465
  2517  02E3                     u940:
  2518  02E3                     l1467:
  2519                           
  2520                           ;./dht11.h: 50:             _delay((unsigned long)((30)*(20000000/4000000.0)));
  2521  02E3  3031               	movlw	49
  2522  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  2523  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  2524  02E6  00CD               	movwf	??_DhtReadData
  2525  02E7                     u1287:
  2526  02E7  0BCD               	decfsz	??_DhtReadData,f
  2527  02E8  2AE7               	goto	u1287
  2528  02E9                     l1469:
  2529                           
  2530                           ;./dht11.h: 51:             if(RB4 & 1)
  2531  02E9  1003               	clrc
  2532  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  2533  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  2534  02EC  1A06               	btfsc	6,4	;volatile
  2535  02ED  1403               	setc
  2536  02EE  3000               	movlw	0
  2537  02EF  1803               	skipnc
  2538  02F0  3001               	movlw	1
  2539  02F1  00CD               	movwf	??_DhtReadData
  2540  02F2  01CE               	clrf	??_DhtReadData+1
  2541  02F3  1C4D               	btfss	??_DhtReadData,0
  2542  02F4  2AF6               	goto	u951
  2543  02F5  2AF7               	goto	u950
  2544  02F6                     u951:
  2545  02F6  2AFA               	goto	l1473
  2546  02F7                     u950:
  2547  02F7                     l1471:
  2548                           
  2549                           ;./dht11.h: 52:                 data = ((data<<1) | 1);
  2550  02F7  1403               	setc
  2551  02F8  0DD0               	rlf	DhtReadData@data,f
  2552  02F9  2B00               	goto	l1475
  2553  02FA                     l1473:
  2554                           
  2555                           ;./dht11.h: 54:                 data = (data<<1);
  2556  02FA  0850               	movf	DhtReadData@data,w
  2557  02FB  00CD               	movwf	??_DhtReadData
  2558  02FC  074D               	addwf	??_DhtReadData,w
  2559  02FD  00FF               	movwf	btemp+1
  2560  02FE  087F               	movf	btemp+1,w
  2561  02FF  00D0               	movwf	DhtReadData@data
  2562  0300                     l1475:
  2563  0300  1003               	clrc
  2564  0301  1A06               	btfsc	6,4	;volatile
  2565  0302  1403               	setc
  2566  0303  3000               	movlw	0
  2567  0304  1803               	skipnc
  2568  0305  3001               	movlw	1
  2569  0306  00CD               	movwf	??_DhtReadData
  2570  0307  01CE               	clrf	??_DhtReadData+1
  2571  0308  184D               	btfsc	??_DhtReadData,0
  2572  0309  2B0B               	goto	u961
  2573  030A  2B0C               	goto	u960
  2574  030B                     u961:
  2575  030B  2B00               	goto	l1475
  2576  030C                     u960:
  2577  030C                     l1477:
  2578                           
  2579                           ;./dht11.h: 56:         }
  2580  030C  3001               	movlw	1
  2581  030D  00FF               	movwf	btemp+1
  2582  030E  087F               	movf	btemp+1,w
  2583  030F  07CF               	addwf	DhtReadData@i,f
  2584  0310                     l1479:
  2585  0310  3008               	movlw	8
  2586  0311  024F               	subwf	DhtReadData@i,w
  2587  0312  1C03               	skipc
  2588  0313  2B15               	goto	u971
  2589  0314  2B16               	goto	u970
  2590  0315                     u971:
  2591  0315  2AD7               	goto	l1465
  2592  0316                     u970:
  2593  0316                     l1481:
  2594                           
  2595                           ;./dht11.h: 57:         return data;
  2596  0316  0850               	movf	DhtReadData@data,w
  2597  0317                     l97:
  2598  0317  0008               	return
  2599  0318                     __end_of_DhtReadData:
  2600                           
  2601                           	psect	text15
  2602  0421                     __ptext15:	
  2603 ;; *************** function _DhtCheckResponse *****************
  2604 ;; Defined at:
  2605 ;;		line 36 in file "./dht11.h"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,0
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2619 ;;      Params:         0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0
  2621 ;;      Temps:          0       2       0       0       0
  2622 ;;      Totals:         0       2       0       0       0
  2623 ;;Total ram usage:        2 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    2
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_DhtUpdateData
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           
  2634                           ;psect for function _DhtCheckResponse
  2635  0421                     _DhtCheckResponse:
  2636  0421                     l1451:	
  2637                           ;incstack = 0
  2638                           ; Regs used in _DhtCheckResponse: [wreg+status,0]
  2639                           
  2640  0421                     l1453:	
  2641                           ;./dht11.h: 38:         while(RB4 & 1);
  2642                           
  2643  0421  1003               	clrc
  2644  0422  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0423  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0424  1A06               	btfsc	6,4	;volatile
  2647  0425  1403               	setc
  2648  0426  3000               	movlw	0
  2649  0427  1803               	skipnc
  2650  0428  3001               	movlw	1
  2651  0429  00CD               	movwf	??_DhtCheckResponse
  2652  042A  01CE               	clrf	??_DhtCheckResponse+1
  2653  042B  184D               	btfsc	??_DhtCheckResponse,0
  2654  042C  2C2E               	goto	u911
  2655  042D  2C2F               	goto	u910
  2656  042E                     u911:
  2657  042E  2C21               	goto	l1453
  2658  042F                     u910:
  2659  042F                     l1455:
  2660  042F  1003               	clrc
  2661  0430  1A06               	btfsc	6,4	;volatile
  2662  0431  1403               	setc
  2663  0432  3000               	movlw	0
  2664  0433  1803               	skipnc
  2665  0434  3001               	movlw	1
  2666  0435  00CD               	movwf	??_DhtCheckResponse
  2667  0436  01CE               	clrf	??_DhtCheckResponse+1
  2668  0437  1C4D               	btfss	??_DhtCheckResponse,0
  2669  0438  2C3A               	goto	u921
  2670  0439  2C3B               	goto	u920
  2671  043A                     u921:
  2672  043A  2C2F               	goto	l1455
  2673  043B                     u920:
  2674  043B                     l1457:
  2675  043B  1003               	clrc
  2676  043C  1A06               	btfsc	6,4	;volatile
  2677  043D  1403               	setc
  2678  043E  3000               	movlw	0
  2679  043F  1803               	skipnc
  2680  0440  3001               	movlw	1
  2681  0441  00CD               	movwf	??_DhtCheckResponse
  2682  0442  01CE               	clrf	??_DhtCheckResponse+1
  2683  0443  184D               	btfsc	??_DhtCheckResponse,0
  2684  0444  2C46               	goto	u931
  2685  0445  2C47               	goto	u930
  2686  0446                     u931:
  2687  0446  2C3B               	goto	l1457
  2688  0447                     u930:
  2689  0447                     l84:
  2690  0447  0008               	return
  2691  0448                     __end_of_DhtCheckResponse:
  2692                           
  2693                           	psect	text16
  2694  04C1                     __ptext16:	
  2695 ;; *************** function _ISR *****************
  2696 ;; Defined at:
  2697 ;;		line 77 in file "main.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0
  2713 ;;      Temps:          3       0       0       0       0
  2714 ;;      Totals:         3       0       0       0       0
  2715 ;;Total ram usage:        3 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:    1
  2718 ;; This function calls:
  2719 ;;		i1_LcdCmdWrite
  2720 ;; This function is called by:
  2721 ;;		Interrupt level 1
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           
  2726                           ;psect for function _ISR
  2727  04C1                     _ISR:
  2728  04C1                     i1l1387:
  2729                           
  2730                           ;main.c: 79:     if(INTF == 1)
  2731  04C1  1C8B               	btfss	11,1	;volatile
  2732  04C2  2CC4               	goto	u88_21
  2733  04C3  2CC5               	goto	u88_20
  2734  04C4                     u88_21:
  2735  04C4  2CCE               	goto	i1l135
  2736  04C5                     u88_20:
  2737  04C5                     i1l1389:
  2738                           
  2739                           ;main.c: 80:     {;main.c: 81:         status = ~status;
  2740  04C5  3001               	movlw	(0+1) shl (_status& (0+7))
  2741  04C6  06F6               	xorwf	_status/(0+8),f
  2742  04C7                     i1l1391:
  2743                           
  2744                           ;main.c: 82:         LcdCmdWrite(0x01);
  2745  04C7  3001               	movlw	1
  2746  04C8  120A  118A  2318  120A  118A  	fcall	i1_LcdCmdWrite
  2747  04CD                     i1l1393:
  2748                           
  2749                           ;main.c: 83:         INTF = 0;
  2750  04CD  108B               	bcf	11,1	;volatile
  2751  04CE                     i1l135:
  2752  04CE  0875               	movf	??_ISR+2,w
  2753  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  2754  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  2755  04D1  00FF               	movwf	btemp+1
  2756  04D2  0874               	movf	??_ISR+1,w
  2757  04D3  008A               	movwf	10
  2758  04D4  0E73               	swapf	??_ISR^(0+4294967168),w
  2759  04D5  0083               	movwf	3
  2760  04D6  0EFE               	swapf	btemp,f
  2761  04D7  0E7E               	swapf	btemp,w
  2762  04D8  0009               	retfie
  2763  04D9                     __end_of_ISR:
  2764                           
  2765                           	psect	intentry
  2766  0004                     __pintentry:	
  2767                           ;incstack = 0
  2768                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2769                           
  2770  0004                     interrupt_function:
  2771  007E                     saved_w	set	btemp
  2772  0004  00FE               	movwf	btemp
  2773  0005  0E03               	swapf	3,w
  2774  0006  00F3               	movwf	??_ISR
  2775  0007  080A               	movf	10,w
  2776  0008  00F4               	movwf	??_ISR+1
  2777  0009  1283               	bcf	3,5	;RP0=0, select bank0
  2778  000A  1303               	bcf	3,6	;RP1=0, select bank0
  2779  000B  087F               	movf	btemp+1,w
  2780  000C  00F5               	movwf	??_ISR+2
  2781  000D  120A  118A  2CC1   	ljmp	_ISR
  2782                           
  2783                           	psect	text17
  2784  0318                     __ptext17:	
  2785 ;; *************** function i1_LcdCmdWrite *****************
  2786 ;; Defined at:
  2787 ;;		line 32 in file "./lcd.h"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;  cmd             1    wreg     unsigned char 
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  cmd             1    2[COMMON] unsigned char 
  2792 ;; Return value:  Size  Location     Type
  2793 ;;                  1    wreg      void 
  2794 ;; Registers used:
  2795 ;;		wreg, status,2, status,0, btemp+1
  2796 ;; Tracked objects:
  2797 ;;		On entry : 0/0
  2798 ;;		On exit  : 0/0
  2799 ;;		Unchanged: 0/0
  2800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2801 ;;      Params:         0       0       0       0       0
  2802 ;;      Locals:         1       0       0       0       0
  2803 ;;      Temps:          2       0       0       0       0
  2804 ;;      Totals:         3       0       0       0       0
  2805 ;;Total ram usage:        3 bytes
  2806 ;; Hardware stack levels used:    1
  2807 ;; This function calls:
  2808 ;;		Nothing
  2809 ;; This function is called by:
  2810 ;;		_ISR
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           
  2815                           ;psect for function i1_LcdCmdWrite
  2816  0318                     i1_LcdCmdWrite:
  2817                           
  2818                           ;incstack = 0
  2819                           ; Regs used in i1_LcdCmdWrite: [wreg+status,2+status,0+btemp+1]
  2820                           ;i1LcdCmdWrite@cmd stored from wreg
  2821  0318  00F2               	movwf	i1LcdCmdWrite@cmd
  2822  0319                     i1l1333:
  2823                           
  2824                           ;./lcd.h: 32:     void LcdCmdWrite(char cmd);./lcd.h: 33:     {;./lcd.h: 34:         POR
      +                          TD = (cmd & 0xF0);
  2825  0319  0872               	movf	i1LcdCmdWrite@cmd,w
  2826  031A  39F0               	andlw	240
  2827  031B  1283               	bcf	3,5	;RP0=0, select bank0
  2828  031C  1303               	bcf	3,6	;RP1=0, select bank0
  2829  031D  0088               	movwf	8	;volatile
  2830  031E                     i1l1335:
  2831                           
  2832                           ;./lcd.h: 35:         PORTD &= ~(1<<0);
  2833  031E  30FE               	movlw	254
  2834  031F  00FF               	movwf	btemp+1
  2835  0320  087F               	movf	btemp+1,w
  2836  0321  0588               	andwf	8,f	;volatile
  2837  0322                     i1l1337:
  2838                           
  2839                           ;./lcd.h: 36:         PORTD &= ~(1<<1);
  2840  0322  30FD               	movlw	253
  2841  0323  00FF               	movwf	btemp+1
  2842  0324  087F               	movf	btemp+1,w
  2843  0325  0588               	andwf	8,f	;volatile
  2844  0326                     i1l1339:
  2845                           
  2846                           ;./lcd.h: 37:         PORTD |= (1<<2);
  2847  0326  1508               	bsf	8,2	;volatile
  2848  0327                     i1l1341:
  2849                           
  2850                           ;./lcd.h: 38:         _delay((unsigned long)((10)*(20000000/4000.0)));
  2851  0327  3041               	movlw	65
  2852  0328  00F1               	movwf	??i1_LcdCmdWrite+1
  2853  0329  30EE               	movlw	238
  2854  032A  00F0               	movwf	??i1_LcdCmdWrite
  2855  032B                     u129_27:
  2856  032B  0BF0               	decfsz	??i1_LcdCmdWrite,f
  2857  032C  2B2B               	goto	u129_27
  2858  032D  0BF1               	decfsz	??i1_LcdCmdWrite+1,f
  2859  032E  2B2B               	goto	u129_27
  2860  032F  0000               	nop
  2861  0330                     i1l1343:
  2862                           
  2863                           ;./lcd.h: 39:         PORTD &= ~(1<<2);
  2864  0330  30FB               	movlw	251
  2865  0331  00FF               	movwf	btemp+1
  2866  0332  087F               	movf	btemp+1,w
  2867  0333  1283               	bcf	3,5	;RP0=0, select bank0
  2868  0334  1303               	bcf	3,6	;RP1=0, select bank0
  2869  0335  0588               	andwf	8,f	;volatile
  2870  0336                     i1l1345:
  2871                           
  2872                           ;./lcd.h: 41:         PORTD = ((cmd<<4) & 0xF0);
  2873  0336  0872               	movf	i1LcdCmdWrite@cmd,w
  2874  0337  00F0               	movwf	??i1_LcdCmdWrite
  2875  0338  3003               	movlw	3
  2876  0339                     u85_25:
  2877  0339  1003               	clrc
  2878  033A  0DF0               	rlf	??i1_LcdCmdWrite,f
  2879  033B  3EFF               	addlw	-1
  2880  033C  1D03               	skipz
  2881  033D  2B39               	goto	u85_25
  2882  033E  1003               	clrc
  2883  033F  0D70               	rlf	??i1_LcdCmdWrite,w
  2884  0340  39F0               	andlw	240
  2885  0341  0088               	movwf	8	;volatile
  2886  0342                     i1l1347:
  2887                           
  2888                           ;./lcd.h: 42:         PORTD &= ~(1<<0);
  2889  0342  30FE               	movlw	254
  2890  0343  00FF               	movwf	btemp+1
  2891  0344  087F               	movf	btemp+1,w
  2892  0345  0588               	andwf	8,f	;volatile
  2893  0346                     i1l1349:
  2894                           
  2895                           ;./lcd.h: 43:         PORTD &= ~(1<<1);
  2896  0346  30FD               	movlw	253
  2897  0347  00FF               	movwf	btemp+1
  2898  0348  087F               	movf	btemp+1,w
  2899  0349  0588               	andwf	8,f	;volatile
  2900  034A                     i1l1351:
  2901                           
  2902                           ;./lcd.h: 44:         PORTD |= (1<<2);
  2903  034A  1508               	bsf	8,2	;volatile
  2904  034B                     i1l1353:
  2905                           
  2906                           ;./lcd.h: 45:         _delay((unsigned long)((10)*(20000000/4000.0)));
  2907  034B  3041               	movlw	65
  2908  034C  00F1               	movwf	??i1_LcdCmdWrite+1
  2909  034D  30EE               	movlw	238
  2910  034E  00F0               	movwf	??i1_LcdCmdWrite
  2911  034F                     u130_27:
  2912  034F  0BF0               	decfsz	??i1_LcdCmdWrite,f
  2913  0350  2B4F               	goto	u130_27
  2914  0351  0BF1               	decfsz	??i1_LcdCmdWrite+1,f
  2915  0352  2B4F               	goto	u130_27
  2916  0353  0000               	nop
  2917  0354                     i1l1355:
  2918                           
  2919                           ;./lcd.h: 46:         PORTD &= ~(1<<2);
  2920  0354  30FB               	movlw	251
  2921  0355  00FF               	movwf	btemp+1
  2922  0356  087F               	movf	btemp+1,w
  2923  0357  1283               	bcf	3,5	;RP0=0, select bank0
  2924  0358  1303               	bcf	3,6	;RP1=0, select bank0
  2925  0359  0588               	andwf	8,f	;volatile
  2926  035A                     i1l43:
  2927  035A  0008               	return
  2928  035B                     __end_ofi1_LcdCmdWrite:
  2929  007E                     btemp	set	126	;btemp
  2930  007E                     wtemp0	set	126
  2931                           
  2932                           	psect	config
  2933                           
  2934                           ;Config register CONFIG @ 0x2007
  2935                           ;	Oscillator Selection bits
  2936                           ;	FOSC = XT, XT oscillator
  2937                           ;	Watchdog Timer Enable bit
  2938                           ;	WDTE = OFF, WDT disabled
  2939                           ;	Power-up Timer Enable bit
  2940                           ;	PWRTE = ON, PWRT enabled
  2941                           ;	Brown-out Reset Enable bit
  2942                           ;	BOREN = ON, BOR enabled
  2943                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2944                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2945                           ;	Data EEPROM Memory Code Protection bit
  2946                           ;	CPD = OFF, Data EEPROM code protection off
  2947                           ;	Flash Program Memory Write Enable bits
  2948                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2949                           ;	In-Circuit Debugger Mode bit
  2950                           ;	DEBUG = 0x1, unprogrammed default
  2951                           ;	Flash Program Memory Code Protection bit
  2952                           ;	CP = OFF, Code protection off
  2953  2007                     	org	8199
  2954  2007  3F71               	dw	16241

Data Sizes:
    Strings     6
    Constant    0
    Data        62
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     21      71
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LcdMsgPrint@msg	PTR unsigned char  size(2) Largest target is 16
		 -> idea_humi(BANK1[16]), idea_temp(BANK0[16]), STR_1(CODE[6]), humi(BANK0[14]), 
		 -> temp(BANK0[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LcdCmdWrite

Critical Paths under _main in BANK0

    _main->_DhtUpdateData
    _setPumpValue->___bmul
    ___bmul->___lbdiv
    _LcdMsgPrint->_LcdDataWrite
    _LcdInit->_LcdCmdWrite
    _DhtUpdateData->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3504
                                             18 BANK0      3     3      0
                      _DhtUpdateData
                        _LcdCmdWrite
                            _LcdInit
                        _LcdMsgPrint
                          _configPWM
                       _setPumpValue
 ---------------------------------------------------------------------------------
 (1) _setPumpValue                                         3     2      1     867
                                              7 BANK0      3     2      1
                             ___bmul
                            ___lbdiv
                             _setPWM
 ---------------------------------------------------------------------------------
 (2) _setPWM                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     331
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     226
                                              4 BANK0      3     2      1
                            ___lbdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _configPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LcdMsgPrint                                          3     1      2     642
                                              3 BANK0      3     1      2
                       _LcdDataWrite
 ---------------------------------------------------------------------------------
 (2) _LcdDataWrite                                         3     3      0      62
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              0     0      0      62
                        _LcdCmdWrite
 ---------------------------------------------------------------------------------
 (2) _LcdCmdWrite                                          3     3      0      62
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DhtUpdateData                                       10    10      0    1871
                                              8 BANK0     10    10      0
                   _DhtCheckResponse
                        _DhtReadData
                     _DhtStartSignal
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     908
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _DhtStartSignal                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DhtReadData                                          4     4      0     170
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _DhtCheckResponse                                     2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      44
                                              3 COMMON     3     3      0
                      i1_LcdCmdWrite
 ---------------------------------------------------------------------------------
 (4) i1_LcdCmdWrite                                        3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DhtUpdateData
     _DhtCheckResponse
     _DhtReadData
     _DhtStartSignal
     ___awdiv
     ___awmod
   _LcdCmdWrite
   _LcdInit
     _LcdCmdWrite
   _LcdMsgPrint
     _LcdDataWrite
   _configPWM
   _setPumpValue
     ___bmul
       ___lbdiv (ARG)
     ___lbdiv
     _setPWM

 _ISR (ROOT)
   i1_LcdCmdWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5F      12        0.0%
ABS                  0      0      5F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Jun 14 15:33:15 2020

                        pc 0002        __end_of_LcdCmdWrite 02D3             ___bmul@product 0052  
                       l43 02D2                         l46 04A7                         l55 03F5  
                       l72 048B                         l49 039B                         l84 0447  
     __end_of_LcdDataWrite 039C                         l97 0317               ___awdiv@sign 0052  
                       fsr 0004                        l101 012F                        l104 0539  
                      l107 04C0                        l251 04EF                        l139 046D  
                      l431 0420                        l391 028B                        l378 0230  
                      _GIE 005F                        _RB4 0034                        _PR2 0092  
                      u600 01DA                        u601 01D9                        u610 01EB  
                      u611 01EA                        _ISR 04C1                        u630 01FD  
                      u631 01FC                        u625 01EF                        u650 020E  
                      u651 020D                        u645 01FE                        u910 042F  
                      u670 0222                        u590 01CF                        u911 042E  
                      u671 0221                        u655 020A                        u591 01CE  
                      u920 043B                        u680 0227                        u921 043A  
                      u681 0226                        u665 0216                        u905 037B  
                      u930 0447                        u931 0446                        u940 02E3  
                      u941 02E2                        u950 02F7                        u951 02F6  
                      u960 030C                        u961 030B                        u970 0316  
                      u971 0315                        u980 04B2                        u981 04AE  
                      u895 02AF                        u994 04B5                        fsr0 0004  
                      indf 0000               ___awmod@sign 0052        __end_of_LcdMsgPrint 03F6  
                     ?_ISR 0070                       l1201 020E                       l1211 0227  
                     l1203 0214                       l1213 022C                       l1205 0215  
                     l1207 021C                       l1209 0222                       l1401 029A  
                     l1411 02BC                       l1403 029B                       l1323 0529  
                     l1181 01D6                       l1173 01C8                       l1413 02C0  
                     l1405 02A6                       l1421 0361                       l1325 0535  
                     l1501 04EE                       l1191 01EB                       l1183 01DA  
                     l1175 01CB                       l1511 023D                       l1415 02C1  
                     l1407 02AC                       l1431 0378                       l1423 0362  
                     l1193 01EE                       l1185 01DF                       l1177 01CF  
                     l1521 0251                       l1513 023F                       l1505 0231  
                     l1601 00A2                       l1417 02CC                       l1409 02B8  
                     l1441 0395                       l1433 0384                       l1425 0366  
                     l1451 0421                       l1443 046E                       l1195 01F5  
                     l1187 01E3                       l1179 01D4                       l1531 0270  
                     l1523 0258                       l1515 0243                       l1507 0234  
                     l1603 012C                       l1435 0385                       l1427 0367  
                     l1419 035E                       l1611 044B                       l1453 0421  
                     l1445 0474                       l1197 01F9                       l1189 01E5  
                     l1533 0277                       l1525 025C                       l1517 0248  
                     l1509 0238                       l1437 0389                       l1429 0372  
                     l1613 0450                       l1621 013A                       l1455 042F  
                     l1471 02F7                       l1447 047F                       l1199 01FD  
                     l1527 0260                       l1519 024E                       l1535 027D  
                     l1607 012E                       l1439 038A                       l1551 0404  
                     l1543 03F9                       l1615 0455                       l1631 015D  
                     l1623 013F                       l1457 043B                       l1481 0316  
                     l1473 02FA                       l1465 02D7                       l1449 0488  
                     l1537 0282                       l1529 026A                       l1561 0417  
                     l1553 0408                       l1545 03FA                       l1641 0198  
                     l1633 016F                       l1625 0143                       l1617 0130  
                     l1475 0300                       l1467 02E3                       l1459 02D3  
                     l1539 0287                       l1395 028F                       l1571 048F  
                     l1491 04DD                       l1563 0419                       l1555 040C  
                     l1547 03FF                       l1635 0175                       l1643 01A9  
                     l1627 014C                       l1619 0135                       l1477 030C  
                     l1469 02E9                       l1397 0292                       l1573 0495  
                     l1581 03CD                       l1493 04E1                       l1557 0414  
                     l1549 0402                       l1565 041F                       l1485 04AB  
                     l1645 01B5                       l1629 0152                       l1637 0181  
                     l1479 0310                       l1591 0052                       l1399 0296  
                     l1575 049B                       l1583 03DE                       l1495 04E5  
                     l1559 0416                       l1487 04B6                       l1639 018D  
                     l1593 005C                       l1577 04A1                       l1569 048C  
                     l1585 03E4                       l1497 04E7                       l1489 04DC  
                     l1595 0066                       l1587 003E                       l1579 03C9  
                     l1499 04E9                       l1597 0070                       l1589 0048  
                     l1599 007A                       STR_1 0510                       u1010 04E1  
                     u1011 04E0                       u1100 027D                       u1020 04EE  
                     u1101 027C                       u1021 04ED                       u1005 04B9  
                     u1110 0282                       u1030 0238                       u1111 0281  
                     u1031 0237                       u1040 0243                       u1120 03FF  
                     u1200 014C                       u1041 0242                       u1121 03FE  
                     u1201 014B                       u1050 024E                       u1130 040C  
                     u1051 024D                       u1131 040B                       u1140 0414  
                     u1141 0413                       u1070 0260                       u1150 041F  
                     u1071 025F                       u1151 041E                       u1080 026A  
                     u1160 03F5                       u1081 0269                       u1065 0252  
                     u1161 03F4                       u1217 01BD                       u1170 00A2  
                     u1171 00A1                       u1227 036D                       u1180 0455  
                     u1085 0266                       u1237 0390                       u1181 0454  
                     u1190 0143                       u1095 0271                       u1175 009E  
                     u1247 02A1                       u1191 0142                       u1257 02C7  
                     u1267 047A                       u1277 0486                       u1287 02E7  
                     _INTE 005C                       _INTF 0059                       i1l43 035A  
         LcdDataWrite@data 004F                       _main 0130                       _humi 0031  
                     _temp 003F                       btemp 007E                       start 0010  
          __end_of_LcdInit 04A8          ___bmul@multiplier 0053                      ??_ISR 0073  
                    ?_main 0070                      _CCP1X 00BD                      _CCP1Y 00BC  
          __end_of___awdiv 0231            __end_of___lbdiv 0421            __end_of___awmod 028C  
         _DhtCheckResponse 0421            ___awdiv@divisor 004D                      i1l135 04CE  
          ___awdiv@counter 0051                      _PORTD 0008                      _TRISD 0088  
                    u85_25 0339                      u88_20 04C5                      u88_21 04C4  
    __end_of_DhtUpdateData 0130                      _ihumi 0020                      _itemp 0077  
           __pbitbssCOMMON 03B0                      pclath 000A                _DhtReadData 02D3  
                    status 0003                      wtemp0 007E            ___lbdiv@divisor 004D  
          ___lbdiv@counter 004F                _LcdCmdWrite 028C            __initialization 0013  
             __end_of_main 01C8                     ??_main 005F                _LcdMsgPrint 03C9  
           _DhtStartSignal 046E                     _CCP1M2 00BA                     _CCP1M3 00BB  
                   _CCPR1L 0015           ___awdiv@dividend 004F                     i1l1341 0327  
                   i1l1333 0319                     i1l1351 034A                     i1l1343 0330  
                   i1l1335 031E                     i1l1353 034B                     i1l1345 0336  
                   i1l1337 0322                     i1l1355 0354                     i1l1347 0342  
                   i1l1339 0326                     i1l1349 0346                     i1l1391 04C7  
                   i1l1393 04CD                     i1l1387 04C1                     i1l1389 04C5  
                   u130_27 034F                     _INTEDG 040E                     u129_27 032B  
                ??_LcdInit 0076                     _TMR2ON 0092                     _TRISB4 0434  
                   _TRISC2 043A      __end_ofi1_LcdCmdWrite 035B      __size_of_LcdDataWrite 0041  
                   ___bmul 04D9                  ??___awdiv 0076                  ??___lbdiv 0076  
                ??___awmod 0076                     _setPWM 04A8           ___awdiv@quotient 0053  
          ___awmod@divisor 004D            ___awmod@counter 0051                     _status 03B0  
   __end_of_DhtStartSignal 048C               __pdataCOMMON 0077                     saved_w 007E  
         ___lbdiv@dividend 004E               _LcdDataWrite 035B    __end_of__initialization 003A  
      ___bmul@multiplicand 0051             __pcstackCOMMON 0070               __pidataBANK0 039C  
             __pidataBANK1 053A           ___lbdiv@quotient 0050          setPumpValue@delta 0056  
        setPumpValue@id_rh 0054            ?_DhtStartSignal 0070         __size_of_configPWM 0011  
               __pbssBANK0 0062   __end_of_DhtCheckResponse 0448                 __pmaintext 0130  
                  ?___bmul 0051                 __pintentry 0004                    ?_setPWM 0070  
                  _T2CKPS0 0090                    _T2CKPS1 0091              ?_setPumpValue 0054  
               __stringtab 0500                    _LcdInit 048C               ?_DhtReadData 0070  
             ?_LcdCmdWrite 0070          __end_of_configPWM 053A            __size_of___bmul 0017  
                  ___awdiv 01C8                    ___lbdiv 03F6                    ___awmod 0231  
          __size_of_setPWM 0019                    __ptext1 0448                    __ptext2 04A8  
             ?_LcdMsgPrint 0050                    __ptext3 03F6                    __ptext4 04D9  
                  __ptext5 0529                    __ptext6 03C9                    __ptext7 035B  
                  __ptext8 048C                    __ptext9 028C             ??_setPumpValue 0076  
             __size_of_ISR 0018           ___awmod@dividend 004F                    _t_byte1 0066  
                  _t_byte2 0065       end_of_initialization 003A     __size_of_DhtUpdateData 00F2  
           __end_of___bmul 04F0           ??_DhtStartSignal 004D              __pidataCOMMON 054A  
           LcdCmdWrite@cmd 004F             __end_of_setPWM 04C1        start_initialization 0013  
   __size_ofi1_LcdCmdWrite 0043                __end_of_ISR 04D9              _DhtUpdateData 003E  
        ?_DhtCheckResponse 0070       __end_of_setPumpValue 046E       __size_of_DhtReadData 0045  
       ??_DhtCheckResponse 004D       __size_of_LcdCmdWrite 0047                   ??___bmul 0076  
               init_fetch0 0516               DhtReadData@i 004F                __pdataBANK0 0020  
              __pdataBANK1 00A0                   ??_setPWM 004D       __size_of_LcdMsgPrint 002D  
                ___latbits 0002              __pcstackBANK0 004D             ?_DhtUpdateData 0070  
         setPumpValue@r_rh 0055                   ?_LcdInit 0070                  _check_sum 0062  
            i1_LcdCmdWrite 0318                  _idea_humi 00A0                  _idea_temp 0021  
                 ?___awdiv 004D                   ?___lbdiv 004D                   ?___awmod 004D  
                _configPWM 0529                  __pstrings 0500          interrupt_function 0004  
           ?i1_LcdCmdWrite 0070                 ?_configPWM 0070               LcdMsgPrint@i 0052  
              __stringbase 050F            ??_DhtUpdateData 0055              ?_LcdDataWrite 0070  
    __size_of_setPumpValue 0026           __size_of_LcdInit 001C           __size_of___awdiv 0069  
         __size_of___lbdiv 002B           __size_of___awmod 005B         __end_of__stringtab 0510  
             _setPumpValue 0448                   __ptext10 003E                   __ptext11 0231  
                 __ptext12 01C8                   __ptext13 046E                   __ptext14 02D3  
                 __ptext15 0421                   __ptext16 04C1                   __ptext17 0318  
           ??_LcdDataWrite 004D           i1LcdCmdWrite@cmd 0072            ??i1_LcdCmdWrite 0070  
            __size_of_main 0098                   _rh_byte1 0064                   _rh_byte2 0063  
              ??_configPWM 0076            DhtReadData@data 0050  __size_of_DhtCheckResponse 0027  
                 init_ram0 051A                   setPWM@DC 004E                   intlevel1 0000  
            ??_DhtReadData 004D              ??_LcdCmdWrite 004D                  stringcode 050A  
            ??_LcdMsgPrint 0076                   stringdir 050A                   stringtab 0500  
  __size_of_DhtStartSignal 001E             LcdMsgPrint@msg 0050        __end_of_DhtReadData 0318  
