

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Mon Jun 15 20:44:55 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    10                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	intentry,global,class=CODE,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.20
    39                           ; Generated 12/02/2020 GMT
    40                           ; 
    41                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192                           
   193                           	psect	idataCOMMON
   194  0524                     __pidataCOMMON:
   195                           
   196                           ;initializer for _itemp
   197  0524  3414               	retlw	20
   198                           
   199                           	psect	idataBANK0
   200  03D7                     __pidataBANK0:
   201                           
   202                           ;initializer for _ihumi
   203  03D7  345F               	retlw	95
   204                           
   205                           ;initializer for _idea_temp
   206  03D8  3449               	retlw	73
   207  03D9  3444               	retlw	68
   208  03DA  3454               	retlw	84
   209  03DB  3465               	retlw	101
   210  03DC  346D               	retlw	109
   211  03DD  3470               	retlw	112
   212  03DE  3420               	retlw	32
   213  03DF  343D               	retlw	61
   214  03E0  3420               	retlw	32
   215  03E1  3432               	retlw	50
   216  03E2  3430               	retlw	48
   217  03E3  342E               	retlw	46
   218  03E4  3430               	retlw	48
   219  03E5  3420               	retlw	32
   220  03E6  3443               	retlw	67
   221  03E7  3400               	retlw	0
   222                           
   223                           ;initializer for _humi
   224  03E8  3452               	retlw	82
   225  03E9  3448               	retlw	72
   226  03EA  3420               	retlw	32
   227  03EB  3420               	retlw	32
   228  03EC  3420               	retlw	32
   229  03ED  343D               	retlw	61
   230  03EE  3420               	retlw	32
   231  03EF  3430               	retlw	48
   232  03F0  3430               	retlw	48
   233  03F1  342E               	retlw	46
   234  03F2  3430               	retlw	48
   235  03F3  3420               	retlw	32
   236  03F4  3425               	retlw	37
   237  03F5  3400               	retlw	0
   238                           
   239                           ;initializer for _temp
   240  03F6  3454               	retlw	84
   241  03F7  3465               	retlw	101
   242  03F8  346D               	retlw	109
   243  03F9  3470               	retlw	112
   244  03FA  3420               	retlw	32
   245  03FB  343D               	retlw	61
   246  03FC  3420               	retlw	32
   247  03FD  3430               	retlw	48
   248  03FE  3430               	retlw	48
   249  03FF  342E               	retlw	46
   250  0400  3430               	retlw	48
   251  0401  3420               	retlw	32
   252  0402  3443               	retlw	67
   253  0403  3400               	retlw	0
   254                           
   255                           	psect	idataBANK1
   256  0514                     __pidataBANK1:
   257                           
   258                           ;initializer for _idea_humi
   259  0514  3449               	retlw	73
   260  0515  3444               	retlw	68
   261  0516  3452               	retlw	82
   262  0517  3448               	retlw	72
   263  0518  3420               	retlw	32
   264  0519  3420               	retlw	32
   265  051A  3420               	retlw	32
   266  051B  343D               	retlw	61
   267  051C  3420               	retlw	32
   268  051D  3438               	retlw	56
   269  051E  3435               	retlw	53
   270  051F  342E               	retlw	46
   271  0520  3430               	retlw	48
   272  0521  3420               	retlw	32
   273  0522  3425               	retlw	37
   274  0523  3400               	retlw	0
   275  0015                     _CCPR1L	set	21
   276  0008                     _PORTD	set	8
   277  0059                     _INTF	set	89
   278  005F                     _GIE	set	95
   279  005C                     _INTE	set	92
   280  00BD                     _CCP1X	set	189
   281  00BC                     _CCP1Y	set	188
   282  0092                     _TMR2ON	set	146
   283  0091                     _T2CKPS1	set	145
   284  0090                     _T2CKPS0	set	144
   285  00BB                     _CCP1M3	set	187
   286  00BA                     _CCP1M2	set	186
   287  0034                     _RB4	set	52
   288  0092                     _PR2	set	146
   289  0088                     _TRISD	set	136
   290  040E                     _INTEDG	set	1038
   291  043A                     _TRISC2	set	1082
   292  0434                     _TRISB4	set	1076
   293                           
   294                           	psect	strings
   295  04DA                     __pstrings:
   296  04DA                     stringtab:
   297  04DA                     __stringtab:
   298                           
   299                           ;	String table - string pointers are 1 byte each
   300  04DA  1BFF               	btfsc	btemp+1,7
   301  04DB  2CE4               	ljmp	stringcode
   302  04DC  1383               	bcf	3,7
   303  04DD  187F               	btfsc	btemp+1,0
   304  04DE  1783               	bsf	3,7
   305  04DF  0800               	movf	0,w
   306  04E0  0A84               	incf	4,f
   307  04E1  1903               	skipnz
   308  04E2  0AFF               	incf	btemp+1,f
   309  04E3  0008               	return
   310  04E4                     stringcode:
   311  04E4                     stringdir:
   312  04E4  3004               	movlw	high stringdir
   313  04E5  008A               	movwf	10
   314  04E6  0804               	movf	4,w
   315  04E7  0A84               	incf	4,f
   316  04E8  0782               	addwf	2,f
   317  04E9                     __stringbase:
   318  04E9  3400               	retlw	0
   319  04EA                     __end_of__stringtab:
   320  04EA                     STR_1:
   321  04EA  3445               	retlw	69	;'E'
   322  04EB  3472               	retlw	114	;'r'
   323  04EC  3472               	retlw	114	;'r'
   324  04ED  346F               	retlw	111	;'o'
   325  04EE  3472               	retlw	114	;'r'
   326  04EF  3400               	retlw	0
   327                           
   328                           	psect	cinit
   329  0013                     start_initialization:	
   330                           ; #config settings
   331                           
   332  0013                     __initialization:
   333                           
   334                           ; Initialize objects allocated to BANK1
   335  0013  1383               	bcf	3,7	;select IRP bank0
   336  0014  30B0               	movlw	low (__pdataBANK1+16)
   337  0015  00FD               	movwf	btemp+-1
   338  0016  3005               	movlw	high __pidataBANK1
   339  0017  00FE               	movwf	btemp
   340  0018  3014               	movlw	low __pidataBANK1
   341  0019  00FF               	movwf	btemp+1
   342  001A  30A0               	movlw	low __pdataBANK1
   343  001B  0084               	movwf	4
   344  001C  120A  118A  24F4  120A  118A  	fcall	init_ram0
   345                           
   346                           ; Initialize objects allocated to BANK0
   347  0021  304D               	movlw	low (__pdataBANK0+45)
   348  0022  00FD               	movwf	btemp+-1
   349  0023  3003               	movlw	high __pidataBANK0
   350  0024  00FE               	movwf	btemp
   351  0025  30D7               	movlw	low __pidataBANK0
   352  0026  00FF               	movwf	btemp+1
   353  0027  3020               	movlw	low __pdataBANK0
   354  0028  0084               	movwf	4
   355  0029  120A  118A  24F4  120A  118A  	fcall	init_ram0
   356                           
   357                           ; Initialize objects allocated to COMMON
   358  002E  120A  118A  2524  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   359  0033  00F7               	movwf	__pdataCOMMON& (0+127)
   360                           
   361                           ; Clear objects allocated to BANK0
   362  0034  01E2               	clrf	__pbssBANK0& (0+127)
   363  0035  01E3               	clrf	(__pbssBANK0+1)& (0+127)
   364  0036  01E4               	clrf	(__pbssBANK0+2)& (0+127)
   365  0037  01E5               	clrf	(__pbssBANK0+3)& (0+127)
   366  0038  01E6               	clrf	(__pbssBANK0+4)& (0+127)
   367                           
   368                           ; Clear objects allocated to BITCOMMON
   369  0039  01F6               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   370  003A                     end_of_initialization:	
   371                           ;End of C runtime variable initialization code
   372                           
   373  003A                     __end_of__initialization:
   374  003A  0183               	clrf	3
   375  003B  120A  118A  2930   	ljmp	_main	;jump to C main() function
   376                           
   377                           	psect	bitbssCOMMON
   378  03B0                     __pbitbssCOMMON:
   379  03B0                     _status:
   380  03B0                     	ds	1
   381                           
   382                           	psect	dataCOMMON
   383  0077                     __pdataCOMMON:
   384  0077                     _itemp:
   385  0077                     	ds	1
   386                           
   387                           	psect	bssBANK0
   388  0062                     __pbssBANK0:
   389  0062                     _check_sum:
   390  0062                     	ds	1
   391  0063                     _rh_byte2:
   392  0063                     	ds	1
   393  0064                     _rh_byte1:
   394  0064                     	ds	1
   395  0065                     _t_byte2:
   396  0065                     	ds	1
   397  0066                     _t_byte1:
   398  0066                     	ds	1
   399                           
   400                           	psect	dataBANK0
   401  0020                     __pdataBANK0:
   402  0020                     _ihumi:
   403  0020                     	ds	1
   404  0021                     _idea_temp:
   405  0021                     	ds	16
   406  0031                     _humi:
   407  0031                     	ds	14
   408  003F                     _temp:
   409  003F                     	ds	14
   410                           
   411                           	psect	dataBANK1
   412  00A0                     __pdataBANK1:
   413  00A0                     _idea_humi:
   414  00A0                     	ds	16
   415                           
   416                           	psect	inittext
   417  04F0                     init_fetch0:	
   418                           ;	Called with low address in FSR and high address in W
   419                           
   420  04F0  087E               	movf	btemp,w
   421  04F1  008A               	movwf	10
   422  04F2  087F               	movf	btemp+1,w
   423  04F3  0082               	movwf	2
   424  04F4                     init_ram0:	
   425                           ;Called with:
   426                           ;	high address of idata address in btemp 
   427                           ;	low address of idata address in btemp+1 
   428                           ;	low address of data in FSR
   429                           ;	high address + 1 of data in btemp-1
   430                           
   431  04F4  120A  118A  24F0  120A  118A  	fcall	init_fetch0
   432  04F9  0080               	movwf	0
   433  04FA  0A84               	incf	4,f
   434  04FB  0804               	movf	4,w
   435  04FC  067D               	xorwf	btemp+-1,w
   436  04FD  1903               	btfsc	3,2
   437  04FE  3400               	retlw	0
   438  04FF  0AFF               	incf	btemp+1,f
   439  0500  1903               	btfsc	3,2
   440  0501  0AFE               	incf	btemp,f
   441  0502  2CF4               	goto	init_ram0
   442                           
   443                           	psect	cstackCOMMON
   444  0070                     __pcstackCOMMON:
   445  0070                     ?_DhtUpdateData:
   446  0070                     ?_LcdCmdWrite:	
   447                           ; 1 bit 
   448                           
   449  0070                     ?_LcdInit:	
   450                           ; 1 bytes @ 0x0
   451                           
   452  0070                     ?_LcdDataWrite:	
   453                           ; 1 bytes @ 0x0
   454                           
   455  0070                     ?_DhtStartSignal:	
   456                           ; 1 bytes @ 0x0
   457                           
   458  0070                     ?_DhtCheckResponse:	
   459                           ; 1 bytes @ 0x0
   460                           
   461  0070                     ?_DhtReadData:	
   462                           ; 1 bytes @ 0x0
   463                           
   464  0070                     ?_configPWM:	
   465                           ; 1 bytes @ 0x0
   466                           
   467  0070                     ?_setPWM:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_main:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_ISR:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?i1_LcdCmdWrite:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ??i1_LcdCmdWrite:	
   480                           ; 1 bytes @ 0x0
   481                           
   482                           
   483                           ; 1 bytes @ 0x0
   484  0070                     	ds	2
   485  0072                     i1LcdCmdWrite@cmd:
   486                           
   487                           ; 1 bytes @ 0x2
   488  0072                     	ds	1
   489  0073                     ??_ISR:
   490                           
   491                           ; 1 bytes @ 0x3
   492  0073                     	ds	3
   493  0076                     ??_setPumpValue:
   494  0076                     ??_LcdInit:	
   495                           ; 1 bytes @ 0x6
   496                           
   497  0076                     ??_LcdMsgPrint:	
   498                           ; 1 bytes @ 0x6
   499                           
   500  0076                     ??_configPWM:	
   501                           ; 1 bytes @ 0x6
   502                           
   503  0076                     ??___bmul:	
   504                           ; 1 bytes @ 0x6
   505                           
   506  0076                     ??___awdiv:	
   507                           ; 1 bytes @ 0x6
   508                           
   509  0076                     ??___awmod:	
   510                           ; 1 bytes @ 0x6
   511                           
   512                           
   513                           	psect	cstackBANK0
   514  004D                     __pcstackBANK0:	
   515                           ; 1 bytes @ 0x6
   516                           
   517  004D                     ??_LcdCmdWrite:
   518  004D                     ??_LcdDataWrite:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  004D                     ??_DhtStartSignal:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  004D                     ??_DhtCheckResponse:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  004D                     ??_DhtReadData:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  004D                     ??_setPWM:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  004D                     ?___bmul:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  004D                     ?___awdiv:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  004D                     ?___awmod:	
   540                           ; 2 bytes @ 0x0
   541                           
   542  004D                     ___bmul@multiplicand:	
   543                           ; 2 bytes @ 0x0
   544                           
   545  004D                     ___awdiv@divisor:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  004D                     ___awmod@divisor:	
   549                           ; 2 bytes @ 0x0
   550                           
   551                           
   552                           ; 2 bytes @ 0x0
   553  004D                     	ds	1
   554  004E                     setPWM@DC:
   555  004E                     ___bmul@product:	
   556                           ; 1 bytes @ 0x1
   557                           
   558                           
   559                           ; 1 bytes @ 0x1
   560  004E                     	ds	1
   561  004F                     LcdCmdWrite@cmd:
   562  004F                     LcdDataWrite@data:	
   563                           ; 1 bytes @ 0x2
   564                           
   565  004F                     DhtReadData@i:	
   566                           ; 1 bytes @ 0x2
   567                           
   568  004F                     ___bmul@multiplier:	
   569                           ; 1 bytes @ 0x2
   570                           
   571  004F                     ___awdiv@dividend:	
   572                           ; 1 bytes @ 0x2
   573                           
   574  004F                     ___awmod@dividend:	
   575                           ; 2 bytes @ 0x2
   576                           
   577                           
   578                           ; 2 bytes @ 0x2
   579  004F                     	ds	1
   580  0050                     ?_setPumpValue:
   581  0050                     ?_LcdMsgPrint:	
   582                           ; 1 bytes @ 0x3
   583                           
   584  0050                     DhtReadData@data:	
   585                           ; 1 bytes @ 0x3
   586                           
   587  0050                     setPumpValue@id_rh:	
   588                           ; 1 bytes @ 0x3
   589                           
   590  0050                     LcdMsgPrint@msg:	
   591                           ; 1 bytes @ 0x3
   592                           
   593                           
   594                           ; 2 bytes @ 0x3
   595  0050                     	ds	1
   596  0051                     setPumpValue@r_rh:
   597  0051                     ___awdiv@counter:	
   598                           ; 1 bytes @ 0x4
   599                           
   600  0051                     ___awmod@counter:	
   601                           ; 1 bytes @ 0x4
   602                           
   603                           
   604                           ; 1 bytes @ 0x4
   605  0051                     	ds	1
   606  0052                     LcdMsgPrint@i:
   607  0052                     setPumpValue@delta:	
   608                           ; 1 bytes @ 0x5
   609                           
   610  0052                     ___awdiv@sign:	
   611                           ; 1 bytes @ 0x5
   612                           
   613  0052                     ___awmod@sign:	
   614                           ; 1 bytes @ 0x5
   615                           
   616                           
   617                           ; 1 bytes @ 0x5
   618  0052                     	ds	1
   619  0053                     ___awdiv@quotient:
   620                           
   621                           ; 2 bytes @ 0x6
   622  0053                     	ds	2
   623  0055                     ??_DhtUpdateData:
   624                           
   625                           ; 1 bytes @ 0x8
   626  0055                     	ds	10
   627  005F                     ??_main:
   628                           
   629                           ; 1 bytes @ 0x12
   630  005F                     	ds	3
   631                           
   632                           	psect	maintext
   633  0130                     __pmaintext:	
   634 ;;
   635 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   636 ;;
   637 ;; *************** function _main *****************
   638 ;; Defined at:
   639 ;;		line 30 in file "main.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      void 
   646 ;; Registers used:
   647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : B00/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       3       0       0       0
   656 ;;      Totals:         0       3       0       0       0
   657 ;;Total ram usage:        3 bytes
   658 ;; Hardware stack levels required when called:    4
   659 ;; This function calls:
   660 ;;		_DhtUpdateData
   661 ;;		_LcdCmdWrite
   662 ;;		_LcdInit
   663 ;;		_LcdMsgPrint
   664 ;;		_configPWM
   665 ;;		_setPumpValue
   666 ;; This function is called by:
   667 ;;		Startup code after reset
   668 ;; This function uses a non-reentrant model
   669 ;;
   670                           
   671                           
   672                           ;psect for function _main
   673  0130                     _main:
   674  0130                     l1560:	
   675                           ;incstack = 0
   676                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   677                           
   678                           
   679                           ;main.c: 34:     INTEDG = 1;
   680  0130  1683               	bsf	3,5	;RP0=1, select bank1
   681  0131  1303               	bcf	3,6	;RP1=0, select bank1
   682  0132  1701               	bsf	1,6	;volatile
   683                           
   684                           ;main.c: 35:     INTE = 1;
   685  0133  160B               	bsf	11,4	;volatile
   686                           
   687                           ;main.c: 36:     GIE = 1;
   688  0134  178B               	bsf	11,7	;volatile
   689  0135                     l1562:
   690                           
   691                           ;main.c: 41:     LcdInit();
   692  0135  120A  118A  2476  120A  118A  	fcall	_LcdInit
   693  013A                     l1564:
   694                           
   695                           ;main.c: 42:     configPWM();
   696  013A  120A  118A  2503  120A  118A  	fcall	_configPWM
   697  013F                     l1566:
   698                           
   699                           ;main.c: 45:     {;main.c: 46:         if(!status)
   700  013F  1876               	btfsc	_status/(0+8),_status& (0+7)
   701  0140  2942               	goto	u1101
   702  0141  2943               	goto	u1100
   703  0142                     u1101:
   704  0142  2981               	goto	l1580
   705  0143                     u1100:
   706  0143                     l1568:
   707                           
   708                           ;main.c: 47:         {;main.c: 48:             if(DhtUpdateData())
   709  0143  120A  118A  203E  120A  118A  	fcall	_DhtUpdateData
   710  0148  1C03               	btfss	3,0
   711  0149  294B               	goto	u1111
   712  014A  294C               	goto	u1110
   713  014B                     u1111:
   714  014B  296F               	goto	l1576
   715  014C                     u1110:
   716  014C                     l1570:
   717                           
   718                           ;main.c: 49:             {;main.c: 50:                 LcdCmdWrite(0x80);
   719  014C  3080               	movlw	128
   720  014D  120A  118A  228B  120A  118A  	fcall	_LcdCmdWrite
   721  0152                     l1572:
   722                           
   723                           ;main.c: 51:                 LcdMsgPrint(temp);
   724  0152  303F               	movlw	(low (_temp| 0))& (0+255)
   725  0153  1283               	bcf	3,5	;RP0=0, select bank0
   726  0154  1303               	bcf	3,6	;RP1=0, select bank0
   727  0155  00D0               	movwf	LcdMsgPrint@msg
   728  0156  3000               	movlw	0
   729  0157  00D1               	movwf	LcdMsgPrint@msg+1
   730  0158  120A  118A  2404  120A  118A  	fcall	_LcdMsgPrint
   731  015D                     l1574:
   732                           
   733                           ;main.c: 52:                 LcdCmdWrite(0xC0);
   734  015D  30C0               	movlw	192
   735  015E  120A  118A  228B  120A  118A  	fcall	_LcdCmdWrite
   736                           
   737                           ;main.c: 53:                 LcdMsgPrint(humi);
   738  0163  3031               	movlw	(low (_humi| 0))& (0+255)
   739  0164  1283               	bcf	3,5	;RP0=0, select bank0
   740  0165  1303               	bcf	3,6	;RP1=0, select bank0
   741  0166  00D0               	movwf	LcdMsgPrint@msg
   742  0167  3000               	movlw	0
   743  0168  00D1               	movwf	LcdMsgPrint@msg+1
   744  0169  120A  118A  2404  120A  118A  	fcall	_LcdMsgPrint
   745                           
   746                           ;main.c: 54:             }
   747  016E  29A9               	goto	l1586
   748  016F                     l1576:
   749                           
   750                           ;main.c: 56:             {;main.c: 57:                 LcdCmdWrite(0x80);
   751  016F  3080               	movlw	128
   752  0170  120A  118A  228B  120A  118A  	fcall	_LcdCmdWrite
   753  0175                     l1578:
   754                           
   755                           ;main.c: 58:                 LcdMsgPrint("Error");
   756  0175  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   757  0176  1283               	bcf	3,5	;RP0=0, select bank0
   758  0177  1303               	bcf	3,6	;RP1=0, select bank0
   759  0178  00D0               	movwf	LcdMsgPrint@msg
   760  0179  3080               	movlw	128
   761  017A  00D1               	movwf	LcdMsgPrint@msg+1
   762  017B  120A  118A  2404  120A  118A  	fcall	_LcdMsgPrint
   763  0180  29A9               	goto	l1586
   764  0181                     l1580:
   765                           
   766                           ;main.c: 62:         {;main.c: 63:             LcdCmdWrite(0x01);
   767  0181  3001               	movlw	1
   768  0182  120A  118A  228B  120A  118A  	fcall	_LcdCmdWrite
   769                           
   770                           ;main.c: 64:             LcdCmdWrite(0x80);
   771  0187  3080               	movlw	128
   772  0188  120A  118A  228B  120A  118A  	fcall	_LcdCmdWrite
   773  018D                     l1582:
   774                           
   775                           ;main.c: 65:             LcdMsgPrint(idea_temp);
   776  018D  3021               	movlw	(low (_idea_temp| 0))& (0+255)
   777  018E  1283               	bcf	3,5	;RP0=0, select bank0
   778  018F  1303               	bcf	3,6	;RP1=0, select bank0
   779  0190  00D0               	movwf	LcdMsgPrint@msg
   780  0191  3000               	movlw	0
   781  0192  00D1               	movwf	LcdMsgPrint@msg+1
   782  0193  120A  118A  2404  120A  118A  	fcall	_LcdMsgPrint
   783  0198                     l1584:
   784                           
   785                           ;main.c: 66:             LcdCmdWrite(0xC0);
   786  0198  30C0               	movlw	192
   787  0199  120A  118A  228B  120A  118A  	fcall	_LcdCmdWrite
   788                           
   789                           ;main.c: 67:             LcdMsgPrint(idea_humi);
   790  019E  30A0               	movlw	(low (_idea_humi| 0))& (0+255)
   791  019F  1283               	bcf	3,5	;RP0=0, select bank0
   792  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   793  01A1  00D0               	movwf	LcdMsgPrint@msg
   794  01A2  3000               	movlw	0
   795  01A3  00D1               	movwf	LcdMsgPrint@msg+1
   796  01A4  120A  118A  2404  120A  118A  	fcall	_LcdMsgPrint
   797  01A9                     l1586:
   798                           
   799                           ;main.c: 70:         setPumpValue(rh_byte1, ihumi);
   800  01A9  305F               	movlw	95
   801  01AA  00FF               	movwf	btemp+1
   802  01AB  087F               	movf	btemp+1,w
   803  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   804  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   805  01AE  00D0               	movwf	setPumpValue@id_rh
   806  01AF  0864               	movf	_rh_byte1,w
   807  01B0  120A  118A  239B  120A  118A  	fcall	_setPumpValue
   808  01B5                     l1588:
   809                           
   810                           ;main.c: 71:         _delay((unsigned long)((100)*(20000000/4000.0)));
   811  01B5  3003               	movlw	3
   812  01B6  1283               	bcf	3,5	;RP0=0, select bank0
   813  01B7  1303               	bcf	3,6	;RP1=0, select bank0
   814  01B8  00E1               	movwf	??_main+2
   815  01B9  308A               	movlw	138
   816  01BA  00E0               	movwf	??_main+1
   817  01BB  3055               	movlw	85
   818  01BC  00DF               	movwf	??_main
   819  01BD                     u1127:
   820  01BD  0BDF               	decfsz	??_main,f
   821  01BE  29BD               	goto	u1127
   822  01BF  0BE0               	decfsz	??_main+1,f
   823  01C0  29BD               	goto	u1127
   824  01C1  0BE1               	decfsz	??_main+2,f
   825  01C2  29BD               	goto	u1127
   826  01C3  293F               	goto	l1566
   827  01C4  120A  118A  2810   	ljmp	start
   828  01C7                     __end_of_main:
   829                           
   830                           	psect	text1
   831  039B                     __ptext1:	
   832 ;; *************** function _setPumpValue *****************
   833 ;; Defined at:
   834 ;;		line 88 in file "main.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  r_rh            1    wreg     unsigned char 
   837 ;;  id_rh           1    3[BANK0 ] unsigned char 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  r_rh            1    4[BANK0 ] unsigned char 
   840 ;;  delta           1    5[BANK0 ] unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       1       0       0       0
   851 ;;      Locals:         0       2       0       0       0
   852 ;;      Temps:          0       0       0       0       0
   853 ;;      Totals:         0       3       0       0       0
   854 ;;Total ram usage:        3 bytes
   855 ;; Hardware stack levels used:    1
   856 ;; Hardware stack levels required when called:    3
   857 ;; This function calls:
   858 ;;		___bmul
   859 ;;		_setPWM
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _setPumpValue
   867  039B                     _setPumpValue:
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _setPumpValue: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   871                           ;setPumpValue@r_rh stored from wreg
   872  039B  1283               	bcf	3,5	;RP0=0, select bank0
   873  039C  1303               	bcf	3,6	;RP1=0, select bank0
   874  039D  00D1               	movwf	setPumpValue@r_rh
   875  039E                     l1548:
   876                           
   877                           ;main.c: 88: void setPumpValue(unsigned char r_rh, unsigned char id_rh);main.c: 89: {;ma
      +                          in.c: 90:     char delta = 10*(id_rh - r_rh);
   878  039E  300A               	movlw	10
   879  039F  00FF               	movwf	btemp+1
   880  03A0  087F               	movf	btemp+1,w
   881  03A1  00CD               	movwf	___bmul@multiplicand
   882  03A2  0851               	movf	setPumpValue@r_rh,w
   883  03A3  0250               	subwf	setPumpValue@id_rh,w
   884  03A4  120A  118A  24C3  120A  118A  	fcall	___bmul
   885  03A9  00FF               	movwf	btemp+1
   886  03AA  087F               	movf	btemp+1,w
   887  03AB  1283               	bcf	3,5	;RP0=0, select bank0
   888  03AC  1303               	bcf	3,6	;RP1=0, select bank0
   889  03AD  00D2               	movwf	setPumpValue@delta
   890  03AE                     l1550:
   891                           
   892                           ;main.c: 91:     if(delta > 0)
   893  03AE  0852               	movf	setPumpValue@delta,w
   894  03AF  1903               	btfsc	3,2
   895  03B0  2BB2               	goto	u1081
   896  03B1  2BB3               	goto	u1080
   897  03B2                     u1081:
   898  03B2  2BD0               	goto	l1558
   899  03B3                     u1080:
   900  03B3                     l1552:
   901                           
   902                           ;main.c: 92:     {;main.c: 93:         if(delta < 200) setPWM(10*delta);
   903  03B3  30C8               	movlw	200
   904  03B4  0252               	subwf	setPumpValue@delta,w
   905  03B5  1803               	skipnc
   906  03B6  2BB8               	goto	u1091
   907  03B7  2BB9               	goto	u1090
   908  03B8                     u1091:
   909  03B8  2BC9               	goto	l1556
   910  03B9                     u1090:
   911  03B9                     l1554:
   912  03B9  300A               	movlw	10
   913  03BA  00FF               	movwf	btemp+1
   914  03BB  087F               	movf	btemp+1,w
   915  03BC  00CD               	movwf	___bmul@multiplicand
   916  03BD  0852               	movf	setPumpValue@delta,w
   917  03BE  120A  118A  24C3  120A  118A  	fcall	___bmul
   918  03C3  120A  118A  2492  120A  118A  	fcall	_setPWM
   919  03C8  2BD6               	goto	l142
   920  03C9                     l1556:
   921  03C9  30C8               	movlw	200
   922  03CA  120A  118A  2492  120A  118A  	fcall	_setPWM
   923  03CF  2BD6               	goto	l142
   924  03D0                     l1558:
   925  03D0  3000               	movlw	0
   926  03D1  120A  118A  2492  120A  118A  	fcall	_setPWM
   927  03D6                     l142:
   928  03D6  0008               	return
   929  03D7                     __end_of_setPumpValue:
   930                           
   931                           	psect	text2
   932  0492                     __ptext2:	
   933 ;; *************** function _setPWM *****************
   934 ;; Defined at:
   935 ;;		line 29 in file "./pwm.h"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  DC              1    wreg     unsigned char 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  DC              1    1[BANK0 ] unsigned char 
   940 ;; Return value:  Size  Location     Type
   941 ;;                  1    wreg      void 
   942 ;; Registers used:
   943 ;;		wreg, status,2, status,0
   944 ;; Tracked objects:
   945 ;;		On entry : 0/0
   946 ;;		On exit  : 0/0
   947 ;;		Unchanged: 0/0
   948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   949 ;;      Params:         0       0       0       0       0
   950 ;;      Locals:         0       1       0       0       0
   951 ;;      Temps:          0       1       0       0       0
   952 ;;      Totals:         0       2       0       0       0
   953 ;;Total ram usage:        2 bytes
   954 ;; Hardware stack levels used:    1
   955 ;; Hardware stack levels required when called:    2
   956 ;; This function calls:
   957 ;;		Nothing
   958 ;; This function is called by:
   959 ;;		_setPumpValue
   960 ;; This function uses a non-reentrant model
   961 ;;
   962                           
   963                           
   964                           ;psect for function _setPWM
   965  0492                     _setPWM:
   966                           
   967                           ;incstack = 0
   968                           ; Regs used in _setPWM: [wreg+status,2+status,0]
   969                           ;setPWM@DC stored from wreg
   970  0492  1283               	bcf	3,5	;RP0=0, select bank0
   971  0493  1303               	bcf	3,6	;RP1=0, select bank0
   972  0494  00CE               	movwf	setPWM@DC
   973  0495                     l1448:
   974                           
   975                           ;./pwm.h: 29:     void setPWM(unsigned char DC);./pwm.h: 30:     {;./pwm.h: 32:         
      +                          CCP1Y = DC & (1<<0);
   976  0495  184E               	btfsc	setPWM@DC,0
   977  0496  2C98               	goto	u921
   978  0497  2C9C               	goto	u920
   979  0498                     u921:
   980  0498  1283               	bcf	3,5	;RP0=0, select bank0
   981  0499  1303               	bcf	3,6	;RP1=0, select bank0
   982  049A  1617               	bsf	23,4	;volatile
   983  049B  2C9F               	goto	u934
   984  049C                     u920:
   985  049C  1283               	bcf	3,5	;RP0=0, select bank0
   986  049D  1303               	bcf	3,6	;RP1=0, select bank0
   987  049E  1217               	bcf	23,4	;volatile
   988  049F                     u934:
   989                           
   990                           ;./pwm.h: 33:         CCP1X = DC & (1<<1);
   991  049F  1297               	bcf	23,5	;volatile
   992  04A0                     l1450:
   993                           
   994                           ;./pwm.h: 35:         CCPR1L = DC >> 2;
   995  04A0  084E               	movf	setPWM@DC,w
   996  04A1  00CD               	movwf	??_setPWM
   997  04A2  3002               	movlw	2
   998  04A3                     u945:
   999  04A3  1003               	clrc
  1000  04A4  0CCD               	rrf	??_setPWM,f
  1001  04A5  3EFF               	addlw	-1
  1002  04A6  1D03               	skipz
  1003  04A7  2CA3               	goto	u945
  1004  04A8  084D               	movf	??_setPWM,w
  1005  04A9  0095               	movwf	21	;volatile
  1006  04AA                     l107:
  1007  04AA  0008               	return
  1008  04AB                     __end_of_setPWM:
  1009                           
  1010                           	psect	text3
  1011  04C3                     __ptext3:	
  1012 ;; *************** function ___bmul *****************
  1013 ;; Defined at:
  1014 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  multiplier      1    wreg     unsigned char 
  1017 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1018 ;; Auto vars:     Size  Location     Type
  1019 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1020 ;;  product         1    1[BANK0 ] unsigned char 
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      unsigned char 
  1023 ;; Registers used:
  1024 ;;		wreg, status,2, status,0, btemp+1
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1030 ;;      Params:         0       1       0       0       0
  1031 ;;      Locals:         0       2       0       0       0
  1032 ;;      Temps:          0       0       0       0       0
  1033 ;;      Totals:         0       3       0       0       0
  1034 ;;Total ram usage:        3 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    2
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_setPumpValue
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           
  1045                           ;psect for function ___bmul
  1046  04C3                     ___bmul:
  1047                           
  1048                           ;incstack = 0
  1049                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1050                           ;___bmul@multiplier stored from wreg
  1051  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  1052  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  1053  04C5  00CF               	movwf	___bmul@multiplier
  1054  04C6                     l1452:
  1055  04C6  01CE               	clrf	___bmul@product
  1056  04C7                     l1454:
  1057  04C7  1C4F               	btfss	___bmul@multiplier,0
  1058  04C8  2CCA               	goto	u951
  1059  04C9  2CCB               	goto	u950
  1060  04CA                     u951:
  1061  04CA  2CCF               	goto	l1458
  1062  04CB                     u950:
  1063  04CB                     l1456:
  1064  04CB  084D               	movf	___bmul@multiplicand,w
  1065  04CC  00FF               	movwf	btemp+1
  1066  04CD  087F               	movf	btemp+1,w
  1067  04CE  07CE               	addwf	___bmul@product,f
  1068  04CF                     l1458:
  1069  04CF  1003               	clrc
  1070  04D0  0DCD               	rlf	___bmul@multiplicand,f
  1071  04D1                     l1460:
  1072  04D1  1003               	clrc
  1073  04D2  0CCF               	rrf	___bmul@multiplier,f
  1074  04D3                     l1462:
  1075  04D3  084F               	movf	___bmul@multiplier,w
  1076  04D4  1D03               	btfss	3,2
  1077  04D5  2CD7               	goto	u961
  1078  04D6  2CD8               	goto	u960
  1079  04D7                     u961:
  1080  04D7  2CC7               	goto	l1454
  1081  04D8                     u960:
  1082  04D8                     l1464:
  1083  04D8  084E               	movf	___bmul@product,w
  1084  04D9                     l254:
  1085  04D9  0008               	return
  1086  04DA                     __end_of___bmul:
  1087                           
  1088                           	psect	text4
  1089  0503                     __ptext4:	
  1090 ;; *************** function _configPWM *****************
  1091 ;; Defined at:
  1092 ;;		line 10 in file "./pwm.h"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;		None
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      void 
  1099 ;; Registers used:
  1100 ;;		wreg
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0       0       0       0       0
  1108 ;;      Temps:          0       0       0       0       0
  1109 ;;      Totals:         0       0       0       0       0
  1110 ;;Total ram usage:        0 bytes
  1111 ;; Hardware stack levels used:    1
  1112 ;; Hardware stack levels required when called:    2
  1113 ;; This function calls:
  1114 ;;		Nothing
  1115 ;; This function is called by:
  1116 ;;		_main
  1117 ;; This function uses a non-reentrant model
  1118 ;;
  1119                           
  1120                           
  1121                           ;psect for function _configPWM
  1122  0503                     _configPWM:
  1123  0503                     l1280:	
  1124                           ;incstack = 0
  1125                           ; Regs used in _configPWM: [wreg]
  1126                           
  1127                           
  1128                           ;./pwm.h: 13:         CCP1M2 = 1;
  1129  0503  1283               	bcf	3,5	;RP0=0, select bank0
  1130  0504  1303               	bcf	3,6	;RP1=0, select bank0
  1131  0505  1517               	bsf	23,2	;volatile
  1132                           
  1133                           ;./pwm.h: 14:         CCP1M3 = 1;
  1134  0506  1597               	bsf	23,3	;volatile
  1135                           
  1136                           ;./pwm.h: 16:         TRISC2 = 0;
  1137  0507  1683               	bsf	3,5	;RP0=1, select bank1
  1138  0508  1303               	bcf	3,6	;RP1=0, select bank1
  1139  0509  1107               	bcf	7,2	;volatile
  1140                           
  1141                           ;./pwm.h: 18:         T2CKPS0 = 1;
  1142  050A  1283               	bcf	3,5	;RP0=0, select bank0
  1143  050B  1303               	bcf	3,6	;RP1=0, select bank0
  1144  050C  1412               	bsf	18,0	;volatile
  1145                           
  1146                           ;./pwm.h: 19:         T2CKPS1 = 1;
  1147  050D  1492               	bsf	18,1	;volatile
  1148                           
  1149                           ;./pwm.h: 20:         TMR2ON = 1;
  1150  050E  1512               	bsf	18,2	;volatile
  1151  050F                     l1282:
  1152                           
  1153                           ;./pwm.h: 23:         PR2 = 49;
  1154  050F  3031               	movlw	49
  1155  0510  1683               	bsf	3,5	;RP0=1, select bank1
  1156  0511  1303               	bcf	3,6	;RP1=0, select bank1
  1157  0512  0092               	movwf	18	;volatile
  1158  0513                     l104:
  1159  0513  0008               	return
  1160  0514                     __end_of_configPWM:
  1161                           
  1162                           	psect	text5
  1163  0404                     __ptext5:	
  1164 ;; *************** function _LcdMsgPrint *****************
  1165 ;; Defined at:
  1166 ;;		line 79 in file "./lcd.h"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  msg             2    3[BANK0 ] PTR unsigned char 
  1169 ;;		 -> idea_humi(16), idea_temp(16), STR_1(6), humi(14), 
  1170 ;;		 -> temp(14), 
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;  i               1    5[BANK0 ] unsigned char 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         0       2       0       0       0
  1183 ;;      Locals:         0       1       0       0       0
  1184 ;;      Temps:          0       0       0       0       0
  1185 ;;      Totals:         0       3       0       0       0
  1186 ;;Total ram usage:        3 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    3
  1189 ;; This function calls:
  1190 ;;		_LcdDataWrite
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _LcdMsgPrint
  1198  0404                     _LcdMsgPrint:
  1199  0404                     l1516:	
  1200                           ;incstack = 0
  1201                           ; Regs used in _LcdMsgPrint: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1202                           
  1203                           
  1204                           ;./lcd.h: 79:     void LcdMsgPrint(char* msg);./lcd.h: 80:     {;./lcd.h: 81:         fo
      +                          r(char i = 0; msg[i] != '\0'; i++)
  1205  0404  1283               	bcf	3,5	;RP0=0, select bank0
  1206  0405  1303               	bcf	3,6	;RP1=0, select bank0
  1207  0406  01D2               	clrf	LcdMsgPrint@i
  1208  0407  2C1F               	goto	l1522
  1209  0408                     l1518:
  1210                           
  1211                           ;./lcd.h: 82:         {;./lcd.h: 83:             LcdDataWrite(msg[i]);
  1212  0408  0852               	movf	LcdMsgPrint@i,w
  1213  0409  0750               	addwf	LcdMsgPrint@msg,w
  1214  040A  0084               	movwf	4
  1215  040B  0851               	movf	LcdMsgPrint@msg+1,w
  1216  040C  1803               	skipnc
  1217  040D  0A51               	incf	LcdMsgPrint@msg+1,w
  1218  040E  00FF               	movwf	btemp+1
  1219  040F  120A  118A  24DA  120A  118A  	fcall	stringtab
  1220  0414  120A  118A  235A  120A  118A  	fcall	_LcdDataWrite
  1221  0419                     l1520:
  1222                           
  1223                           ;./lcd.h: 84:         }
  1224  0419  3001               	movlw	1
  1225  041A  00FF               	movwf	btemp+1
  1226  041B  087F               	movf	btemp+1,w
  1227  041C  1283               	bcf	3,5	;RP0=0, select bank0
  1228  041D  1303               	bcf	3,6	;RP1=0, select bank0
  1229  041E  07D2               	addwf	LcdMsgPrint@i,f
  1230  041F                     l1522:
  1231  041F  0852               	movf	LcdMsgPrint@i,w
  1232  0420  0750               	addwf	LcdMsgPrint@msg,w
  1233  0421  0084               	movwf	4
  1234  0422  0851               	movf	LcdMsgPrint@msg+1,w
  1235  0423  1803               	skipnc
  1236  0424  0A51               	incf	LcdMsgPrint@msg+1,w
  1237  0425  00FF               	movwf	btemp+1
  1238  0426  120A  118A  24DA  120A  118A  	fcall	stringtab
  1239  042B  3A00               	xorlw	0
  1240  042C  1D03               	skipz
  1241  042D  2C2F               	goto	u1061
  1242  042E  2C30               	goto	u1060
  1243  042F                     u1061:
  1244  042F  2C08               	goto	l1518
  1245  0430                     u1060:
  1246  0430                     l55:
  1247  0430  0008               	return
  1248  0431                     __end_of_LcdMsgPrint:
  1249                           
  1250                           	psect	text6
  1251  035A                     __ptext6:	
  1252 ;; *************** function _LcdDataWrite *****************
  1253 ;; Defined at:
  1254 ;;		line 61 in file "./lcd.h"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  data            1    wreg     unsigned char 
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;  data            1    2[BANK0 ] unsigned char 
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2, status,0, btemp+1
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1268 ;;      Params:         0       0       0       0       0
  1269 ;;      Locals:         0       1       0       0       0
  1270 ;;      Temps:          0       2       0       0       0
  1271 ;;      Totals:         0       3       0       0       0
  1272 ;;Total ram usage:        3 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    2
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_LcdMsgPrint
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           
  1283                           ;psect for function _LcdDataWrite
  1284  035A                     _LcdDataWrite:
  1285                           
  1286                           ;incstack = 0
  1287                           ; Regs used in _LcdDataWrite: [wreg+status,2+status,0+btemp+1]
  1288                           ;LcdDataWrite@data stored from wreg
  1289  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1290  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1291  035C  00CF               	movwf	LcdDataWrite@data
  1292  035D                     l1382:
  1293                           
  1294                           ;./lcd.h: 61:     void LcdDataWrite(char data);./lcd.h: 62:     {;./lcd.h: 63:         P
      +                          ORTD = (data & 0xF0);
  1295  035D  084F               	movf	LcdDataWrite@data,w
  1296  035E  39F0               	andlw	240
  1297  035F  0088               	movwf	8	;volatile
  1298  0360                     l1384:
  1299                           
  1300                           ;./lcd.h: 64:         PORTD |= (1<<0);
  1301  0360  1408               	bsf	8,0	;volatile
  1302  0361                     l1386:
  1303                           
  1304                           ;./lcd.h: 65:         PORTD &= ~(1<<1);
  1305  0361  30FD               	movlw	253
  1306  0362  00FF               	movwf	btemp+1
  1307  0363  087F               	movf	btemp+1,w
  1308  0364  0588               	andwf	8,f	;volatile
  1309  0365                     l1388:
  1310                           
  1311                           ;./lcd.h: 66:         PORTD |= (1<<2);
  1312  0365  1508               	bsf	8,2	;volatile
  1313  0366                     l1390:
  1314                           
  1315                           ;./lcd.h: 67:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1316  0366  3041               	movlw	65
  1317  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0369  00CE               	movwf	??_LcdDataWrite+1
  1320  036A  30ED               	movlw	237
  1321  036B  00CD               	movwf	??_LcdDataWrite
  1322  036C                     u1137:
  1323  036C  0BCD               	decfsz	??_LcdDataWrite,f
  1324  036D  2B6C               	goto	u1137
  1325  036E  0BCE               	decfsz	??_LcdDataWrite+1,f
  1326  036F  2B6C               	goto	u1137
  1327  0370  2B71               	nop2
  1328  0371                     l1392:
  1329                           
  1330                           ;./lcd.h: 68:         PORTD &= ~(1<<2);
  1331  0371  30FB               	movlw	251
  1332  0372  00FF               	movwf	btemp+1
  1333  0373  087F               	movf	btemp+1,w
  1334  0374  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0375  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0376  0588               	andwf	8,f	;volatile
  1337  0377                     l1394:
  1338                           
  1339                           ;./lcd.h: 70:         PORTD = ((data<<4) & 0xF0);
  1340  0377  084F               	movf	LcdDataWrite@data,w
  1341  0378  00CD               	movwf	??_LcdDataWrite
  1342  0379  3003               	movlw	3
  1343  037A                     u845:
  1344  037A  1003               	clrc
  1345  037B  0DCD               	rlf	??_LcdDataWrite,f
  1346  037C  3EFF               	addlw	-1
  1347  037D  1D03               	skipz
  1348  037E  2B7A               	goto	u845
  1349  037F  1003               	clrc
  1350  0380  0D4D               	rlf	??_LcdDataWrite,w
  1351  0381  39F0               	andlw	240
  1352  0382  0088               	movwf	8	;volatile
  1353  0383                     l1396:
  1354                           
  1355                           ;./lcd.h: 71:         PORTD |= (1<<0);
  1356  0383  1408               	bsf	8,0	;volatile
  1357  0384                     l1398:
  1358                           
  1359                           ;./lcd.h: 72:         PORTD &= ~(1<<1);
  1360  0384  30FD               	movlw	253
  1361  0385  00FF               	movwf	btemp+1
  1362  0386  087F               	movf	btemp+1,w
  1363  0387  0588               	andwf	8,f	;volatile
  1364  0388                     l1400:
  1365                           
  1366                           ;./lcd.h: 73:         PORTD |= (1<<2);
  1367  0388  1508               	bsf	8,2	;volatile
  1368  0389                     l1402:
  1369                           
  1370                           ;./lcd.h: 74:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1371  0389  3041               	movlw	65
  1372  038A  1283               	bcf	3,5	;RP0=0, select bank0
  1373  038B  1303               	bcf	3,6	;RP1=0, select bank0
  1374  038C  00CE               	movwf	??_LcdDataWrite+1
  1375  038D  30ED               	movlw	237
  1376  038E  00CD               	movwf	??_LcdDataWrite
  1377  038F                     u1147:
  1378  038F  0BCD               	decfsz	??_LcdDataWrite,f
  1379  0390  2B8F               	goto	u1147
  1380  0391  0BCE               	decfsz	??_LcdDataWrite+1,f
  1381  0392  2B8F               	goto	u1147
  1382  0393  2B94               	nop2
  1383  0394                     l1404:
  1384                           
  1385                           ;./lcd.h: 75:         PORTD &= ~(1<<2);
  1386  0394  30FB               	movlw	251
  1387  0395  00FF               	movwf	btemp+1
  1388  0396  087F               	movf	btemp+1,w
  1389  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1390  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1391  0399  0588               	andwf	8,f	;volatile
  1392  039A                     l49:
  1393  039A  0008               	return
  1394  039B                     __end_of_LcdDataWrite:
  1395                           
  1396                           	psect	text7
  1397  0476                     __ptext7:	
  1398 ;; *************** function _LcdInit *****************
  1399 ;; Defined at:
  1400 ;;		line 50 in file "./lcd.h"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;		None
  1403 ;; Auto vars:     Size  Location     Type
  1404 ;;		None
  1405 ;; Return value:  Size  Location     Type
  1406 ;;                  1    wreg      void 
  1407 ;; Registers used:
  1408 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1409 ;; Tracked objects:
  1410 ;;		On entry : 0/0
  1411 ;;		On exit  : 0/0
  1412 ;;		Unchanged: 0/0
  1413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1414 ;;      Params:         0       0       0       0       0
  1415 ;;      Locals:         0       0       0       0       0
  1416 ;;      Temps:          0       0       0       0       0
  1417 ;;      Totals:         0       0       0       0       0
  1418 ;;Total ram usage:        0 bytes
  1419 ;; Hardware stack levels used:    1
  1420 ;; Hardware stack levels required when called:    3
  1421 ;; This function calls:
  1422 ;;		_LcdCmdWrite
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           
  1429                           ;psect for function _LcdInit
  1430  0476                     _LcdInit:
  1431  0476                     l1506:	
  1432                           ;incstack = 0
  1433                           ; Regs used in _LcdInit: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1434                           
  1435                           
  1436                           ;./lcd.h: 52:         TRISD = 0x00;
  1437  0476  1683               	bsf	3,5	;RP0=1, select bank1
  1438  0477  1303               	bcf	3,6	;RP1=0, select bank1
  1439  0478  0188               	clrf	8	;volatile
  1440  0479                     l1508:
  1441                           
  1442                           ;./lcd.h: 53:         LcdCmdWrite(0x02);
  1443  0479  3002               	movlw	2
  1444  047A  120A  118A  228B  120A  118A  	fcall	_LcdCmdWrite
  1445  047F                     l1510:
  1446                           
  1447                           ;./lcd.h: 54:         LcdCmdWrite(0x28);
  1448  047F  3028               	movlw	40
  1449  0480  120A  118A  228B  120A  118A  	fcall	_LcdCmdWrite
  1450  0485                     l1512:
  1451                           
  1452                           ;./lcd.h: 55:         LcdCmdWrite(0x0E);
  1453  0485  300E               	movlw	14
  1454  0486  120A  118A  228B  120A  118A  	fcall	_LcdCmdWrite
  1455  048B                     l1514:
  1456                           
  1457                           ;./lcd.h: 56:         LcdCmdWrite(0x01);
  1458  048B  3001               	movlw	1
  1459  048C  120A  118A  228B  120A  118A  	fcall	_LcdCmdWrite
  1460  0491                     l46:
  1461  0491  0008               	return
  1462  0492                     __end_of_LcdInit:
  1463                           
  1464                           	psect	text8
  1465  028B                     __ptext8:	
  1466 ;; *************** function _LcdCmdWrite *****************
  1467 ;; Defined at:
  1468 ;;		line 32 in file "./lcd.h"
  1469 ;; Parameters:    Size  Location     Type
  1470 ;;  cmd             1    wreg     unsigned char 
  1471 ;; Auto vars:     Size  Location     Type
  1472 ;;  cmd             1    2[BANK0 ] unsigned char 
  1473 ;; Return value:  Size  Location     Type
  1474 ;;                  1    wreg      void 
  1475 ;; Registers used:
  1476 ;;		wreg, status,2, status,0, btemp+1
  1477 ;; Tracked objects:
  1478 ;;		On entry : 0/0
  1479 ;;		On exit  : 0/0
  1480 ;;		Unchanged: 0/0
  1481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1482 ;;      Params:         0       0       0       0       0
  1483 ;;      Locals:         0       1       0       0       0
  1484 ;;      Temps:          0       2       0       0       0
  1485 ;;      Totals:         0       3       0       0       0
  1486 ;;Total ram usage:        3 bytes
  1487 ;; Hardware stack levels used:    1
  1488 ;; Hardware stack levels required when called:    2
  1489 ;; This function calls:
  1490 ;;		Nothing
  1491 ;; This function is called by:
  1492 ;;		_LcdInit
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _LcdCmdWrite
  1499  028B                     _LcdCmdWrite:
  1500                           
  1501                           ;incstack = 0
  1502                           ; Regs used in _LcdCmdWrite: [wreg+status,2+status,0+btemp+1]
  1503                           ;LcdCmdWrite@cmd stored from wreg
  1504  028B  1283               	bcf	3,5	;RP0=0, select bank0
  1505  028C  1303               	bcf	3,6	;RP1=0, select bank0
  1506  028D  00CF               	movwf	LcdCmdWrite@cmd
  1507  028E                     l1358:
  1508                           
  1509                           ;./lcd.h: 32:     void LcdCmdWrite(char cmd);./lcd.h: 33:     {;./lcd.h: 34:         POR
      +                          TD = (cmd & 0xF0);
  1510  028E  084F               	movf	LcdCmdWrite@cmd,w
  1511  028F  39F0               	andlw	240
  1512  0290  0088               	movwf	8	;volatile
  1513  0291                     l1360:
  1514                           
  1515                           ;./lcd.h: 35:         PORTD &= ~(1<<0);
  1516  0291  30FE               	movlw	254
  1517  0292  00FF               	movwf	btemp+1
  1518  0293  087F               	movf	btemp+1,w
  1519  0294  0588               	andwf	8,f	;volatile
  1520  0295                     l1362:
  1521                           
  1522                           ;./lcd.h: 36:         PORTD &= ~(1<<1);
  1523  0295  30FD               	movlw	253
  1524  0296  00FF               	movwf	btemp+1
  1525  0297  087F               	movf	btemp+1,w
  1526  0298  0588               	andwf	8,f	;volatile
  1527  0299                     l1364:
  1528                           
  1529                           ;./lcd.h: 37:         PORTD |= (1<<2);
  1530  0299  1508               	bsf	8,2	;volatile
  1531  029A                     l1366:
  1532                           
  1533                           ;./lcd.h: 38:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1534  029A  3041               	movlw	65
  1535  029B  1283               	bcf	3,5	;RP0=0, select bank0
  1536  029C  1303               	bcf	3,6	;RP1=0, select bank0
  1537  029D  00CE               	movwf	??_LcdCmdWrite+1
  1538  029E  30ED               	movlw	237
  1539  029F  00CD               	movwf	??_LcdCmdWrite
  1540  02A0                     u1157:
  1541  02A0  0BCD               	decfsz	??_LcdCmdWrite,f
  1542  02A1  2AA0               	goto	u1157
  1543  02A2  0BCE               	decfsz	??_LcdCmdWrite+1,f
  1544  02A3  2AA0               	goto	u1157
  1545  02A4  2AA5               	nop2
  1546  02A5                     l1368:
  1547                           
  1548                           ;./lcd.h: 39:         PORTD &= ~(1<<2);
  1549  02A5  30FB               	movlw	251
  1550  02A6  00FF               	movwf	btemp+1
  1551  02A7  087F               	movf	btemp+1,w
  1552  02A8  1283               	bcf	3,5	;RP0=0, select bank0
  1553  02A9  1303               	bcf	3,6	;RP1=0, select bank0
  1554  02AA  0588               	andwf	8,f	;volatile
  1555  02AB                     l1370:
  1556                           
  1557                           ;./lcd.h: 41:         PORTD = ((cmd<<4) & 0xF0);
  1558  02AB  084F               	movf	LcdCmdWrite@cmd,w
  1559  02AC  00CD               	movwf	??_LcdCmdWrite
  1560  02AD  3003               	movlw	3
  1561  02AE                     u835:
  1562  02AE  1003               	clrc
  1563  02AF  0DCD               	rlf	??_LcdCmdWrite,f
  1564  02B0  3EFF               	addlw	-1
  1565  02B1  1D03               	skipz
  1566  02B2  2AAE               	goto	u835
  1567  02B3  1003               	clrc
  1568  02B4  0D4D               	rlf	??_LcdCmdWrite,w
  1569  02B5  39F0               	andlw	240
  1570  02B6  0088               	movwf	8	;volatile
  1571  02B7                     l1372:
  1572                           
  1573                           ;./lcd.h: 42:         PORTD &= ~(1<<0);
  1574  02B7  30FE               	movlw	254
  1575  02B8  00FF               	movwf	btemp+1
  1576  02B9  087F               	movf	btemp+1,w
  1577  02BA  0588               	andwf	8,f	;volatile
  1578  02BB                     l1374:
  1579                           
  1580                           ;./lcd.h: 43:         PORTD &= ~(1<<1);
  1581  02BB  30FD               	movlw	253
  1582  02BC  00FF               	movwf	btemp+1
  1583  02BD  087F               	movf	btemp+1,w
  1584  02BE  0588               	andwf	8,f	;volatile
  1585  02BF                     l1376:
  1586                           
  1587                           ;./lcd.h: 44:         PORTD |= (1<<2);
  1588  02BF  1508               	bsf	8,2	;volatile
  1589  02C0                     l1378:
  1590                           
  1591                           ;./lcd.h: 45:         _delay((unsigned long)((10)*(20000000/4000.0)));
  1592  02C0  3041               	movlw	65
  1593  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1594  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1595  02C3  00CE               	movwf	??_LcdCmdWrite+1
  1596  02C4  30ED               	movlw	237
  1597  02C5  00CD               	movwf	??_LcdCmdWrite
  1598  02C6                     u1167:
  1599  02C6  0BCD               	decfsz	??_LcdCmdWrite,f
  1600  02C7  2AC6               	goto	u1167
  1601  02C8  0BCE               	decfsz	??_LcdCmdWrite+1,f
  1602  02C9  2AC6               	goto	u1167
  1603  02CA  2ACB               	nop2
  1604  02CB                     l1380:
  1605                           
  1606                           ;./lcd.h: 46:         PORTD &= ~(1<<2);
  1607  02CB  30FB               	movlw	251
  1608  02CC  00FF               	movwf	btemp+1
  1609  02CD  087F               	movf	btemp+1,w
  1610  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  1611  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  1612  02D0  0588               	andwf	8,f	;volatile
  1613  02D1                     l43:
  1614  02D1  0008               	return
  1615  02D2                     __end_of_LcdCmdWrite:
  1616                           
  1617                           	psect	text9
  1618  003E                     __ptext9:	
  1619 ;; *************** function _DhtUpdateData *****************
  1620 ;; Defined at:
  1621 ;;		line 61 in file "./dht11.h"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;		None
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;		None
  1626 ;; Return value:  Size  Location     Type
  1627 ;;		None               void
  1628 ;; Registers used:
  1629 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1630 ;; Tracked objects:
  1631 ;;		On entry : 0/0
  1632 ;;		On exit  : 0/0
  1633 ;;		Unchanged: 0/0
  1634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1635 ;;      Params:         0       0       0       0       0
  1636 ;;      Locals:         0       0       0       0       0
  1637 ;;      Temps:          0      10       0       0       0
  1638 ;;      Totals:         0      10       0       0       0
  1639 ;;Total ram usage:       10 bytes
  1640 ;; Hardware stack levels used:    1
  1641 ;; Hardware stack levels required when called:    3
  1642 ;; This function calls:
  1643 ;;		_DhtCheckResponse
  1644 ;;		_DhtReadData
  1645 ;;		_DhtStartSignal
  1646 ;;		___awdiv
  1647 ;;		___awmod
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           
  1654                           ;psect for function _DhtUpdateData
  1655  003E                     _DhtUpdateData:
  1656  003E                     l1524:	
  1657                           ;incstack = 0
  1658                           ; Regs used in _DhtUpdateData: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1659                           
  1660                           
  1661                           ;./dht11.h: 63:         DhtStartSignal();
  1662  003E  120A  118A  2458  120A  118A  	fcall	_DhtStartSignal
  1663                           
  1664                           ;./dht11.h: 64:         DhtCheckResponse();
  1665  0043  120A  118A  2431  120A  118A  	fcall	_DhtCheckResponse
  1666  0048                     l1526:
  1667                           
  1668                           ;./dht11.h: 66:         rh_byte1 = DhtReadData();
  1669  0048  120A  118A  22D2  120A  118A  	fcall	_DhtReadData
  1670  004D  00FF               	movwf	btemp+1
  1671  004E  087F               	movf	btemp+1,w
  1672  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1673  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1674  0051  00E4               	movwf	_rh_byte1
  1675  0052                     l1528:
  1676                           
  1677                           ;./dht11.h: 67:         rh_byte2 = DhtReadData();
  1678  0052  120A  118A  22D2  120A  118A  	fcall	_DhtReadData
  1679  0057  00FF               	movwf	btemp+1
  1680  0058  087F               	movf	btemp+1,w
  1681  0059  1283               	bcf	3,5	;RP0=0, select bank0
  1682  005A  1303               	bcf	3,6	;RP1=0, select bank0
  1683  005B  00E3               	movwf	_rh_byte2
  1684  005C                     l1530:
  1685                           
  1686                           ;./dht11.h: 68:         t_byte1 = DhtReadData();
  1687  005C  120A  118A  22D2  120A  118A  	fcall	_DhtReadData
  1688  0061  00FF               	movwf	btemp+1
  1689  0062  087F               	movf	btemp+1,w
  1690  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1692  0065  00E6               	movwf	_t_byte1
  1693  0066                     l1532:
  1694                           
  1695                           ;./dht11.h: 69:         t_byte2 = DhtReadData();
  1696  0066  120A  118A  22D2  120A  118A  	fcall	_DhtReadData
  1697  006B  00FF               	movwf	btemp+1
  1698  006C  087F               	movf	btemp+1,w
  1699  006D  1283               	bcf	3,5	;RP0=0, select bank0
  1700  006E  1303               	bcf	3,6	;RP1=0, select bank0
  1701  006F  00E5               	movwf	_t_byte2
  1702  0070                     l1534:
  1703                           
  1704                           ;./dht11.h: 70:         check_sum = DhtReadData();
  1705  0070  120A  118A  22D2  120A  118A  	fcall	_DhtReadData
  1706  0075  00FF               	movwf	btemp+1
  1707  0076  087F               	movf	btemp+1,w
  1708  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1709  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1710  0079  00E2               	movwf	_check_sum
  1711  007A                     l1536:
  1712                           
  1713                           ;./dht11.h: 72:         if(check_sum == ((rh_byte1 + rh_byte2 + t_byte1 + t_byte2) & 0xF
      +                          F))
  1714  007A  0864               	movf	_rh_byte1,w
  1715  007B  0763               	addwf	_rh_byte2,w
  1716  007C  00D5               	movwf	??_DhtUpdateData
  1717  007D  01D6               	clrf	??_DhtUpdateData+1
  1718  007E  0DD6               	rlf	??_DhtUpdateData+1,f
  1719  007F  0866               	movf	_t_byte1,w
  1720  0080  0755               	addwf	??_DhtUpdateData,w
  1721  0081  00D7               	movwf	??_DhtUpdateData+2
  1722  0082  3000               	movlw	0
  1723  0083  1803               	skipnc
  1724  0084  3001               	movlw	1
  1725  0085  0756               	addwf	??_DhtUpdateData+1,w
  1726  0086  00D8               	movwf	??_DhtUpdateData+3
  1727  0087  0865               	movf	_t_byte2,w
  1728  0088  0757               	addwf	??_DhtUpdateData+2,w
  1729  0089  00D9               	movwf	??_DhtUpdateData+4
  1730  008A  3000               	movlw	0
  1731  008B  1803               	skipnc
  1732  008C  3001               	movlw	1
  1733  008D  0758               	addwf	??_DhtUpdateData+3,w
  1734  008E  00DA               	movwf	??_DhtUpdateData+5
  1735  008F  30FF               	movlw	255
  1736  0090  0559               	andwf	??_DhtUpdateData+4,w
  1737  0091  00DB               	movwf	??_DhtUpdateData+6
  1738  0092  3000               	movlw	0
  1739  0093  055A               	andwf	??_DhtUpdateData+5,w
  1740  0094  00DC               	movwf	??_DhtUpdateData+7
  1741  0095  0862               	movf	_check_sum,w
  1742  0096  00DD               	movwf	??_DhtUpdateData+8
  1743  0097  01DE               	clrf	??_DhtUpdateData+9
  1744  0098  085C               	movf	??_DhtUpdateData+7,w
  1745  0099  065E               	xorwf	??_DhtUpdateData+9,w
  1746  009A  1D03               	skipz
  1747  009B  289E               	goto	u1075
  1748  009C  085B               	movf	??_DhtUpdateData+6,w
  1749  009D  065D               	xorwf	??_DhtUpdateData+8,w
  1750  009E                     u1075:
  1751  009E  1D03               	skipz
  1752  009F  28A1               	goto	u1071
  1753  00A0  28A2               	goto	u1070
  1754  00A1                     u1071:
  1755  00A1  292E               	goto	l1544
  1756  00A2                     u1070:
  1757  00A2                     l1538:
  1758                           
  1759                           ;./dht11.h: 73:         {;./dht11.h: 74:             temp[7] = t_byte1 / 10 + 48;
  1760  00A2  300A               	movlw	10
  1761  00A3  00CD               	movwf	___awdiv@divisor
  1762  00A4  3000               	movlw	0
  1763  00A5  00CE               	movwf	___awdiv@divisor+1
  1764  00A6  0866               	movf	_t_byte1,w
  1765  00A7  00D5               	movwf	??_DhtUpdateData
  1766  00A8  01D6               	clrf	??_DhtUpdateData+1
  1767  00A9  0855               	movf	??_DhtUpdateData,w
  1768  00AA  00CF               	movwf	___awdiv@dividend
  1769  00AB  0856               	movf	??_DhtUpdateData+1,w
  1770  00AC  00D0               	movwf	___awdiv@dividend+1
  1771  00AD  120A  118A  21C7  120A  118A  	fcall	___awdiv
  1772  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1773  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1774  00B4  084D               	movf	?___awdiv,w
  1775  00B5  3E30               	addlw	48
  1776  00B6  00FF               	movwf	btemp+1
  1777  00B7  087F               	movf	btemp+1,w
  1778  00B8  00C6               	movwf	_temp+7
  1779                           
  1780                           ;./dht11.h: 75:             temp[8] = t_byte1 % 10 + 48;
  1781  00B9  300A               	movlw	10
  1782  00BA  00CD               	movwf	___awmod@divisor
  1783  00BB  3000               	movlw	0
  1784  00BC  00CE               	movwf	___awmod@divisor+1
  1785  00BD  0866               	movf	_t_byte1,w
  1786  00BE  00D5               	movwf	??_DhtUpdateData
  1787  00BF  01D6               	clrf	??_DhtUpdateData+1
  1788  00C0  0855               	movf	??_DhtUpdateData,w
  1789  00C1  00CF               	movwf	___awmod@dividend
  1790  00C2  0856               	movf	??_DhtUpdateData+1,w
  1791  00C3  00D0               	movwf	___awmod@dividend+1
  1792  00C4  120A  118A  2230  120A  118A  	fcall	___awmod
  1793  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  1794  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  1795  00CB  084D               	movf	?___awmod,w
  1796  00CC  3E30               	addlw	48
  1797  00CD  00FF               	movwf	btemp+1
  1798  00CE  087F               	movf	btemp+1,w
  1799  00CF  00C7               	movwf	_temp+8
  1800                           
  1801                           ;./dht11.h: 76:             temp[10] = t_byte2 / 10 + 48;
  1802  00D0  300A               	movlw	10
  1803  00D1  00CD               	movwf	___awdiv@divisor
  1804  00D2  3000               	movlw	0
  1805  00D3  00CE               	movwf	___awdiv@divisor+1
  1806  00D4  0865               	movf	_t_byte2,w
  1807  00D5  00D5               	movwf	??_DhtUpdateData
  1808  00D6  01D6               	clrf	??_DhtUpdateData+1
  1809  00D7  0855               	movf	??_DhtUpdateData,w
  1810  00D8  00CF               	movwf	___awdiv@dividend
  1811  00D9  0856               	movf	??_DhtUpdateData+1,w
  1812  00DA  00D0               	movwf	___awdiv@dividend+1
  1813  00DB  120A  118A  21C7  120A  118A  	fcall	___awdiv
  1814  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1815  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1816  00E2  084D               	movf	?___awdiv,w
  1817  00E3  3E30               	addlw	48
  1818  00E4  00FF               	movwf	btemp+1
  1819  00E5  087F               	movf	btemp+1,w
  1820  00E6  00C9               	movwf	_temp+10
  1821                           
  1822                           ;./dht11.h: 78:             humi[7] = rh_byte1 / 10 + 48;
  1823  00E7  300A               	movlw	10
  1824  00E8  00CD               	movwf	___awdiv@divisor
  1825  00E9  3000               	movlw	0
  1826  00EA  00CE               	movwf	___awdiv@divisor+1
  1827  00EB  0864               	movf	_rh_byte1,w
  1828  00EC  00D5               	movwf	??_DhtUpdateData
  1829  00ED  01D6               	clrf	??_DhtUpdateData+1
  1830  00EE  0855               	movf	??_DhtUpdateData,w
  1831  00EF  00CF               	movwf	___awdiv@dividend
  1832  00F0  0856               	movf	??_DhtUpdateData+1,w
  1833  00F1  00D0               	movwf	___awdiv@dividend+1
  1834  00F2  120A  118A  21C7  120A  118A  	fcall	___awdiv
  1835  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1836  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1837  00F9  084D               	movf	?___awdiv,w
  1838  00FA  3E30               	addlw	48
  1839  00FB  00FF               	movwf	btemp+1
  1840  00FC  087F               	movf	btemp+1,w
  1841  00FD  00B8               	movwf	_humi+7
  1842                           
  1843                           ;./dht11.h: 79:             humi[8] = rh_byte1 % 10 + 48;
  1844  00FE  300A               	movlw	10
  1845  00FF  00CD               	movwf	___awmod@divisor
  1846  0100  3000               	movlw	0
  1847  0101  00CE               	movwf	___awmod@divisor+1
  1848  0102  0864               	movf	_rh_byte1,w
  1849  0103  00D5               	movwf	??_DhtUpdateData
  1850  0104  01D6               	clrf	??_DhtUpdateData+1
  1851  0105  0855               	movf	??_DhtUpdateData,w
  1852  0106  00CF               	movwf	___awmod@dividend
  1853  0107  0856               	movf	??_DhtUpdateData+1,w
  1854  0108  00D0               	movwf	___awmod@dividend+1
  1855  0109  120A  118A  2230  120A  118A  	fcall	___awmod
  1856  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1857  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1858  0110  084D               	movf	?___awmod,w
  1859  0111  3E30               	addlw	48
  1860  0112  00FF               	movwf	btemp+1
  1861  0113  087F               	movf	btemp+1,w
  1862  0114  00B9               	movwf	_humi+8
  1863                           
  1864                           ;./dht11.h: 80:             humi[10] = rh_byte2 / 10 + 48;
  1865  0115  300A               	movlw	10
  1866  0116  00CD               	movwf	___awdiv@divisor
  1867  0117  3000               	movlw	0
  1868  0118  00CE               	movwf	___awdiv@divisor+1
  1869  0119  0863               	movf	_rh_byte2,w
  1870  011A  00D5               	movwf	??_DhtUpdateData
  1871  011B  01D6               	clrf	??_DhtUpdateData+1
  1872  011C  0855               	movf	??_DhtUpdateData,w
  1873  011D  00CF               	movwf	___awdiv@dividend
  1874  011E  0856               	movf	??_DhtUpdateData+1,w
  1875  011F  00D0               	movwf	___awdiv@dividend+1
  1876  0120  120A  118A  21C7  120A  118A  	fcall	___awdiv
  1877  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0127  084D               	movf	?___awdiv,w
  1880  0128  3E30               	addlw	48
  1881  0129  00FF               	movwf	btemp+1
  1882  012A  087F               	movf	btemp+1,w
  1883  012B  00BB               	movwf	_humi+10
  1884  012C                     l1540:
  1885                           
  1886                           ;./dht11.h: 82:             return 1;
  1887  012C  1403               	setc
  1888  012D  292F               	goto	l101
  1889  012E                     l1544:
  1890                           
  1891                           ;./dht11.h: 84:         return 0;
  1892  012E  1003               	clrc
  1893  012F                     l101:
  1894  012F  0008               	return
  1895  0130                     __end_of_DhtUpdateData:
  1896                           
  1897                           	psect	text10
  1898  0230                     __ptext10:	
  1899 ;; *************** function ___awmod *****************
  1900 ;; Defined at:
  1901 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  divisor         2    0[BANK0 ] int 
  1904 ;;  dividend        2    2[BANK0 ] int 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  sign            1    5[BANK0 ] unsigned char 
  1907 ;;  counter         1    4[BANK0 ] unsigned char 
  1908 ;; Return value:  Size  Location     Type
  1909 ;;                  2    0[BANK0 ] int 
  1910 ;; Registers used:
  1911 ;;		wreg, status,2, status,0, btemp+1
  1912 ;; Tracked objects:
  1913 ;;		On entry : 0/0
  1914 ;;		On exit  : 0/0
  1915 ;;		Unchanged: 0/0
  1916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1917 ;;      Params:         0       4       0       0       0
  1918 ;;      Locals:         0       2       0       0       0
  1919 ;;      Temps:          0       0       0       0       0
  1920 ;;      Totals:         0       6       0       0       0
  1921 ;;Total ram usage:        6 bytes
  1922 ;; Hardware stack levels used:    1
  1923 ;; Hardware stack levels required when called:    2
  1924 ;; This function calls:
  1925 ;;		Nothing
  1926 ;; This function is called by:
  1927 ;;		_DhtUpdateData
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           
  1932                           ;psect for function ___awmod
  1933  0230                     ___awmod:
  1934  0230                     l1468:	
  1935                           ;incstack = 0
  1936                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  1937                           
  1938  0230  1283               	bcf	3,5	;RP0=0, select bank0
  1939  0231  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0232  01D2               	clrf	___awmod@sign
  1941  0233                     l1470:
  1942  0233  1FD0               	btfss	___awmod@dividend+1,7
  1943  0234  2A36               	goto	u971
  1944  0235  2A37               	goto	u970
  1945  0236                     u971:
  1946  0236  2A3E               	goto	l1476
  1947  0237                     u970:
  1948  0237                     l1472:
  1949  0237  09CF               	comf	___awmod@dividend,f
  1950  0238  09D0               	comf	___awmod@dividend+1,f
  1951  0239  0ACF               	incf	___awmod@dividend,f
  1952  023A  1903               	skipnz
  1953  023B  0AD0               	incf	___awmod@dividend+1,f
  1954  023C                     l1474:
  1955  023C  01D2               	clrf	___awmod@sign
  1956  023D  0AD2               	incf	___awmod@sign,f
  1957  023E                     l1476:
  1958  023E  1FCE               	btfss	___awmod@divisor+1,7
  1959  023F  2A41               	goto	u981
  1960  0240  2A42               	goto	u980
  1961  0241                     u981:
  1962  0241  2A47               	goto	l1480
  1963  0242                     u980:
  1964  0242                     l1478:
  1965  0242  09CD               	comf	___awmod@divisor,f
  1966  0243  09CE               	comf	___awmod@divisor+1,f
  1967  0244  0ACD               	incf	___awmod@divisor,f
  1968  0245  1903               	skipnz
  1969  0246  0ACE               	incf	___awmod@divisor+1,f
  1970  0247                     l1480:
  1971  0247  084D               	movf	___awmod@divisor,w
  1972  0248  044E               	iorwf	___awmod@divisor+1,w
  1973  0249  1903               	btfsc	3,2
  1974  024A  2A4C               	goto	u991
  1975  024B  2A4D               	goto	u990
  1976  024C                     u991:
  1977  024C  2A7C               	goto	l1498
  1978  024D                     u990:
  1979  024D                     l1482:
  1980  024D  01D1               	clrf	___awmod@counter
  1981  024E  0AD1               	incf	___awmod@counter,f
  1982  024F  2A5B               	goto	l1488
  1983  0250                     l1484:
  1984  0250  3001               	movlw	1
  1985  0251                     u1005:
  1986  0251  1003               	clrc
  1987  0252  0DCD               	rlf	___awmod@divisor,f
  1988  0253  0DCE               	rlf	___awmod@divisor+1,f
  1989  0254  3EFF               	addlw	-1
  1990  0255  1D03               	skipz
  1991  0256  2A51               	goto	u1005
  1992  0257                     l1486:
  1993  0257  3001               	movlw	1
  1994  0258  00FF               	movwf	btemp+1
  1995  0259  087F               	movf	btemp+1,w
  1996  025A  07D1               	addwf	___awmod@counter,f
  1997  025B                     l1488:
  1998  025B  1FCE               	btfss	___awmod@divisor+1,7
  1999  025C  2A5E               	goto	u1011
  2000  025D  2A5F               	goto	u1010
  2001  025E                     u1011:
  2002  025E  2A50               	goto	l1484
  2003  025F                     u1010:
  2004  025F                     l1490:
  2005  025F  084E               	movf	___awmod@divisor+1,w
  2006  0260  0250               	subwf	___awmod@dividend+1,w
  2007  0261  1D03               	skipz
  2008  0262  2A65               	goto	u1025
  2009  0263  084D               	movf	___awmod@divisor,w
  2010  0264  024F               	subwf	___awmod@dividend,w
  2011  0265                     u1025:
  2012  0265  1C03               	skipc
  2013  0266  2A68               	goto	u1021
  2014  0267  2A69               	goto	u1020
  2015  0268                     u1021:
  2016  0268  2A6F               	goto	l1494
  2017  0269                     u1020:
  2018  0269                     l1492:
  2019  0269  084D               	movf	___awmod@divisor,w
  2020  026A  02CF               	subwf	___awmod@dividend,f
  2021  026B  084E               	movf	___awmod@divisor+1,w
  2022  026C  1C03               	skipc
  2023  026D  03D0               	decf	___awmod@dividend+1,f
  2024  026E  02D0               	subwf	___awmod@dividend+1,f
  2025  026F                     l1494:
  2026  026F  3001               	movlw	1
  2027  0270                     u1035:
  2028  0270  1003               	clrc
  2029  0271  0CCE               	rrf	___awmod@divisor+1,f
  2030  0272  0CCD               	rrf	___awmod@divisor,f
  2031  0273  3EFF               	addlw	-1
  2032  0274  1D03               	skipz
  2033  0275  2A70               	goto	u1035
  2034  0276                     l1496:
  2035  0276  3001               	movlw	1
  2036  0277  02D1               	subwf	___awmod@counter,f
  2037  0278  1D03               	btfss	3,2
  2038  0279  2A7B               	goto	u1041
  2039  027A  2A7C               	goto	u1040
  2040  027B                     u1041:
  2041  027B  2A5F               	goto	l1490
  2042  027C                     u1040:
  2043  027C                     l1498:
  2044  027C  0852               	movf	___awmod@sign,w
  2045  027D  1903               	btfsc	3,2
  2046  027E  2A80               	goto	u1051
  2047  027F  2A81               	goto	u1050
  2048  0280                     u1051:
  2049  0280  2A86               	goto	l1502
  2050  0281                     u1050:
  2051  0281                     l1500:
  2052  0281  09CF               	comf	___awmod@dividend,f
  2053  0282  09D0               	comf	___awmod@dividend+1,f
  2054  0283  0ACF               	incf	___awmod@dividend,f
  2055  0284  1903               	skipnz
  2056  0285  0AD0               	incf	___awmod@dividend+1,f
  2057  0286                     l1502:
  2058  0286  0850               	movf	___awmod@dividend+1,w
  2059  0287  00CE               	movwf	?___awmod+1
  2060  0288  084F               	movf	___awmod@dividend,w
  2061  0289  00CD               	movwf	?___awmod
  2062  028A                     l394:
  2063  028A  0008               	return
  2064  028B                     __end_of___awmod:
  2065                           
  2066                           	psect	text11
  2067  01C7                     __ptext11:	
  2068 ;; *************** function ___awdiv *****************
  2069 ;; Defined at:
  2070 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  divisor         2    0[BANK0 ] int 
  2073 ;;  dividend        2    2[BANK0 ] int 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  quotient        2    6[BANK0 ] int 
  2076 ;;  sign            1    5[BANK0 ] unsigned char 
  2077 ;;  counter         1    4[BANK0 ] unsigned char 
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  2    0[BANK0 ] int 
  2080 ;; Registers used:
  2081 ;;		wreg, status,2, status,0, btemp+1
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       4       0       0       0
  2088 ;;      Locals:         0       4       0       0       0
  2089 ;;      Temps:          0       0       0       0       0
  2090 ;;      Totals:         0       8       0       0       0
  2091 ;;Total ram usage:        8 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    2
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_DhtUpdateData
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           
  2102                           ;psect for function ___awdiv
  2103  01C7                     ___awdiv:
  2104  01C7                     l1156:	
  2105                           ;incstack = 0
  2106                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2107                           
  2108  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2109  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2110  01C9  01D2               	clrf	___awdiv@sign
  2111  01CA                     l1158:
  2112  01CA  1FCE               	btfss	___awdiv@divisor+1,7
  2113  01CB  29CD               	goto	u561
  2114  01CC  29CE               	goto	u560
  2115  01CD                     u561:
  2116  01CD  29D5               	goto	l1164
  2117  01CE                     u560:
  2118  01CE                     l1160:
  2119  01CE  09CD               	comf	___awdiv@divisor,f
  2120  01CF  09CE               	comf	___awdiv@divisor+1,f
  2121  01D0  0ACD               	incf	___awdiv@divisor,f
  2122  01D1  1903               	skipnz
  2123  01D2  0ACE               	incf	___awdiv@divisor+1,f
  2124  01D3                     l1162:
  2125  01D3  01D2               	clrf	___awdiv@sign
  2126  01D4  0AD2               	incf	___awdiv@sign,f
  2127  01D5                     l1164:
  2128  01D5  1FD0               	btfss	___awdiv@dividend+1,7
  2129  01D6  29D8               	goto	u571
  2130  01D7  29D9               	goto	u570
  2131  01D8                     u571:
  2132  01D8  29E2               	goto	l1170
  2133  01D9                     u570:
  2134  01D9                     l1166:
  2135  01D9  09CF               	comf	___awdiv@dividend,f
  2136  01DA  09D0               	comf	___awdiv@dividend+1,f
  2137  01DB  0ACF               	incf	___awdiv@dividend,f
  2138  01DC  1903               	skipnz
  2139  01DD  0AD0               	incf	___awdiv@dividend+1,f
  2140  01DE                     l1168:
  2141  01DE  3001               	movlw	1
  2142  01DF  00FF               	movwf	btemp+1
  2143  01E0  087F               	movf	btemp+1,w
  2144  01E1  06D2               	xorwf	___awdiv@sign,f
  2145  01E2                     l1170:
  2146  01E2  01D3               	clrf	___awdiv@quotient
  2147  01E3  01D4               	clrf	___awdiv@quotient+1
  2148  01E4                     l1172:
  2149  01E4  084D               	movf	___awdiv@divisor,w
  2150  01E5  044E               	iorwf	___awdiv@divisor+1,w
  2151  01E6  1903               	btfsc	3,2
  2152  01E7  29E9               	goto	u581
  2153  01E8  29EA               	goto	u580
  2154  01E9                     u581:
  2155  01E9  2A21               	goto	l1192
  2156  01EA                     u580:
  2157  01EA                     l1174:
  2158  01EA  01D1               	clrf	___awdiv@counter
  2159  01EB  0AD1               	incf	___awdiv@counter,f
  2160  01EC  29F8               	goto	l1180
  2161  01ED                     l1176:
  2162  01ED  3001               	movlw	1
  2163  01EE                     u595:
  2164  01EE  1003               	clrc
  2165  01EF  0DCD               	rlf	___awdiv@divisor,f
  2166  01F0  0DCE               	rlf	___awdiv@divisor+1,f
  2167  01F1  3EFF               	addlw	-1
  2168  01F2  1D03               	skipz
  2169  01F3  29EE               	goto	u595
  2170  01F4                     l1178:
  2171  01F4  3001               	movlw	1
  2172  01F5  00FF               	movwf	btemp+1
  2173  01F6  087F               	movf	btemp+1,w
  2174  01F7  07D1               	addwf	___awdiv@counter,f
  2175  01F8                     l1180:
  2176  01F8  1FCE               	btfss	___awdiv@divisor+1,7
  2177  01F9  29FB               	goto	u601
  2178  01FA  29FC               	goto	u600
  2179  01FB                     u601:
  2180  01FB  29ED               	goto	l1176
  2181  01FC                     u600:
  2182  01FC                     l1182:
  2183  01FC  3001               	movlw	1
  2184  01FD                     u615:
  2185  01FD  1003               	clrc
  2186  01FE  0DD3               	rlf	___awdiv@quotient,f
  2187  01FF  0DD4               	rlf	___awdiv@quotient+1,f
  2188  0200  3EFF               	addlw	-1
  2189  0201  1D03               	skipz
  2190  0202  29FD               	goto	u615
  2191  0203  084E               	movf	___awdiv@divisor+1,w
  2192  0204  0250               	subwf	___awdiv@dividend+1,w
  2193  0205  1D03               	skipz
  2194  0206  2A09               	goto	u625
  2195  0207  084D               	movf	___awdiv@divisor,w
  2196  0208  024F               	subwf	___awdiv@dividend,w
  2197  0209                     u625:
  2198  0209  1C03               	skipc
  2199  020A  2A0C               	goto	u621
  2200  020B  2A0D               	goto	u620
  2201  020C                     u621:
  2202  020C  2A14               	goto	l1188
  2203  020D                     u620:
  2204  020D                     l1184:
  2205  020D  084D               	movf	___awdiv@divisor,w
  2206  020E  02CF               	subwf	___awdiv@dividend,f
  2207  020F  084E               	movf	___awdiv@divisor+1,w
  2208  0210  1C03               	skipc
  2209  0211  03D0               	decf	___awdiv@dividend+1,f
  2210  0212  02D0               	subwf	___awdiv@dividend+1,f
  2211  0213                     l1186:
  2212  0213  1453               	bsf	___awdiv@quotient,0
  2213  0214                     l1188:
  2214  0214  3001               	movlw	1
  2215  0215                     u635:
  2216  0215  1003               	clrc
  2217  0216  0CCE               	rrf	___awdiv@divisor+1,f
  2218  0217  0CCD               	rrf	___awdiv@divisor,f
  2219  0218  3EFF               	addlw	-1
  2220  0219  1D03               	skipz
  2221  021A  2A15               	goto	u635
  2222  021B                     l1190:
  2223  021B  3001               	movlw	1
  2224  021C  02D1               	subwf	___awdiv@counter,f
  2225  021D  1D03               	btfss	3,2
  2226  021E  2A20               	goto	u641
  2227  021F  2A21               	goto	u640
  2228  0220                     u641:
  2229  0220  29FC               	goto	l1182
  2230  0221                     u640:
  2231  0221                     l1192:
  2232  0221  0852               	movf	___awdiv@sign,w
  2233  0222  1903               	btfsc	3,2
  2234  0223  2A25               	goto	u651
  2235  0224  2A26               	goto	u650
  2236  0225                     u651:
  2237  0225  2A2B               	goto	l1196
  2238  0226                     u650:
  2239  0226                     l1194:
  2240  0226  09D3               	comf	___awdiv@quotient,f
  2241  0227  09D4               	comf	___awdiv@quotient+1,f
  2242  0228  0AD3               	incf	___awdiv@quotient,f
  2243  0229  1903               	skipnz
  2244  022A  0AD4               	incf	___awdiv@quotient+1,f
  2245  022B                     l1196:
  2246  022B  0854               	movf	___awdiv@quotient+1,w
  2247  022C  00CE               	movwf	?___awdiv+1
  2248  022D  0853               	movf	___awdiv@quotient,w
  2249  022E  00CD               	movwf	?___awdiv
  2250  022F                     l381:
  2251  022F  0008               	return
  2252  0230                     __end_of___awdiv:
  2253                           
  2254                           	psect	text12
  2255  0458                     __ptext12:	
  2256 ;; *************** function _DhtStartSignal *****************
  2257 ;; Defined at:
  2258 ;;		line 24 in file "./dht11.h"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2272 ;;      Params:         0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0
  2274 ;;      Temps:          0       2       0       0       0
  2275 ;;      Totals:         0       2       0       0       0
  2276 ;;Total ram usage:        2 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    2
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_DhtUpdateData
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function _DhtStartSignal
  2288  0458                     _DhtStartSignal:
  2289  0458                     l1406:	
  2290                           ;incstack = 0
  2291                           ; Regs used in _DhtStartSignal: [wreg]
  2292                           
  2293                           
  2294                           ;./dht11.h: 26:         TRISB4 = 0;
  2295  0458  1683               	bsf	3,5	;RP0=1, select bank1
  2296  0459  1303               	bcf	3,6	;RP1=0, select bank1
  2297  045A  1206               	bcf	6,4	;volatile
  2298                           
  2299                           ;./dht11.h: 27:         RB4 = 0;
  2300  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2301  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2302  045D  1206               	bcf	6,4	;volatile
  2303  045E                     l1408:
  2304                           
  2305                           ;./dht11.h: 29:         _delay((unsigned long)((25)*(20000000/4000.0)));
  2306  045E  30A3               	movlw	163
  2307  045F  1283               	bcf	3,5	;RP0=0, select bank0
  2308  0460  1303               	bcf	3,6	;RP1=0, select bank0
  2309  0461  00CE               	movwf	??_DhtStartSignal+1
  2310  0462  3054               	movlw	84
  2311  0463  00CD               	movwf	??_DhtStartSignal
  2312  0464                     u1177:
  2313  0464  0BCD               	decfsz	??_DhtStartSignal,f
  2314  0465  2C64               	goto	u1177
  2315  0466  0BCE               	decfsz	??_DhtStartSignal+1,f
  2316  0467  2C64               	goto	u1177
  2317  0468  0000               	nop
  2318  0469                     l1410:
  2319                           
  2320                           ;./dht11.h: 30:         RB4 = 1;
  2321  0469  1283               	bcf	3,5	;RP0=0, select bank0
  2322  046A  1303               	bcf	3,6	;RP1=0, select bank0
  2323  046B  1606               	bsf	6,4	;volatile
  2324                           
  2325                           ;./dht11.h: 31:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  2326  046C  3031               	movlw	49
  2327  046D  1283               	bcf	3,5	;RP0=0, select bank0
  2328  046E  1303               	bcf	3,6	;RP1=0, select bank0
  2329  046F  00CD               	movwf	??_DhtStartSignal
  2330  0470                     u1187:
  2331  0470  0BCD               	decfsz	??_DhtStartSignal,f
  2332  0471  2C70               	goto	u1187
  2333  0472                     l1412:
  2334                           
  2335                           ;./dht11.h: 32:         TRISB4 = 1;
  2336  0472  1683               	bsf	3,5	;RP0=1, select bank1
  2337  0473  1303               	bcf	3,6	;RP1=0, select bank1
  2338  0474  1606               	bsf	6,4	;volatile
  2339  0475                     l72:
  2340  0475  0008               	return
  2341  0476                     __end_of_DhtStartSignal:
  2342                           
  2343                           	psect	text13
  2344  02D2                     __ptext13:	
  2345 ;; *************** function _DhtReadData *****************
  2346 ;; Defined at:
  2347 ;;		line 44 in file "./dht11.h"
  2348 ;; Parameters:    Size  Location     Type
  2349 ;;		None
  2350 ;; Auto vars:     Size  Location     Type
  2351 ;;  data            1    3[BANK0 ] unsigned char 
  2352 ;;  i               1    2[BANK0 ] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      unsigned char 
  2355 ;; Registers used:
  2356 ;;		wreg, status,2, status,0, btemp+1
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2362 ;;      Params:         0       0       0       0       0
  2363 ;;      Locals:         0       2       0       0       0
  2364 ;;      Temps:          0       2       0       0       0
  2365 ;;      Totals:         0       4       0       0       0
  2366 ;;Total ram usage:        4 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:    2
  2369 ;; This function calls:
  2370 ;;		Nothing
  2371 ;; This function is called by:
  2372 ;;		_DhtUpdateData
  2373 ;; This function uses a non-reentrant model
  2374 ;;
  2375                           
  2376                           
  2377                           ;psect for function _DhtReadData
  2378  02D2                     _DhtReadData:
  2379  02D2                     l1422:	
  2380                           ;incstack = 0
  2381                           ; Regs used in _DhtReadData: [wreg+status,2+status,0+btemp+1]
  2382                           
  2383                           
  2384                           ;./dht11.h: 46:         char i, data = 0;
  2385  02D2  1283               	bcf	3,5	;RP0=0, select bank0
  2386  02D3  1303               	bcf	3,6	;RP1=0, select bank0
  2387  02D4  01D0               	clrf	DhtReadData@data
  2388                           
  2389                           ;./dht11.h: 47:         for(i = 0; i < 8; i++)
  2390  02D5  01CF               	clrf	DhtReadData@i
  2391  02D6                     l1428:
  2392  02D6  1003               	clrc
  2393  02D7  1A06               	btfsc	6,4	;volatile
  2394  02D8  1403               	setc
  2395  02D9  3000               	movlw	0
  2396  02DA  1803               	skipnc
  2397  02DB  3001               	movlw	1
  2398  02DC  00CD               	movwf	??_DhtReadData
  2399  02DD  01CE               	clrf	??_DhtReadData+1
  2400  02DE  1C4D               	btfss	??_DhtReadData,0
  2401  02DF  2AE1               	goto	u881
  2402  02E0  2AE2               	goto	u880
  2403  02E1                     u881:
  2404  02E1  2AD6               	goto	l1428
  2405  02E2                     u880:
  2406  02E2                     l1430:
  2407                           
  2408                           ;./dht11.h: 50:             _delay((unsigned long)((30)*(20000000/4000000.0)));
  2409  02E2  3031               	movlw	49
  2410  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2411  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2412  02E5  00CD               	movwf	??_DhtReadData
  2413  02E6                     u1197:
  2414  02E6  0BCD               	decfsz	??_DhtReadData,f
  2415  02E7  2AE6               	goto	u1197
  2416  02E8                     l1432:
  2417                           
  2418                           ;./dht11.h: 51:             if(RB4 & 1)
  2419  02E8  1003               	clrc
  2420  02E9  1283               	bcf	3,5	;RP0=0, select bank0
  2421  02EA  1303               	bcf	3,6	;RP1=0, select bank0
  2422  02EB  1A06               	btfsc	6,4	;volatile
  2423  02EC  1403               	setc
  2424  02ED  3000               	movlw	0
  2425  02EE  1803               	skipnc
  2426  02EF  3001               	movlw	1
  2427  02F0  00CD               	movwf	??_DhtReadData
  2428  02F1  01CE               	clrf	??_DhtReadData+1
  2429  02F2  1C4D               	btfss	??_DhtReadData,0
  2430  02F3  2AF5               	goto	u891
  2431  02F4  2AF6               	goto	u890
  2432  02F5                     u891:
  2433  02F5  2AF9               	goto	l1436
  2434  02F6                     u890:
  2435  02F6                     l1434:
  2436                           
  2437                           ;./dht11.h: 52:                 data = ((data<<1) | 1);
  2438  02F6  1403               	setc
  2439  02F7  0DD0               	rlf	DhtReadData@data,f
  2440  02F8  2AFF               	goto	l1438
  2441  02F9                     l1436:
  2442                           
  2443                           ;./dht11.h: 54:                 data = (data<<1);
  2444  02F9  0850               	movf	DhtReadData@data,w
  2445  02FA  00CD               	movwf	??_DhtReadData
  2446  02FB  074D               	addwf	??_DhtReadData,w
  2447  02FC  00FF               	movwf	btemp+1
  2448  02FD  087F               	movf	btemp+1,w
  2449  02FE  00D0               	movwf	DhtReadData@data
  2450  02FF                     l1438:
  2451  02FF  1003               	clrc
  2452  0300  1A06               	btfsc	6,4	;volatile
  2453  0301  1403               	setc
  2454  0302  3000               	movlw	0
  2455  0303  1803               	skipnc
  2456  0304  3001               	movlw	1
  2457  0305  00CD               	movwf	??_DhtReadData
  2458  0306  01CE               	clrf	??_DhtReadData+1
  2459  0307  184D               	btfsc	??_DhtReadData,0
  2460  0308  2B0A               	goto	u901
  2461  0309  2B0B               	goto	u900
  2462  030A                     u901:
  2463  030A  2AFF               	goto	l1438
  2464  030B                     u900:
  2465  030B                     l1440:
  2466                           
  2467                           ;./dht11.h: 56:         }
  2468  030B  3001               	movlw	1
  2469  030C  00FF               	movwf	btemp+1
  2470  030D  087F               	movf	btemp+1,w
  2471  030E  07CF               	addwf	DhtReadData@i,f
  2472  030F                     l1442:
  2473  030F  3008               	movlw	8
  2474  0310  024F               	subwf	DhtReadData@i,w
  2475  0311  1C03               	skipc
  2476  0312  2B14               	goto	u911
  2477  0313  2B15               	goto	u910
  2478  0314                     u911:
  2479  0314  2AD6               	goto	l1428
  2480  0315                     u910:
  2481  0315                     l1444:
  2482                           
  2483                           ;./dht11.h: 57:         return data;
  2484  0315  0850               	movf	DhtReadData@data,w
  2485  0316                     l97:
  2486  0316  0008               	return
  2487  0317                     __end_of_DhtReadData:
  2488                           
  2489                           	psect	text14
  2490  0431                     __ptext14:	
  2491 ;; *************** function _DhtCheckResponse *****************
  2492 ;; Defined at:
  2493 ;;		line 36 in file "./dht11.h"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;		None
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;		None
  2498 ;; Return value:  Size  Location     Type
  2499 ;;                  1    wreg      void 
  2500 ;; Registers used:
  2501 ;;		wreg, status,0
  2502 ;; Tracked objects:
  2503 ;;		On entry : 0/0
  2504 ;;		On exit  : 0/0
  2505 ;;		Unchanged: 0/0
  2506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2507 ;;      Params:         0       0       0       0       0
  2508 ;;      Locals:         0       0       0       0       0
  2509 ;;      Temps:          0       2       0       0       0
  2510 ;;      Totals:         0       2       0       0       0
  2511 ;;Total ram usage:        2 bytes
  2512 ;; Hardware stack levels used:    1
  2513 ;; Hardware stack levels required when called:    2
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_DhtUpdateData
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           
  2522                           ;psect for function _DhtCheckResponse
  2523  0431                     _DhtCheckResponse:
  2524  0431                     l1414:	
  2525                           ;incstack = 0
  2526                           ; Regs used in _DhtCheckResponse: [wreg+status,0]
  2527                           
  2528  0431                     l1416:	
  2529                           ;./dht11.h: 38:         while(RB4 & 1);
  2530                           
  2531  0431  1003               	clrc
  2532  0432  1283               	bcf	3,5	;RP0=0, select bank0
  2533  0433  1303               	bcf	3,6	;RP1=0, select bank0
  2534  0434  1A06               	btfsc	6,4	;volatile
  2535  0435  1403               	setc
  2536  0436  3000               	movlw	0
  2537  0437  1803               	skipnc
  2538  0438  3001               	movlw	1
  2539  0439  00CD               	movwf	??_DhtCheckResponse
  2540  043A  01CE               	clrf	??_DhtCheckResponse+1
  2541  043B  184D               	btfsc	??_DhtCheckResponse,0
  2542  043C  2C3E               	goto	u851
  2543  043D  2C3F               	goto	u850
  2544  043E                     u851:
  2545  043E  2C31               	goto	l1416
  2546  043F                     u850:
  2547  043F                     l1418:
  2548  043F  1003               	clrc
  2549  0440  1A06               	btfsc	6,4	;volatile
  2550  0441  1403               	setc
  2551  0442  3000               	movlw	0
  2552  0443  1803               	skipnc
  2553  0444  3001               	movlw	1
  2554  0445  00CD               	movwf	??_DhtCheckResponse
  2555  0446  01CE               	clrf	??_DhtCheckResponse+1
  2556  0447  1C4D               	btfss	??_DhtCheckResponse,0
  2557  0448  2C4A               	goto	u861
  2558  0449  2C4B               	goto	u860
  2559  044A                     u861:
  2560  044A  2C3F               	goto	l1418
  2561  044B                     u860:
  2562  044B                     l1420:
  2563  044B  1003               	clrc
  2564  044C  1A06               	btfsc	6,4	;volatile
  2565  044D  1403               	setc
  2566  044E  3000               	movlw	0
  2567  044F  1803               	skipnc
  2568  0450  3001               	movlw	1
  2569  0451  00CD               	movwf	??_DhtCheckResponse
  2570  0452  01CE               	clrf	??_DhtCheckResponse+1
  2571  0453  184D               	btfsc	??_DhtCheckResponse,0
  2572  0454  2C56               	goto	u871
  2573  0455  2C57               	goto	u870
  2574  0456                     u871:
  2575  0456  2C4B               	goto	l1420
  2576  0457                     u870:
  2577  0457                     l84:
  2578  0457  0008               	return
  2579  0458                     __end_of_DhtCheckResponse:
  2580                           
  2581                           	psect	text15
  2582  04AB                     __ptext15:	
  2583 ;; *************** function _ISR *****************
  2584 ;; Defined at:
  2585 ;;		line 77 in file "main.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;		None
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;		None
  2590 ;; Return value:  Size  Location     Type
  2591 ;;                  1    wreg      void 
  2592 ;; Registers used:
  2593 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2594 ;; Tracked objects:
  2595 ;;		On entry : 0/0
  2596 ;;		On exit  : 0/0
  2597 ;;		Unchanged: 0/0
  2598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2599 ;;      Params:         0       0       0       0       0
  2600 ;;      Locals:         0       0       0       0       0
  2601 ;;      Temps:          3       0       0       0       0
  2602 ;;      Totals:         3       0       0       0       0
  2603 ;;Total ram usage:        3 bytes
  2604 ;; Hardware stack levels used:    1
  2605 ;; Hardware stack levels required when called:    1
  2606 ;; This function calls:
  2607 ;;		i1_LcdCmdWrite
  2608 ;; This function is called by:
  2609 ;;		Interrupt level 1
  2610 ;; This function uses a non-reentrant model
  2611 ;;
  2612                           
  2613                           
  2614                           ;psect for function _ISR
  2615  04AB                     _ISR:
  2616  04AB                     i1l1350:
  2617                           
  2618                           ;main.c: 79:     if(INTF == 1)
  2619  04AB  1C8B               	btfss	11,1	;volatile
  2620  04AC  2CAE               	goto	u82_21
  2621  04AD  2CAF               	goto	u82_20
  2622  04AE                     u82_21:
  2623  04AE  2CB8               	goto	i1l135
  2624  04AF                     u82_20:
  2625  04AF                     i1l1352:
  2626                           
  2627                           ;main.c: 80:     {;main.c: 81:         status = ~status;
  2628  04AF  3001               	movlw	(0+1) shl (_status& (0+7))
  2629  04B0  06F6               	xorwf	_status/(0+8),f
  2630  04B1                     i1l1354:
  2631                           
  2632                           ;main.c: 82:         LcdCmdWrite(0x01);
  2633  04B1  3001               	movlw	1
  2634  04B2  120A  118A  2317  120A  118A  	fcall	i1_LcdCmdWrite
  2635  04B7                     i1l1356:
  2636                           
  2637                           ;main.c: 83:         INTF = 0;
  2638  04B7  108B               	bcf	11,1	;volatile
  2639  04B8                     i1l135:
  2640  04B8  0875               	movf	??_ISR+2,w
  2641  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2642  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2643  04BB  00FF               	movwf	btemp+1
  2644  04BC  0874               	movf	??_ISR+1,w
  2645  04BD  008A               	movwf	10
  2646  04BE  0E73               	swapf	??_ISR^(0+4294967168),w
  2647  04BF  0083               	movwf	3
  2648  04C0  0EFE               	swapf	btemp,f
  2649  04C1  0E7E               	swapf	btemp,w
  2650  04C2  0009               	retfie
  2651  04C3                     __end_of_ISR:
  2652                           
  2653                           	psect	intentry
  2654  0004                     __pintentry:	
  2655                           ;incstack = 0
  2656                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2657                           
  2658  0004                     interrupt_function:
  2659  007E                     saved_w	set	btemp
  2660  0004  00FE               	movwf	btemp
  2661  0005  0E03               	swapf	3,w
  2662  0006  00F3               	movwf	??_ISR
  2663  0007  080A               	movf	10,w
  2664  0008  00F4               	movwf	??_ISR+1
  2665  0009  1283               	bcf	3,5	;RP0=0, select bank0
  2666  000A  1303               	bcf	3,6	;RP1=0, select bank0
  2667  000B  087F               	movf	btemp+1,w
  2668  000C  00F5               	movwf	??_ISR+2
  2669  000D  120A  118A  2CAB   	ljmp	_ISR
  2670                           
  2671                           	psect	text16
  2672  0317                     __ptext16:	
  2673 ;; *************** function i1_LcdCmdWrite *****************
  2674 ;; Defined at:
  2675 ;;		line 32 in file "./lcd.h"
  2676 ;; Parameters:    Size  Location     Type
  2677 ;;  cmd             1    wreg     unsigned char 
  2678 ;; Auto vars:     Size  Location     Type
  2679 ;;  cmd             1    2[COMMON] unsigned char 
  2680 ;; Return value:  Size  Location     Type
  2681 ;;                  1    wreg      void 
  2682 ;; Registers used:
  2683 ;;		wreg, status,2, status,0, btemp+1
  2684 ;; Tracked objects:
  2685 ;;		On entry : 0/0
  2686 ;;		On exit  : 0/0
  2687 ;;		Unchanged: 0/0
  2688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2689 ;;      Params:         0       0       0       0       0
  2690 ;;      Locals:         1       0       0       0       0
  2691 ;;      Temps:          2       0       0       0       0
  2692 ;;      Totals:         3       0       0       0       0
  2693 ;;Total ram usage:        3 bytes
  2694 ;; Hardware stack levels used:    1
  2695 ;; This function calls:
  2696 ;;		Nothing
  2697 ;; This function is called by:
  2698 ;;		_ISR
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           
  2703                           ;psect for function i1_LcdCmdWrite
  2704  0317                     i1_LcdCmdWrite:
  2705                           
  2706                           ;incstack = 0
  2707                           ; Regs used in i1_LcdCmdWrite: [wreg+status,2+status,0+btemp+1]
  2708                           ;i1LcdCmdWrite@cmd stored from wreg
  2709  0317  00F2               	movwf	i1LcdCmdWrite@cmd
  2710  0318                     i1l1296:
  2711                           
  2712                           ;./lcd.h: 32:     void LcdCmdWrite(char cmd);./lcd.h: 33:     {;./lcd.h: 34:         POR
      +                          TD = (cmd & 0xF0);
  2713  0318  0872               	movf	i1LcdCmdWrite@cmd,w
  2714  0319  39F0               	andlw	240
  2715  031A  1283               	bcf	3,5	;RP0=0, select bank0
  2716  031B  1303               	bcf	3,6	;RP1=0, select bank0
  2717  031C  0088               	movwf	8	;volatile
  2718  031D                     i1l1298:
  2719                           
  2720                           ;./lcd.h: 35:         PORTD &= ~(1<<0);
  2721  031D  30FE               	movlw	254
  2722  031E  00FF               	movwf	btemp+1
  2723  031F  087F               	movf	btemp+1,w
  2724  0320  0588               	andwf	8,f	;volatile
  2725  0321                     i1l1300:
  2726                           
  2727                           ;./lcd.h: 36:         PORTD &= ~(1<<1);
  2728  0321  30FD               	movlw	253
  2729  0322  00FF               	movwf	btemp+1
  2730  0323  087F               	movf	btemp+1,w
  2731  0324  0588               	andwf	8,f	;volatile
  2732  0325                     i1l1302:
  2733                           
  2734                           ;./lcd.h: 37:         PORTD |= (1<<2);
  2735  0325  1508               	bsf	8,2	;volatile
  2736  0326                     i1l1304:
  2737                           
  2738                           ;./lcd.h: 38:         _delay((unsigned long)((10)*(20000000/4000.0)));
  2739  0326  3041               	movlw	65
  2740  0327  00F1               	movwf	??i1_LcdCmdWrite+1
  2741  0328  30EE               	movlw	238
  2742  0329  00F0               	movwf	??i1_LcdCmdWrite
  2743  032A                     u120_27:
  2744  032A  0BF0               	decfsz	??i1_LcdCmdWrite,f
  2745  032B  2B2A               	goto	u120_27
  2746  032C  0BF1               	decfsz	??i1_LcdCmdWrite+1,f
  2747  032D  2B2A               	goto	u120_27
  2748  032E  0000               	nop
  2749  032F                     i1l1306:
  2750                           
  2751                           ;./lcd.h: 39:         PORTD &= ~(1<<2);
  2752  032F  30FB               	movlw	251
  2753  0330  00FF               	movwf	btemp+1
  2754  0331  087F               	movf	btemp+1,w
  2755  0332  1283               	bcf	3,5	;RP0=0, select bank0
  2756  0333  1303               	bcf	3,6	;RP1=0, select bank0
  2757  0334  0588               	andwf	8,f	;volatile
  2758  0335                     i1l1308:
  2759                           
  2760                           ;./lcd.h: 41:         PORTD = ((cmd<<4) & 0xF0);
  2761  0335  0872               	movf	i1LcdCmdWrite@cmd,w
  2762  0336  00F0               	movwf	??i1_LcdCmdWrite
  2763  0337  3003               	movlw	3
  2764  0338                     u79_25:
  2765  0338  1003               	clrc
  2766  0339  0DF0               	rlf	??i1_LcdCmdWrite,f
  2767  033A  3EFF               	addlw	-1
  2768  033B  1D03               	skipz
  2769  033C  2B38               	goto	u79_25
  2770  033D  1003               	clrc
  2771  033E  0D70               	rlf	??i1_LcdCmdWrite,w
  2772  033F  39F0               	andlw	240
  2773  0340  0088               	movwf	8	;volatile
  2774  0341                     i1l1310:
  2775                           
  2776                           ;./lcd.h: 42:         PORTD &= ~(1<<0);
  2777  0341  30FE               	movlw	254
  2778  0342  00FF               	movwf	btemp+1
  2779  0343  087F               	movf	btemp+1,w
  2780  0344  0588               	andwf	8,f	;volatile
  2781  0345                     i1l1312:
  2782                           
  2783                           ;./lcd.h: 43:         PORTD &= ~(1<<1);
  2784  0345  30FD               	movlw	253
  2785  0346  00FF               	movwf	btemp+1
  2786  0347  087F               	movf	btemp+1,w
  2787  0348  0588               	andwf	8,f	;volatile
  2788  0349                     i1l1314:
  2789                           
  2790                           ;./lcd.h: 44:         PORTD |= (1<<2);
  2791  0349  1508               	bsf	8,2	;volatile
  2792  034A                     i1l1316:
  2793                           
  2794                           ;./lcd.h: 45:         _delay((unsigned long)((10)*(20000000/4000.0)));
  2795  034A  3041               	movlw	65
  2796  034B  00F1               	movwf	??i1_LcdCmdWrite+1
  2797  034C  30EE               	movlw	238
  2798  034D  00F0               	movwf	??i1_LcdCmdWrite
  2799  034E                     u121_27:
  2800  034E  0BF0               	decfsz	??i1_LcdCmdWrite,f
  2801  034F  2B4E               	goto	u121_27
  2802  0350  0BF1               	decfsz	??i1_LcdCmdWrite+1,f
  2803  0351  2B4E               	goto	u121_27
  2804  0352  0000               	nop
  2805  0353                     i1l1318:
  2806                           
  2807                           ;./lcd.h: 46:         PORTD &= ~(1<<2);
  2808  0353  30FB               	movlw	251
  2809  0354  00FF               	movwf	btemp+1
  2810  0355  087F               	movf	btemp+1,w
  2811  0356  1283               	bcf	3,5	;RP0=0, select bank0
  2812  0357  1303               	bcf	3,6	;RP1=0, select bank0
  2813  0358  0588               	andwf	8,f	;volatile
  2814  0359                     i1l43:
  2815  0359  0008               	return
  2816  035A                     __end_ofi1_LcdCmdWrite:
  2817  007E                     btemp	set	126	;btemp
  2818  007E                     wtemp0	set	126
  2819                           
  2820                           	psect	config
  2821                           
  2822                           ;Config register CONFIG @ 0x2007
  2823                           ;	Oscillator Selection bits
  2824                           ;	FOSC = XT, XT oscillator
  2825                           ;	Watchdog Timer Enable bit
  2826                           ;	WDTE = OFF, WDT disabled
  2827                           ;	Power-up Timer Enable bit
  2828                           ;	PWRTE = ON, PWRT enabled
  2829                           ;	Brown-out Reset Enable bit
  2830                           ;	BOREN = ON, BOR enabled
  2831                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2832                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2833                           ;	Data EEPROM Memory Code Protection bit
  2834                           ;	CPD = OFF, Data EEPROM code protection off
  2835                           ;	Flash Program Memory Write Enable bits
  2836                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2837                           ;	In-Circuit Debugger Mode bit
  2838                           ;	DEBUG = 0x1, unprogrammed default
  2839                           ;	Flash Program Memory Code Protection bit
  2840                           ;	CP = OFF, Code protection off
  2841  2007                     	org	8199
  2842  2007  3F71               	dw	16241

Data Sizes:
    Strings     6
    Constant    0
    Data        62
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       8
    BANK0            80     21      71
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LcdMsgPrint@msg	PTR unsigned char  size(2) Largest target is 16
		 -> idea_humi(BANK1[16]), idea_temp(BANK0[16]), STR_1(CODE[6]), humi(BANK0[14]), 
		 -> temp(BANK0[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1_LcdCmdWrite

Critical Paths under _main in BANK0

    _main->_DhtUpdateData
    _setPumpValue->___bmul
    _LcdMsgPrint->_LcdDataWrite
    _LcdInit->_LcdCmdWrite
    _DhtUpdateData->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3263
                                             18 BANK0      3     3      0
                      _DhtUpdateData
                        _LcdCmdWrite
                            _LcdInit
                        _LcdMsgPrint
                          _configPWM
                       _setPumpValue
 ---------------------------------------------------------------------------------
 (1) _setPumpValue                                         3     2      1     626
                                              3 BANK0      3     2      1
                             ___bmul
                             _setPWM
 ---------------------------------------------------------------------------------
 (2) _setPWM                                               2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     316
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _configPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LcdMsgPrint                                          3     1      2     642
                                              3 BANK0      3     1      2
                       _LcdDataWrite
 ---------------------------------------------------------------------------------
 (2) _LcdDataWrite                                         3     3      0      62
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _LcdInit                                              0     0      0      62
                        _LcdCmdWrite
 ---------------------------------------------------------------------------------
 (2) _LcdCmdWrite                                          3     3      0      62
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _DhtUpdateData                                       10    10      0    1871
                                              8 BANK0     10    10      0
                   _DhtCheckResponse
                        _DhtReadData
                     _DhtStartSignal
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     793
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     908
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _DhtStartSignal                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DhtReadData                                          4     4      0     170
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _DhtCheckResponse                                     2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      44
                                              3 COMMON     3     3      0
                      i1_LcdCmdWrite
 ---------------------------------------------------------------------------------
 (4) i1_LcdCmdWrite                                        3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DhtUpdateData
     _DhtCheckResponse
     _DhtReadData
     _DhtStartSignal
     ___awdiv
     ___awmod
   _LcdCmdWrite
   _LcdInit
     _LcdCmdWrite
   _LcdMsgPrint
     _LcdDataWrite
   _configPWM
   _setPumpValue
     ___bmul
     _setPWM

 _ISR (ROOT)
   i1_LcdCmdWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     15      47       5       88.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       8       1       57.1%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5F      12        0.0%
ABS                  0      0      5F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Mon Jun 15 20:44:55 2020

                        pc 0002        __end_of_LcdCmdWrite 02D2             ___bmul@product 004E  
                       l43 02D1                         l46 0491                         l55 0430  
                       l72 0475                         l49 039A                         l84 0457  
     __end_of_LcdDataWrite 039B                         l97 0316               ___awdiv@sign 0052  
                       fsr 0004                        l101 012F                        l104 0513  
                      l107 04AA                        l142 03D6                        l254 04D9  
                      l381 022F                        l394 028A                        _GIE 005F  
                      _RB4 0034                        _PR2 0092                        u600 01FC  
                      u601 01FB                        u620 020D                        _ISR 04AB  
                      u621 020C                        u615 01FD                        u640 0221  
                      u560 01CE                        u641 0220                        u625 0209  
                      u561 01CD                        u650 0226                        u570 01D9  
                      u651 0225                        u635 0215                        u571 01D8  
                      u900 030B                        u580 01EA                        u901 030A  
                      u581 01E9                        u910 0315                        u911 0314  
                      u920 049C                        u921 0498                        u850 043F  
                      u851 043E                        u595 01EE                        u835 02AE  
                      u860 044B                        u861 044A                        u845 037A  
                      u870 0457                        u950 04CB                        u934 049F  
                      u871 0456                        u951 04CA                        u880 02E2  
                      u960 04D8                        u881 02E1                        u961 04D7  
                      u945 04A3                        u890 02F6                        u970 0237  
                      u891 02F5                        u971 0236                        u980 0242  
                      u981 0241                        u990 024D                        u991 024C  
                      fsr0 0004                        indf 0000               ___awmod@sign 0052  
      __end_of_LcdMsgPrint 0431                       ?_ISR 0070                       l1160 01CE  
                     l1400 0388                       l1410 0469                       l1170 01E2  
                     l1162 01D3                       l1402 0389                       l1420 044B  
                     l1412 0472                       l1180 01F8                       l1172 01E4  
                     l1164 01D5                       l1156 01C7                       l1500 0281  
                     l1404 0394                       l1414 0431                       l1430 02E2  
                     l1422 02D2                       l1406 0458                       l1190 021B  
                     l1182 01FC                       l1174 01EA                       l1166 01D9  
                     l1158 01CA                       l1502 0286                       l1510 047F  
                     l1416 0431                       l1440 030B                       l1432 02E8  
                     l1408 045E                       l1184 020D                       l1176 01ED  
                     l1192 0221                       l1168 01DE                       l1360 0291  
                     l1512 0485                       l1520 0419                       l1280 0503  
                     l1418 043F                       l1442 030F                       l1434 02F6  
                     l1194 0226                       l1186 0213                       l1178 01F4  
                     l1530 005C                       l1370 02AB                       l1362 0295  
                     l1514 048B                       l1506 0476                       l1522 041F  
                     l1282 050F                       l1450 04A0                       l1444 0315  
                     l1436 02F9                       l1428 02D6                       l1196 022B  
                     l1188 0214                       l1540 012C                       l1532 0066  
                     l1524 003E                       l1380 02CB                       l1372 02B7  
                     l1364 0299                       l1508 0479                       l1516 0404  
                     l1460 04D1                       l1452 04C6                       l1438 02FF  
                     l1470 0233                       l1534 0070                       l1526 0048  
                     l1374 02BB                       l1366 029A                       l1358 028E  
                     l1390 0366                       l1382 035D                       l1518 0408  
                     l1462 04D3                       l1454 04C7                       l1550 03AE  
                     l1480 0247                       l1472 0237                       l1544 012E  
                     l1536 007A                       l1528 0052                       l1376 02BF  
                     l1368 02A5                       l1392 0371                       l1384 0360  
                     l1464 04D8                       l1456 04CB                       l1448 0495  
                     l1552 03B3                       l1560 0130                       l1490 025F  
                     l1482 024D                       l1474 023C                       l1538 00A2  
                     l1378 02C0                       l1394 0377                       l1386 0361  
                     l1458 04CF                       l1554 03B9                       l1570 014C  
                     l1562 0135                       l1492 0269                       l1484 0250  
                     l1476 023E                       l1468 0230                       l1396 0383  
                     l1388 0365                       l1556 03C9                       l1548 039E  
                     l1572 0152                       l1580 0181                       l1564 013A  
                     l1494 026F                       l1486 0257                       l1478 0242  
                     l1398 0384                       l1558 03D0                       l1582 018D  
                     l1574 015D                       l1566 013F                       l1496 0276  
                     l1488 025B                       l1584 0198                       l1576 016F  
                     l1568 0143                       l1498 027C                       l1578 0175  
                     l1586 01A9                       l1588 01B5                       STR_1 04EA  
                     u1010 025F                       u1011 025E                       u1020 0269  
                     u1100 0143                       u1021 0268                       u1005 0251  
                     u1101 0142                       u1110 014C                       u1111 014B  
                     u1040 027C                       u1041 027B                       u1025 0265  
                     u1050 0281                       u1051 0280                       u1035 0270  
                     u1060 0430                       u1061 042F                       u1070 00A2  
                     u1071 00A1                       u1127 01BD                       u1080 03B3  
                     u1137 036C                       u1081 03B2                       u1090 03B9  
                     u1075 009E                       u1147 038F                       u1091 03B8  
                     u1157 02A0                       u1167 02C6                       u1177 0464  
                     u1187 0470                       u1197 02E6                       _INTE 005C  
                     _INTF 0059                       i1l43 0359           LcdDataWrite@data 004F  
                     _main 0130                       _humi 0031                       _temp 003F  
                     btemp 007E                       start 0010            __end_of_LcdInit 0492  
        ___bmul@multiplier 004F                      ??_ISR 0073                      ?_main 0070  
                    _CCP1X 00BD                      _CCP1Y 00BC            __end_of___awdiv 0230  
          __end_of___awmod 028B           _DhtCheckResponse 0431            ___awdiv@divisor 004D  
                    i1l135 04B8            ___awdiv@counter 0051                      _PORTD 0008  
                    _TRISD 0088                      u82_20 04AF                      u82_21 04AE  
                    u79_25 0338      __end_of_DhtUpdateData 0130                      _ihumi 0020  
                    _itemp 0077             __pbitbssCOMMON 03B0                      pclath 000A  
              _DhtReadData 02D2                      status 0003                      wtemp0 007E  
              _LcdCmdWrite 028B            __initialization 0013               __end_of_main 01C7  
                   ??_main 005F                _LcdMsgPrint 0404             _DhtStartSignal 0458  
                   _CCP1M2 00BA                     _CCP1M3 00BB                     _CCPR1L 0015  
         ___awdiv@dividend 004F                     i1l1300 0321                     i1l1310 0341  
                   i1l1302 0325                     i1l1312 0345                     i1l1304 0326  
                   i1l1314 0349                     i1l1306 032F                     i1l1316 034A  
                   i1l1308 0335                     i1l1318 0353                     i1l1350 04AB  
                   i1l1352 04AF                     i1l1354 04B1                     i1l1356 04B7  
                   u120_27 032A                     i1l1296 0318                     i1l1298 031D  
                   u121_27 034E                     _INTEDG 040E                  ??_LcdInit 0076  
                   _TMR2ON 0092                     _TRISB4 0434                     _TRISC2 043A  
    __end_ofi1_LcdCmdWrite 035A      __size_of_LcdDataWrite 0041                     ___bmul 04C3  
                ??___awdiv 0076                  ??___awmod 0076                     _setPWM 0492  
         ___awdiv@quotient 0053            ___awmod@divisor 004D            ___awmod@counter 0051  
                   _status 03B0     __end_of_DhtStartSignal 0476               __pdataCOMMON 0077  
                   saved_w 007E               _LcdDataWrite 035A    __end_of__initialization 003A  
      ___bmul@multiplicand 004D             __pcstackCOMMON 0070               __pidataBANK0 03D7  
             __pidataBANK1 0514          setPumpValue@delta 0052          setPumpValue@id_rh 0050  
          ?_DhtStartSignal 0070         __size_of_configPWM 0011                 __pbssBANK0 0062  
 __end_of_DhtCheckResponse 0458                 __pmaintext 0130                    ?___bmul 004D  
               __pintentry 0004                    ?_setPWM 0070                    _T2CKPS0 0090  
                  _T2CKPS1 0091              ?_setPumpValue 0050                 __stringtab 04DA  
                  _LcdInit 0476               ?_DhtReadData 0070               ?_LcdCmdWrite 0070  
        __end_of_configPWM 0514            __size_of___bmul 0017                    ___awdiv 01C7  
                  ___awmod 0230            __size_of_setPWM 0019                    __ptext1 039B  
                  __ptext2 0492               ?_LcdMsgPrint 0050                    __ptext3 04C3  
                  __ptext4 0503                    __ptext5 0404                    __ptext6 035A  
                  __ptext7 0476                    __ptext8 028B                    __ptext9 003E  
           ??_setPumpValue 0076               __size_of_ISR 0018           ___awmod@dividend 004F  
                  _t_byte1 0066                    _t_byte2 0065       end_of_initialization 003A  
   __size_of_DhtUpdateData 00F2             __end_of___bmul 04DA           ??_DhtStartSignal 004D  
            __pidataCOMMON 0524             LcdCmdWrite@cmd 004F             __end_of_setPWM 04AB  
      start_initialization 0013     __size_ofi1_LcdCmdWrite 0043                __end_of_ISR 04C3  
            _DhtUpdateData 003E          ?_DhtCheckResponse 0070       __end_of_setPumpValue 03D7  
     __size_of_DhtReadData 0045         ??_DhtCheckResponse 004D       __size_of_LcdCmdWrite 0047  
                 ??___bmul 0076                 init_fetch0 04F0               DhtReadData@i 004F  
              __pdataBANK0 0020                __pdataBANK1 00A0                   ??_setPWM 004D  
     __size_of_LcdMsgPrint 002D                  ___latbits 0002              __pcstackBANK0 004D  
           ?_DhtUpdateData 0070           setPumpValue@r_rh 0051                   ?_LcdInit 0070  
                _check_sum 0062              i1_LcdCmdWrite 0317                  _idea_humi 00A0  
                _idea_temp 0021                   ?___awdiv 004D                   ?___awmod 004D  
                _configPWM 0503                  __pstrings 04DA          interrupt_function 0004  
           ?i1_LcdCmdWrite 0070                 ?_configPWM 0070               LcdMsgPrint@i 0052  
              __stringbase 04E9            ??_DhtUpdateData 0055              ?_LcdDataWrite 0070  
    __size_of_setPumpValue 003C           __size_of_LcdInit 001C           __size_of___awdiv 0069  
         __size_of___awmod 005B         __end_of__stringtab 04EA               _setPumpValue 039B  
                 __ptext10 0230                   __ptext11 01C7                   __ptext12 0458  
                 __ptext13 02D2                   __ptext14 0431                   __ptext15 04AB  
                 __ptext16 0317             ??_LcdDataWrite 004D           i1LcdCmdWrite@cmd 0072  
          ??i1_LcdCmdWrite 0070              __size_of_main 0097                   _rh_byte1 0064  
                 _rh_byte2 0063                ??_configPWM 0076            DhtReadData@data 0050  
__size_of_DhtCheckResponse 0027                   init_ram0 04F4                   setPWM@DC 004E  
                 intlevel1 0000              ??_DhtReadData 004D              ??_LcdCmdWrite 004D  
                stringcode 04E4              ??_LcdMsgPrint 0076                   stringdir 04E4  
                 stringtab 04DA    __size_of_DhtStartSignal 001E             LcdMsgPrint@msg 0050  
      __end_of_DhtReadData 0317  
