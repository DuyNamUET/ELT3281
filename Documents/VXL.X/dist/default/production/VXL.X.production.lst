

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Jun 20 14:07:11 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.20
    43                           ; Generated 12/02/2020 GMT
    44                           ; 
    45                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196                           
   197                           	psect	idataCOMMON
   198  06F7                     __pidataCOMMON:
   199                           
   200                           ;initializer for _itemp
   201  06F7  3414               	retlw	20
   202                           
   203                           	psect	idataBANK0
   204  0581                     __pidataBANK0:
   205                           
   206                           ;initializer for _ihumi
   207  0581  345F               	retlw	95
   208                           
   209                           ;initializer for _idea_temp
   210  0582  3449               	retlw	73
   211  0583  3444               	retlw	68
   212  0584  3454               	retlw	84
   213  0585  3465               	retlw	101
   214  0586  346D               	retlw	109
   215  0587  3470               	retlw	112
   216  0588  3420               	retlw	32
   217  0589  343D               	retlw	61
   218  058A  3420               	retlw	32
   219  058B  3432               	retlw	50
   220  058C  3430               	retlw	48
   221  058D  342E               	retlw	46
   222  058E  3430               	retlw	48
   223  058F  3420               	retlw	32
   224  0590  3443               	retlw	67
   225  0591  3400               	retlw	0
   226                           
   227                           ;initializer for _humi
   228  0592  3452               	retlw	82
   229  0593  3448               	retlw	72
   230  0594  3420               	retlw	32
   231  0595  3420               	retlw	32
   232  0596  3420               	retlw	32
   233  0597  343D               	retlw	61
   234  0598  3420               	retlw	32
   235  0599  3430               	retlw	48
   236  059A  3430               	retlw	48
   237  059B  342E               	retlw	46
   238  059C  3430               	retlw	48
   239  059D  3420               	retlw	32
   240  059E  3425               	retlw	37
   241  059F  3400               	retlw	0
   242                           
   243                           ;initializer for _temp
   244  05A0  3454               	retlw	84
   245  05A1  3465               	retlw	101
   246  05A2  346D               	retlw	109
   247  05A3  3470               	retlw	112
   248  05A4  3420               	retlw	32
   249  05A5  343D               	retlw	61
   250  05A6  3420               	retlw	32
   251  05A7  3430               	retlw	48
   252  05A8  3430               	retlw	48
   253  05A9  342E               	retlw	46
   254  05AA  3430               	retlw	48
   255  05AB  3420               	retlw	32
   256  05AC  3443               	retlw	67
   257  05AD  3400               	retlw	0
   258                           
   259                           	psect	idataBANK1
   260  06D1                     __pidataBANK1:
   261                           
   262                           ;initializer for _idea_humi
   263  06D1  3449               	retlw	73
   264  06D2  3444               	retlw	68
   265  06D3  3452               	retlw	82
   266  06D4  3448               	retlw	72
   267  06D5  3420               	retlw	32
   268  06D6  3420               	retlw	32
   269  06D7  3420               	retlw	32
   270  06D8  343D               	retlw	61
   271  06D9  3420               	retlw	32
   272  06DA  3438               	retlw	56
   273  06DB  3435               	retlw	53
   274  06DC  342E               	retlw	46
   275  06DD  3430               	retlw	48
   276  06DE  3420               	retlw	32
   277  06DF  3425               	retlw	37
   278  06E0  3400               	retlw	0
   279  001E                     _ADRESH	set	30
   280  001F                     _ADCON0	set	31
   281  0015                     _CCPR1L	set	21
   282  0059                     _INTF	set	89
   283  0042                     _RD2	set	66
   284  005F                     _GIE	set	95
   285  005C                     _INTE	set	92
   286  00FA                     _GO_DONE	set	250
   287  00FD                     _CHS2	set	253
   288  00FC                     _CHS1	set	252
   289  00FB                     _CHS0	set	251
   290  00BD                     _CCP1X	set	189
   291  00BC                     _CCP1Y	set	188
   292  0092                     _TMR2ON	set	146
   293  0091                     _T2CKPS1	set	145
   294  0090                     _T2CKPS0	set	144
   295  00BB                     _CCP1M3	set	187
   296  00BA                     _CCP1M2	set	186
   297  0034                     _RB4	set	52
   298  0043                     _RD3	set	67
   299  0041                     _RD1	set	65
   300  0047                     _RD7	set	71
   301  0046                     _RD6	set	70
   302  0045                     _RD5	set	69
   303  0044                     _RD4	set	68
   304  0088                     _TRISD	set	136
   305  009E                     _ADRESL	set	158
   306  009F                     _ADCON1	set	159
   307  0092                     _PR2	set	146
   308  040E                     _INTEDG	set	1038
   309  043A                     _TRISC2	set	1082
   310  0434                     _TRISB4	set	1076
   311                           
   312                           	psect	strings
   313  0600                     __pstrings:
   314  0600                     stringtab:
   315  0600                     __stringtab:
   316                           
   317                           ;	String table - string pointers are 1 byte each
   318  0600  1BFF               	btfsc	btemp+1,7
   319  0601  2E0A               	ljmp	stringcode
   320  0602  1383               	bcf	3,7
   321  0603  187F               	btfsc	btemp+1,0
   322  0604  1783               	bsf	3,7
   323  0605  0800               	movf	0,w
   324  0606  0A84               	incf	4,f
   325  0607  1903               	skipnz
   326  0608  0AFF               	incf	btemp+1,f
   327  0609  0008               	return
   328  060A                     stringcode:
   329  060A                     stringdir:
   330  060A  3006               	movlw	high stringdir
   331  060B  008A               	movwf	10
   332  060C  0804               	movf	4,w
   333  060D  0A84               	incf	4,f
   334  060E  0782               	addwf	2,f
   335  060F                     __stringbase:
   336  060F  3400               	retlw	0
   337  0610                     __end_of__stringtab:
   338  0610                     STR_2:
   339  0610  3448               	retlw	72	;'H'
   340  0611  3461               	retlw	97	;'a'
   341  0612  346E               	retlw	110	;'n'
   342  0613  3464               	retlw	100	;'d'
   343  0614  3468               	retlw	104	;'h'
   344  0615  3465               	retlw	101	;'e'
   345  0616  346C               	retlw	108	;'l'
   346  0617  3464               	retlw	100	;'d'
   347  0618  3420               	retlw	32	;' '
   348  0619  3450               	retlw	80	;'P'
   349  061A  3457               	retlw	87	;'W'
   350  061B  344D               	retlw	77	;'M'
   351  061C  3400               	retlw	0
   352  061D                     STR_1:
   353  061D  3445               	retlw	69	;'E'
   354  061E  3472               	retlw	114	;'r'
   355  061F  3472               	retlw	114	;'r'
   356  0620  346F               	retlw	111	;'o'
   357  0621  3472               	retlw	114	;'r'
   358  0622  3400               	retlw	0
   359                           
   360                           	psect	cinit
   361  0013                     start_initialization:	
   362                           ; #config settings
   363                           
   364  0013                     __initialization:
   365                           
   366                           ; Initialize objects allocated to BANK1
   367  0013  1383               	bcf	3,7	;select IRP bank0
   368  0014  30B0               	movlw	low (__pdataBANK1+16)
   369  0015  00FD               	movwf	btemp+-1
   370  0016  3006               	movlw	high __pidataBANK1
   371  0017  00FE               	movwf	btemp
   372  0018  30D1               	movlw	low __pidataBANK1
   373  0019  00FF               	movwf	btemp+1
   374  001A  30A0               	movlw	low __pdataBANK1
   375  001B  0084               	movwf	4
   376  001C  120A  118A  26B1  120A  118A  	fcall	init_ram0
   377                           
   378                           ; Initialize objects allocated to BANK0
   379  0021  304D               	movlw	low (__pdataBANK0+45)
   380  0022  00FD               	movwf	btemp+-1
   381  0023  3005               	movlw	high __pidataBANK0
   382  0024  00FE               	movwf	btemp
   383  0025  3081               	movlw	low __pidataBANK0
   384  0026  00FF               	movwf	btemp+1
   385  0027  3020               	movlw	low __pdataBANK0
   386  0028  0084               	movwf	4
   387  0029  120A  118A  26B1  120A  118A  	fcall	init_ram0
   388                           
   389                           ; Initialize objects allocated to COMMON
   390  002E  120A  118A  26F7  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   391  0033  00F9               	movwf	__pdataCOMMON& (0+127)
   392                           
   393                           ; Clear objects allocated to BANK0
   394  0034  01E8               	clrf	__pbssBANK0& (0+127)
   395  0035  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   396  0036  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   397  0037  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   398  0038  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   399  0039  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   400  003A                     end_of_initialization:	
   401                           ;End of C runtime variable initialization code
   402                           
   403  003A                     __end_of__initialization:
   404  003A  0183               	clrf	3
   405  003B  120A  118A  283E   	ljmp	_main	;jump to C main() function
   406                           
   407                           	psect	dataCOMMON
   408  0079                     __pdataCOMMON:
   409  0079                     _itemp:
   410  0079                     	ds	1
   411                           
   412                           	psect	bssBANK0
   413  0068                     __pbssBANK0:
   414  0068                     _status:
   415  0068                     	ds	1
   416  0069                     _check_sum:
   417  0069                     	ds	1
   418  006A                     _rh_byte2:
   419  006A                     	ds	1
   420  006B                     _rh_byte1:
   421  006B                     	ds	1
   422  006C                     _t_byte2:
   423  006C                     	ds	1
   424  006D                     _t_byte1:
   425  006D                     	ds	1
   426                           
   427                           	psect	dataBANK0
   428  0020                     __pdataBANK0:
   429  0020                     _ihumi:
   430  0020                     	ds	1
   431  0021                     _idea_temp:
   432  0021                     	ds	16
   433  0031                     _humi:
   434  0031                     	ds	14
   435  003F                     _temp:
   436  003F                     	ds	14
   437                           
   438                           	psect	dataBANK1
   439  00A0                     __pdataBANK1:
   440  00A0                     _idea_humi:
   441  00A0                     	ds	16
   442                           
   443                           	psect	inittext
   444  06AD                     init_fetch0:	
   445                           ;	Called with low address in FSR and high address in W
   446                           
   447  06AD  087E               	movf	btemp,w
   448  06AE  008A               	movwf	10
   449  06AF  087F               	movf	btemp+1,w
   450  06B0  0082               	movwf	2
   451  06B1                     init_ram0:	
   452                           ;Called with:
   453                           ;	high address of idata address in btemp 
   454                           ;	low address of idata address in btemp+1 
   455                           ;	low address of data in FSR
   456                           ;	high address + 1 of data in btemp-1
   457                           
   458  06B1  120A  118A  26AD  120A  118A  	fcall	init_fetch0
   459  06B6  0080               	movwf	0
   460  06B7  0A84               	incf	4,f
   461  06B8  0804               	movf	4,w
   462  06B9  067D               	xorwf	btemp+-1,w
   463  06BA  1903               	btfsc	3,2
   464  06BB  3400               	retlw	0
   465  06BC  0AFF               	incf	btemp+1,f
   466  06BD  1903               	btfsc	3,2
   467  06BE  0AFE               	incf	btemp,f
   468  06BF  2EB1               	goto	init_ram0
   469                           
   470                           	psect	cstackCOMMON
   471  0070                     __pcstackCOMMON:
   472  0070                     ?_DhtUpdateData:
   473  0070                     ?_Lcd_SetBit:	
   474                           ; 1 bit 
   475                           
   476  0070                     ?_Lcd_Cmd:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_Lcd_Clear:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_Lcd_Start:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_Lcd_Print_Char:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_DhtStartSignal:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_DhtCheckResponse:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_DhtReadData:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ?_configPWM:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_setPWM:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_ADC_Init:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_ISR:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_main:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?i1___awmod:	
   513                           ; 2 bytes @ 0x0
   514                           
   515  0070                     i1___awmod@divisor:	
   516                           ; 2 bytes @ 0x0
   517                           
   518                           
   519                           ; 2 bytes @ 0x0
   520  0070                     	ds	2
   521  0072                     i1___awmod@dividend:
   522                           
   523                           ; 2 bytes @ 0x2
   524  0072                     	ds	2
   525  0074                     ??i1___awmod:
   526  0074                     i1___awmod@counter:	
   527                           ; 1 bytes @ 0x4
   528                           
   529                           
   530                           ; 1 bytes @ 0x4
   531  0074                     	ds	1
   532  0075                     i1___awmod@sign:
   533                           
   534                           ; 1 bytes @ 0x5
   535  0075                     	ds	1
   536  0076                     ??_ISR:
   537                           
   538                           ; 1 bytes @ 0x6
   539  0076                     	ds	3
   540                           
   541                           	psect	cstackBANK0
   542  004D                     __pcstackBANK0:
   543  004D                     ??_Lcd_SetBit:
   544  004D                     ??_DhtStartSignal:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  004D                     ??_DhtCheckResponse:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  004D                     ??_DhtReadData:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  004D                     ??_configPWM:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  004D                     ??_setPWM:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  004D                     ??_ADC_Init:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  004D                     ?___bmul:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  004D                     ?_ADC_Read:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  004D                     ?___awmod:	
   569                           ; 2 bytes @ 0x0
   570                           
   571  004D                     Lcd_SetBit@data_bit:	
   572                           ; 2 bytes @ 0x0
   573                           
   574  004D                     ___bmul@multiplicand:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  004D                     ADC_Read@ADC_channel:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  004D                     ___awmod@divisor:	
   581                           ; 2 bytes @ 0x0
   582                           
   583                           
   584                           ; 2 bytes @ 0x0
   585  004D                     	ds	1
   586  004E                     ??_Lcd_Cmd:
   587  004E                     ??_Lcd_Print_Char:	
   588                           ; 1 bytes @ 0x1
   589                           
   590  004E                     ??___bmul:	
   591                           ; 1 bytes @ 0x1
   592                           
   593  004E                     setPWM@DC:	
   594                           ; 1 bytes @ 0x1
   595                           
   596  004E                     ___bmul@product:	
   597                           ; 1 bytes @ 0x1
   598                           
   599                           
   600                           ; 1 bytes @ 0x1
   601  004E                     	ds	1
   602  004F                     ??_ADC_Read:
   603  004F                     Lcd_Print_Char@Lower_Nibble:	
   604                           ; 1 bytes @ 0x2
   605                           
   606  004F                     DhtReadData@i:	
   607                           ; 1 bytes @ 0x2
   608                           
   609  004F                     ___bmul@multiplier:	
   610                           ; 1 bytes @ 0x2
   611                           
   612  004F                     ___awmod@dividend:	
   613                           ; 1 bytes @ 0x2
   614                           
   615                           
   616                           ; 2 bytes @ 0x2
   617  004F                     	ds	1
   618  0050                     ?_setPumpValue:
   619  0050                     Lcd_Cmd@a:	
   620                           ; 1 bytes @ 0x3
   621                           
   622  0050                     Lcd_Print_Char@Upper_Nibble:	
   623                           ; 1 bytes @ 0x3
   624                           
   625  0050                     DhtReadData@data:	
   626                           ; 1 bytes @ 0x3
   627                           
   628  0050                     setPumpValue@id_rh:	
   629                           ; 1 bytes @ 0x3
   630                           
   631                           
   632                           ; 1 bytes @ 0x3
   633  0050                     	ds	1
   634  0051                     ??_setPumpValue:
   635  0051                     ??_Lcd_Clear:	
   636                           ; 1 bytes @ 0x4
   637                           
   638  0051                     ?_Lcd_Set_Cursor:	
   639                           ; 1 bytes @ 0x4
   640                           
   641  0051                     ??_Lcd_Start:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0051                     ??___awmod:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0051                     Lcd_Set_Cursor@b:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0051                     Lcd_Print_Char@data:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0051                     setPumpValue@r_rh:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0051                     ___awmod@counter:	
   657                           ; 1 bytes @ 0x4
   658                           
   659  0051                     ADC_Read@result:	
   660                           ; 1 bytes @ 0x4
   661                           
   662                           
   663                           ; 2 bytes @ 0x4
   664  0051                     	ds	1
   665  0052                     ??_Lcd_Set_Cursor:
   666  0052                     setPumpValue@delta:	
   667                           ; 1 bytes @ 0x5
   668                           
   669  0052                     ___awmod@sign:	
   670                           ; 1 bytes @ 0x5
   671                           
   672  0052                     Lcd_Print_Char@i:	
   673                           ; 1 bytes @ 0x5
   674                           
   675                           
   676                           ; 2 bytes @ 0x5
   677  0052                     	ds	1
   678  0053                     ?___awdiv:
   679  0053                     Lcd_Set_Cursor@a:	
   680                           ; 2 bytes @ 0x6
   681                           
   682  0053                     ___awdiv@divisor:	
   683                           ; 1 bytes @ 0x6
   684                           
   685                           
   686                           ; 2 bytes @ 0x6
   687  0053                     	ds	1
   688  0054                     Lcd_Set_Cursor@z:
   689  0054                     Lcd_Print_Char@i_90:	
   690                           ; 1 bytes @ 0x7
   691                           
   692                           
   693                           ; 2 bytes @ 0x7
   694  0054                     	ds	1
   695  0055                     Lcd_Set_Cursor@y:
   696  0055                     ___awdiv@dividend:	
   697                           ; 1 bytes @ 0x8
   698                           
   699                           
   700                           ; 2 bytes @ 0x8
   701  0055                     	ds	1
   702  0056                     ?_Lcd_Print_String:
   703  0056                     Lcd_Set_Cursor@temp:	
   704                           ; 1 bytes @ 0x9
   705                           
   706  0056                     Lcd_Print_String@a:	
   707                           ; 1 bytes @ 0x9
   708                           
   709                           
   710                           ; 2 bytes @ 0x9
   711  0056                     	ds	1
   712  0057                     ??___awdiv:
   713  0057                     ___awdiv@counter:	
   714                           ; 1 bytes @ 0xA
   715                           
   716                           
   717                           ; 1 bytes @ 0xA
   718  0057                     	ds	1
   719  0058                     ??_Lcd_Print_String:
   720  0058                     ___awdiv@sign:	
   721                           ; 1 bytes @ 0xB
   722                           
   723                           
   724                           ; 1 bytes @ 0xB
   725  0058                     	ds	1
   726  0059                     ___awdiv@quotient:
   727                           
   728                           ; 2 bytes @ 0xC
   729  0059                     	ds	2
   730  005B                     ??_DhtUpdateData:
   731  005B                     Lcd_Print_String@i:	
   732                           ; 1 bytes @ 0xE
   733                           
   734                           
   735                           ; 2 bytes @ 0xE
   736  005B                     	ds	10
   737  0065                     ??_main:
   738                           
   739                           ; 1 bytes @ 0x18
   740  0065                     	ds	3
   741                           
   742                           	psect	maintext
   743  003E                     __pmaintext:	
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   746 ;;
   747 ;; *************** function _main *****************
   748 ;; Defined at:
   749 ;;		line 28 in file "main.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  2  189[None  ] int 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : B00/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       0       0       0
   765 ;;      Temps:          0       3       0       0       0
   766 ;;      Totals:         0       3       0       0       0
   767 ;;Total ram usage:        3 bytes
   768 ;; Hardware stack levels required when called:    5
   769 ;; This function calls:
   770 ;;		_ADC_Init
   771 ;;		_ADC_Read
   772 ;;		_DhtUpdateData
   773 ;;		_Lcd_Clear
   774 ;;		_Lcd_Print_String
   775 ;;		_Lcd_Set_Cursor
   776 ;;		_Lcd_Start
   777 ;;		___awdiv
   778 ;;		_configPWM
   779 ;;		_setPWM
   780 ;;		_setPumpValue
   781 ;; This function is called by:
   782 ;;		Startup code after reset
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _main
   788  003E                     _main:
   789  003E                     l1571:	
   790                           ;incstack = 0
   791                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   792                           
   793                           
   794                           ;main.c: 32:     INTEDG = 1;
   795  003E  1683               	bsf	3,5	;RP0=1, select bank1
   796  003F  1303               	bcf	3,6	;RP1=0, select bank1
   797  0040  1701               	bsf	1,6	;volatile
   798                           
   799                           ;main.c: 33:     INTE = 1;
   800  0041  160B               	bsf	11,4	;volatile
   801                           
   802                           ;main.c: 34:     GIE = 1;
   803  0042  178B               	bsf	11,7	;volatile
   804  0043                     l1573:
   805                           
   806                           ;main.c: 38:     TRISD = 0x00;
   807  0043  0188               	clrf	8	;volatile
   808  0044                     l1575:
   809                           
   810                           ;main.c: 39:     RD2 = 0;
   811  0044  1283               	bcf	3,5	;RP0=0, select bank0
   812  0045  1303               	bcf	3,6	;RP1=0, select bank0
   813  0046  1108               	bcf	8,2	;volatile
   814  0047                     l1577:
   815                           
   816                           ;main.c: 40:     Lcd_Start();
   817  0047  120A  118A  23B0  120A  118A  	fcall	_Lcd_Start
   818  004C                     l1579:
   819                           
   820                           ;main.c: 42:     configPWM();
   821  004C  120A  118A  26C0  120A  118A  	fcall	_configPWM
   822  0051                     l1581:
   823                           
   824                           ;main.c: 44:     ADC_Init();
   825  0051  120A  118A  26EE  120A  118A  	fcall	_ADC_Init
   826  0056                     l1583:
   827                           
   828                           ;main.c: 46:     {;main.c: 47:         Lcd_Clear();
   829  0056  120A  118A  26E1  120A  118A  	fcall	_Lcd_Clear
   830  005B                     l1585:
   831                           
   832                           ;main.c: 48:         if(status == 0)
   833  005B  1283               	bcf	3,5	;RP0=0, select bank0
   834  005C  1303               	bcf	3,6	;RP1=0, select bank0
   835  005D  0868               	movf	_status,w
   836  005E  1D03               	btfss	3,2
   837  005F  2861               	goto	u1381
   838  0060  2862               	goto	u1380
   839  0061                     u1381:
   840  0061  28A2               	goto	l1597
   841  0062                     u1380:
   842  0062                     l1587:
   843                           
   844                           ;main.c: 49:         {;main.c: 50:             if(DhtUpdateData())
   845  0062  120A  118A  2133  120A  118A  	fcall	_DhtUpdateData
   846  0067  1C03               	btfss	3,0
   847  0068  286A               	goto	u1391
   848  0069  286B               	goto	u1390
   849  006A                     u1391:
   850  006A  2896               	goto	l1595
   851  006B                     u1390:
   852  006B                     l1589:
   853                           
   854                           ;main.c: 51:             {;main.c: 52:                 Lcd_Set_Cursor(1,1);
   855  006B  1283               	bcf	3,5	;RP0=0, select bank0
   856  006C  1303               	bcf	3,6	;RP1=0, select bank0
   857  006D  01D1               	clrf	Lcd_Set_Cursor@b
   858  006E  0AD1               	incf	Lcd_Set_Cursor@b,f
   859  006F  3001               	movlw	1
   860  0070  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
   861  0075                     l1591:
   862                           
   863                           ;main.c: 53:                 Lcd_Print_String(temp);
   864  0075  303F               	movlw	(low (_temp| 0))& (0+255)
   865  0076  1283               	bcf	3,5	;RP0=0, select bank0
   866  0077  1303               	bcf	3,6	;RP1=0, select bank0
   867  0078  00D6               	movwf	Lcd_Print_String@a
   868  0079  3000               	movlw	0
   869  007A  00D7               	movwf	Lcd_Print_String@a+1
   870  007B  120A  118A  24BA  120A  118A  	fcall	_Lcd_Print_String
   871  0080                     l1593:
   872                           
   873                           ;main.c: 54:                 Lcd_Set_Cursor(2,1);
   874  0080  1283               	bcf	3,5	;RP0=0, select bank0
   875  0081  1303               	bcf	3,6	;RP1=0, select bank0
   876  0082  01D1               	clrf	Lcd_Set_Cursor@b
   877  0083  0AD1               	incf	Lcd_Set_Cursor@b,f
   878  0084  3002               	movlw	2
   879  0085  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
   880                           
   881                           ;main.c: 55:                 Lcd_Print_String(humi);
   882  008A  3031               	movlw	(low (_humi| 0))& (0+255)
   883  008B  1283               	bcf	3,5	;RP0=0, select bank0
   884  008C  1303               	bcf	3,6	;RP1=0, select bank0
   885  008D  00D6               	movwf	Lcd_Print_String@a
   886  008E  3000               	movlw	0
   887  008F  00D7               	movwf	Lcd_Print_String@a+1
   888  0090  120A  118A  24BA  120A  118A  	fcall	_Lcd_Print_String
   889                           
   890                           ;main.c: 56:             }
   891  0095  290E               	goto	l1613
   892  0096                     l1595:
   893                           
   894                           ;main.c: 58:             {;main.c: 59:                 Lcd_Print_String("Error");
   895  0096  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   896  0097  1283               	bcf	3,5	;RP0=0, select bank0
   897  0098  1303               	bcf	3,6	;RP1=0, select bank0
   898  0099  00D6               	movwf	Lcd_Print_String@a
   899  009A  3080               	movlw	128
   900  009B  00D7               	movwf	Lcd_Print_String@a+1
   901  009C  120A  118A  24BA  120A  118A  	fcall	_Lcd_Print_String
   902  00A1  290E               	goto	l1613
   903  00A2                     l1597:
   904  00A2  0368               	decf	_status,w
   905  00A3  1D03               	btfss	3,2
   906  00A4  28A6               	goto	u1401
   907  00A5  28A7               	goto	u1400
   908  00A6                     u1401:
   909  00A6  28D0               	goto	l1605
   910  00A7                     u1400:
   911  00A7                     l1599:
   912                           
   913                           ;main.c: 63:         {;main.c: 65:             Lcd_Set_Cursor(1,1);
   914  00A7  01D1               	clrf	Lcd_Set_Cursor@b
   915  00A8  0AD1               	incf	Lcd_Set_Cursor@b,f
   916  00A9  3001               	movlw	1
   917  00AA  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
   918  00AF                     l1601:
   919                           
   920                           ;main.c: 66:             Lcd_Print_String(idea_temp);
   921  00AF  3021               	movlw	(low (_idea_temp| 0))& (0+255)
   922  00B0  1283               	bcf	3,5	;RP0=0, select bank0
   923  00B1  1303               	bcf	3,6	;RP1=0, select bank0
   924  00B2  00D6               	movwf	Lcd_Print_String@a
   925  00B3  3000               	movlw	0
   926  00B4  00D7               	movwf	Lcd_Print_String@a+1
   927  00B5  120A  118A  24BA  120A  118A  	fcall	_Lcd_Print_String
   928  00BA                     l1603:
   929                           
   930                           ;main.c: 67:             Lcd_Set_Cursor(2,1);
   931  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   932  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   933  00BC  01D1               	clrf	Lcd_Set_Cursor@b
   934  00BD  0AD1               	incf	Lcd_Set_Cursor@b,f
   935  00BE  3002               	movlw	2
   936  00BF  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
   937                           
   938                           ;main.c: 68:             Lcd_Print_String(idea_humi);
   939  00C4  30A0               	movlw	(low (_idea_humi| 0))& (0+255)
   940  00C5  1283               	bcf	3,5	;RP0=0, select bank0
   941  00C6  1303               	bcf	3,6	;RP1=0, select bank0
   942  00C7  00D6               	movwf	Lcd_Print_String@a
   943  00C8  3000               	movlw	0
   944  00C9  00D7               	movwf	Lcd_Print_String@a+1
   945  00CA  120A  118A  24BA  120A  118A  	fcall	_Lcd_Print_String
   946                           
   947                           ;main.c: 69:         }
   948  00CF  290E               	goto	l1613
   949  00D0                     l1605:
   950                           
   951                           ;main.c: 71:         {;main.c: 72:             Lcd_Set_Cursor(1,1);
   952  00D0  01D1               	clrf	Lcd_Set_Cursor@b
   953  00D1  0AD1               	incf	Lcd_Set_Cursor@b,f
   954  00D2  3001               	movlw	1
   955  00D3  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
   956  00D8                     l1607:
   957                           
   958                           ;main.c: 73:             Lcd_Print_String("Handheld PWM");
   959  00D8  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   960  00D9  1283               	bcf	3,5	;RP0=0, select bank0
   961  00DA  1303               	bcf	3,6	;RP1=0, select bank0
   962  00DB  00D6               	movwf	Lcd_Print_String@a
   963  00DC  3080               	movlw	128
   964  00DD  00D7               	movwf	Lcd_Print_String@a+1
   965  00DE  120A  118A  24BA  120A  118A  	fcall	_Lcd_Print_String
   966  00E3                     l1609:
   967                           
   968                           ;main.c: 74:             Lcd_Set_Cursor(2,1);
   969  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   970  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   971  00E5  01D1               	clrf	Lcd_Set_Cursor@b
   972  00E6  0AD1               	incf	Lcd_Set_Cursor@b,f
   973  00E7  3002               	movlw	2
   974  00E8  120A  118A  2462  120A  118A  	fcall	_Lcd_Set_Cursor
   975  00ED                     l1611:
   976                           
   977                           ;main.c: 75:             setPWM(ADC_Read(0)/10);
   978  00ED  300A               	movlw	10
   979  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   980  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   981  00F0  00D3               	movwf	___awdiv@divisor
   982  00F1  3000               	movlw	0
   983  00F2  00D4               	movwf	___awdiv@divisor+1
   984  00F3  3000               	movlw	0
   985  00F4  00CD               	movwf	ADC_Read@ADC_channel
   986  00F5  00CE               	movwf	ADC_Read@ADC_channel+1
   987  00F6  120A  118A  228E  120A  118A  	fcall	_ADC_Read
   988  00FB  1283               	bcf	3,5	;RP0=0, select bank0
   989  00FC  1303               	bcf	3,6	;RP1=0, select bank0
   990  00FD  084E               	movf	?_ADC_Read+1,w
   991  00FE  00D6               	movwf	___awdiv@dividend+1
   992  00FF  084D               	movf	?_ADC_Read,w
   993  0100  00D5               	movwf	___awdiv@dividend
   994  0101  120A  118A  2225  120A  118A  	fcall	___awdiv
   995  0106  1283               	bcf	3,5	;RP0=0, select bank0
   996  0107  1303               	bcf	3,6	;RP1=0, select bank0
   997  0108  0853               	movf	?___awdiv,w
   998  0109  120A  118A  267D  120A  118A  	fcall	_setPWM
   999  010E                     l1613:
  1000                           
  1001                           ;main.c: 77:         if(status != 2) setPumpValue(rh_byte1, ihumi);
  1002  010E  3002               	movlw	2
  1003  010F  1283               	bcf	3,5	;RP0=0, select bank0
  1004  0110  1303               	bcf	3,6	;RP1=0, select bank0
  1005  0111  0668               	xorwf	_status,w
  1006  0112  1903               	btfsc	3,2
  1007  0113  2915               	goto	u1411
  1008  0114  2916               	goto	u1410
  1009  0115                     u1411:
  1010  0115  2920               	goto	l1617
  1011  0116                     u1410:
  1012  0116                     l1615:
  1013  0116  305F               	movlw	95
  1014  0117  00FF               	movwf	btemp+1
  1015  0118  087F               	movf	btemp+1,w
  1016  0119  00D0               	movwf	setPumpValue@id_rh
  1017  011A  086B               	movf	_rh_byte1,w
  1018  011B  120A  118A  2545  120A  118A  	fcall	_setPumpValue
  1019  0120                     l1617:
  1020                           
  1021                           ;main.c: 78:         _delay((unsigned long)((1000)*(20000000/4000.0)));
  1022  0120  301A               	movlw	26
  1023  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0123  00E7               	movwf	??_main+2
  1026  0124  305E               	movlw	94
  1027  0125  00E6               	movwf	??_main+1
  1028  0126  306D               	movlw	109
  1029  0127  00E5               	movwf	??_main
  1030  0128                     u1437:
  1031  0128  0BE5               	decfsz	??_main,f
  1032  0129  2928               	goto	u1437
  1033  012A  0BE6               	decfsz	??_main+1,f
  1034  012B  2928               	goto	u1437
  1035  012C  0BE7               	decfsz	??_main+2,f
  1036  012D  2928               	goto	u1437
  1037  012E  292F               	nop2
  1038  012F  2856               	goto	l1583
  1039  0130  120A  118A  2810   	ljmp	start
  1040  0133                     __end_of_main:
  1041                           
  1042                           	psect	text1
  1043  0545                     __ptext1:	
  1044 ;; *************** function _setPumpValue *****************
  1045 ;; Defined at:
  1046 ;;		line 94 in file "main.c"
  1047 ;; Parameters:    Size  Location     Type
  1048 ;;  r_rh            1    wreg     unsigned char 
  1049 ;;  id_rh           1    3[BANK0 ] unsigned char 
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;  r_rh            1    4[BANK0 ] unsigned char 
  1052 ;;  delta           1    5[BANK0 ] unsigned char 
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1062 ;;      Params:         0       1       0       0       0
  1063 ;;      Locals:         0       2       0       0       0
  1064 ;;      Temps:          0       0       0       0       0
  1065 ;;      Totals:         0       3       0       0       0
  1066 ;;Total ram usage:        3 bytes
  1067 ;; Hardware stack levels used:    1
  1068 ;; Hardware stack levels required when called:    3
  1069 ;; This function calls:
  1070 ;;		___bmul
  1071 ;;		_setPWM
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           
  1078                           ;psect for function _setPumpValue
  1079  0545                     _setPumpValue:
  1080                           
  1081                           ;incstack = 0
  1082                           ; Regs used in _setPumpValue: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1083                           ;setPumpValue@r_rh stored from wreg
  1084  0545  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0546  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0547  00D1               	movwf	setPumpValue@r_rh
  1087  0548                     l1521:
  1088                           
  1089                           ;main.c: 94: void setPumpValue(unsigned char r_rh, unsigned char id_rh);main.c: 95: {;ma
      +                          in.c: 96:     char delta = 10*(id_rh - r_rh);
  1090  0548  300A               	movlw	10
  1091  0549  00FF               	movwf	btemp+1
  1092  054A  087F               	movf	btemp+1,w
  1093  054B  00CD               	movwf	___bmul@multiplicand
  1094  054C  0851               	movf	setPumpValue@r_rh,w
  1095  054D  0250               	subwf	setPumpValue@id_rh,w
  1096  054E  120A  118A  2696  120A  118A  	fcall	___bmul
  1097  0553  00FF               	movwf	btemp+1
  1098  0554  087F               	movf	btemp+1,w
  1099  0555  1283               	bcf	3,5	;RP0=0, select bank0
  1100  0556  1303               	bcf	3,6	;RP1=0, select bank0
  1101  0557  00D2               	movwf	setPumpValue@delta
  1102  0558                     l1523:
  1103                           
  1104                           ;main.c: 97:     if(delta > 0)
  1105  0558  0852               	movf	setPumpValue@delta,w
  1106  0559  1903               	btfsc	3,2
  1107  055A  2D5C               	goto	u1271
  1108  055B  2D5D               	goto	u1270
  1109  055C                     u1271:
  1110  055C  2D7A               	goto	l1531
  1111  055D                     u1270:
  1112  055D                     l1525:
  1113                           
  1114                           ;main.c: 98:     {;main.c: 99:         if(delta < 200) setPWM(10*delta);
  1115  055D  30C8               	movlw	200
  1116  055E  0252               	subwf	setPumpValue@delta,w
  1117  055F  1803               	skipnc
  1118  0560  2D62               	goto	u1281
  1119  0561  2D63               	goto	u1280
  1120  0562                     u1281:
  1121  0562  2D73               	goto	l1529
  1122  0563                     u1280:
  1123  0563                     l1527:
  1124  0563  300A               	movlw	10
  1125  0564  00FF               	movwf	btemp+1
  1126  0565  087F               	movf	btemp+1,w
  1127  0566  00CD               	movwf	___bmul@multiplicand
  1128  0567  0852               	movf	setPumpValue@delta,w
  1129  0568  120A  118A  2696  120A  118A  	fcall	___bmul
  1130  056D  120A  118A  267D  120A  118A  	fcall	_setPWM
  1131  0572  2D80               	goto	l213
  1132  0573                     l1529:
  1133  0573  30C8               	movlw	200
  1134  0574  120A  118A  267D  120A  118A  	fcall	_setPWM
  1135  0579  2D80               	goto	l213
  1136  057A                     l1531:
  1137  057A  3000               	movlw	0
  1138  057B  120A  118A  267D  120A  118A  	fcall	_setPWM
  1139  0580                     l213:
  1140  0580  0008               	return
  1141  0581                     __end_of_setPumpValue:
  1142                           
  1143                           	psect	text2
  1144  067D                     __ptext2:	
  1145 ;; *************** function _setPWM *****************
  1146 ;; Defined at:
  1147 ;;		line 33 in file "./pwm.h"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;  DC              1    wreg     unsigned char 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  DC              1    1[BANK0 ] unsigned char 
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         0       1       0       0       0
  1163 ;;      Temps:          0       1       0       0       0
  1164 ;;      Totals:         0       2       0       0       0
  1165 ;;Total ram usage:        2 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    2
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_main
  1172 ;;		_setPumpValue
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           
  1176                           
  1177                           ;psect for function _setPWM
  1178  067D                     _setPWM:
  1179                           
  1180                           ;incstack = 0
  1181                           ; Regs used in _setPWM: [wreg+status,2+status,0]
  1182                           ;setPWM@DC stored from wreg
  1183  067D  1283               	bcf	3,5	;RP0=0, select bank0
  1184  067E  1303               	bcf	3,6	;RP1=0, select bank0
  1185  067F  00CE               	movwf	setPWM@DC
  1186  0680                     l1309:
  1187                           
  1188                           ;./pwm.h: 33: void setPWM(unsigned char DC);./pwm.h: 34: {;./pwm.h: 36:     CCP1Y = DC &
      +                           (1<<0);
  1189  0680  184E               	btfsc	setPWM@DC,0
  1190  0681  2E83               	goto	u861
  1191  0682  2E87               	goto	u860
  1192  0683                     u861:
  1193  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0685  1617               	bsf	23,4	;volatile
  1196  0686  2E8A               	goto	u874
  1197  0687                     u860:
  1198  0687  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0688  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0689  1217               	bcf	23,4	;volatile
  1201  068A                     u874:
  1202                           
  1203                           ;./pwm.h: 37:     CCP1X = DC & (1<<1);
  1204  068A  1297               	bcf	23,5	;volatile
  1205  068B                     l1311:
  1206                           
  1207                           ;./pwm.h: 39:     CCPR1L = DC >> 2;
  1208  068B  084E               	movf	setPWM@DC,w
  1209  068C  00CD               	movwf	??_setPWM
  1210  068D  3002               	movlw	2
  1211  068E                     u885:
  1212  068E  1003               	clrc
  1213  068F  0CCD               	rrf	??_setPWM,f
  1214  0690  3EFF               	addlw	-1
  1215  0691  1D03               	skipz
  1216  0692  2E8E               	goto	u885
  1217  0693  084D               	movf	??_setPWM,w
  1218  0694  0095               	movwf	21	;volatile
  1219  0695                     l163:
  1220  0695  0008               	return
  1221  0696                     __end_of_setPWM:
  1222                           
  1223                           	psect	text3
  1224  0696                     __ptext3:	
  1225 ;; *************** function ___bmul *****************
  1226 ;; Defined at:
  1227 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;  multiplier      1    wreg     unsigned char 
  1230 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;  multiplier      1    2[BANK0 ] unsigned char 
  1233 ;;  product         1    1[BANK0 ] unsigned char 
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      unsigned char 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0, btemp+1
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1243 ;;      Params:         0       1       0       0       0
  1244 ;;      Locals:         0       2       0       0       0
  1245 ;;      Temps:          0       0       0       0       0
  1246 ;;      Totals:         0       3       0       0       0
  1247 ;;Total ram usage:        3 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    2
  1250 ;; This function calls:
  1251 ;;		Nothing
  1252 ;; This function is called by:
  1253 ;;		_setPumpValue
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           
  1258                           ;psect for function ___bmul
  1259  0696                     ___bmul:
  1260                           
  1261                           ;incstack = 0
  1262                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  1263                           ;___bmul@multiplier stored from wreg
  1264  0696  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0697  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0698  00CF               	movwf	___bmul@multiplier
  1267  0699                     l1313:
  1268  0699  01CE               	clrf	___bmul@product
  1269  069A                     l1315:
  1270  069A  1C4F               	btfss	___bmul@multiplier,0
  1271  069B  2E9D               	goto	u891
  1272  069C  2E9E               	goto	u890
  1273  069D                     u891:
  1274  069D  2EA2               	goto	l1319
  1275  069E                     u890:
  1276  069E                     l1317:
  1277  069E  084D               	movf	___bmul@multiplicand,w
  1278  069F  00FF               	movwf	btemp+1
  1279  06A0  087F               	movf	btemp+1,w
  1280  06A1  07CE               	addwf	___bmul@product,f
  1281  06A2                     l1319:
  1282  06A2  1003               	clrc
  1283  06A3  0DCD               	rlf	___bmul@multiplicand,f
  1284  06A4                     l1321:
  1285  06A4  1003               	clrc
  1286  06A5  0CCF               	rrf	___bmul@multiplier,f
  1287  06A6                     l1323:
  1288  06A6  084F               	movf	___bmul@multiplier,w
  1289  06A7  1D03               	btfss	3,2
  1290  06A8  2EAA               	goto	u901
  1291  06A9  2EAB               	goto	u900
  1292  06AA                     u901:
  1293  06AA  2E9A               	goto	l1315
  1294  06AB                     u900:
  1295  06AB                     l1325:
  1296  06AB  084E               	movf	___bmul@product,w
  1297  06AC                     l325:
  1298  06AC  0008               	return
  1299  06AD                     __end_of___bmul:
  1300                           
  1301                           	psect	text4
  1302  06C0                     __ptext4:	
  1303 ;; *************** function _configPWM *****************
  1304 ;; Defined at:
  1305 ;;		line 17 in file "./pwm.h"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;		None
  1308 ;; Auto vars:     Size  Location     Type
  1309 ;;		None
  1310 ;; Return value:  Size  Location     Type
  1311 ;;                  1    wreg      void 
  1312 ;; Registers used:
  1313 ;;		wreg
  1314 ;; Tracked objects:
  1315 ;;		On entry : 0/0
  1316 ;;		On exit  : 0/0
  1317 ;;		Unchanged: 0/0
  1318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1319 ;;      Params:         0       0       0       0       0
  1320 ;;      Locals:         0       0       0       0       0
  1321 ;;      Temps:          0       0       0       0       0
  1322 ;;      Totals:         0       0       0       0       0
  1323 ;;Total ram usage:        0 bytes
  1324 ;; Hardware stack levels used:    1
  1325 ;; Hardware stack levels required when called:    2
  1326 ;; This function calls:
  1327 ;;		Nothing
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           
  1334                           ;psect for function _configPWM
  1335  06C0                     _configPWM:
  1336  06C0                     l1499:	
  1337                           ;incstack = 0
  1338                           ; Regs used in _configPWM: [wreg]
  1339                           
  1340                           
  1341                           ;./pwm.h: 20:     CCP1M2 = 1;
  1342  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  1343  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  1344  06C2  1517               	bsf	23,2	;volatile
  1345                           
  1346                           ;./pwm.h: 21:     CCP1M3 = 1;
  1347  06C3  1597               	bsf	23,3	;volatile
  1348                           
  1349                           ;./pwm.h: 23:     TRISC2 = 0;
  1350  06C4  1683               	bsf	3,5	;RP0=1, select bank1
  1351  06C5  1303               	bcf	3,6	;RP1=0, select bank1
  1352  06C6  1107               	bcf	7,2	;volatile
  1353                           
  1354                           ;./pwm.h: 25:     T2CKPS0 = 1;
  1355  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1356  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1357  06C9  1412               	bsf	18,0	;volatile
  1358                           
  1359                           ;./pwm.h: 26:     T2CKPS1 = 1;
  1360  06CA  1492               	bsf	18,1	;volatile
  1361                           
  1362                           ;./pwm.h: 27:     TMR2ON = 1;
  1363  06CB  1512               	bsf	18,2	;volatile
  1364  06CC                     l1501:
  1365                           
  1366                           ;./pwm.h: 30:     PR2 = 49;
  1367  06CC  3031               	movlw	49
  1368  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  1369  06CE  1303               	bcf	3,6	;RP1=0, select bank1
  1370  06CF  0092               	movwf	18	;volatile
  1371  06D0                     l160:
  1372  06D0  0008               	return
  1373  06D1                     __end_of_configPWM:
  1374                           
  1375                           	psect	text5
  1376  03B0                     __ptext5:	
  1377 ;; *************** function _Lcd_Start *****************
  1378 ;; Defined at:
  1379 ;;		line 85 in file "./lcd.h"
  1380 ;; Parameters:    Size  Location     Type
  1381 ;;		None
  1382 ;; Auto vars:     Size  Location     Type
  1383 ;;  i               2    0        int 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  1    wreg      void 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, pclath, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1393 ;;      Params:         0       0       0       0       0
  1394 ;;      Locals:         0       2       0       0       0
  1395 ;;      Temps:          0       2       0       0       0
  1396 ;;      Totals:         0       4       0       0       0
  1397 ;;Total ram usage:        4 bytes
  1398 ;; Hardware stack levels used:    1
  1399 ;; Hardware stack levels required when called:    4
  1400 ;; This function calls:
  1401 ;;		_Lcd_Cmd
  1402 ;;		_Lcd_SetBit
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           
  1409                           ;psect for function _Lcd_Start
  1410  03B0                     _Lcd_Start:
  1411  03B0                     l1433:	
  1412                           ;incstack = 0
  1413                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  1414                           
  1415                           
  1416                           ;./lcd.h: 87:   Lcd_SetBit(0x00);
  1417  03B0  3000               	movlw	0
  1418  03B1  120A  118A  2623  120A  118A  	fcall	_Lcd_SetBit
  1419  03B6                     l1435:
  1420  03B6                     l1437:
  1421  03B6                     l1445:
  1422                           
  1423                           ;./lcd.h: 89:   Lcd_Cmd(0x03);
  1424  03B6  3003               	movlw	3
  1425  03B7  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1426  03BC                     l1447:
  1427                           
  1428                           ;./lcd.h: 90:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1429  03BC  3021               	movlw	33
  1430  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  1431  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  1432  03BF  00D2               	movwf	??_Lcd_Start+1
  1433  03C0  3075               	movlw	117
  1434  03C1  00D1               	movwf	??_Lcd_Start
  1435  03C2                     u1447:
  1436  03C2  0BD1               	decfsz	??_Lcd_Start,f
  1437  03C3  2BC2               	goto	u1447
  1438  03C4  0BD2               	decfsz	??_Lcd_Start+1,f
  1439  03C5  2BC2               	goto	u1447
  1440  03C6  2BC7               	nop2
  1441  03C7                     l1449:
  1442                           
  1443                           ;./lcd.h: 91:   Lcd_Cmd(0x03);
  1444  03C7  3003               	movlw	3
  1445  03C8  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1446                           
  1447                           ;./lcd.h: 92:     _delay((unsigned long)((11)*(20000000/4000.0)));
  1448  03CD  3048               	movlw	72
  1449  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  1450  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  1451  03D0  00D2               	movwf	??_Lcd_Start+1
  1452  03D1  306B               	movlw	107
  1453  03D2  00D1               	movwf	??_Lcd_Start
  1454  03D3                     u1457:
  1455  03D3  0BD1               	decfsz	??_Lcd_Start,f
  1456  03D4  2BD3               	goto	u1457
  1457  03D5  0BD2               	decfsz	??_Lcd_Start+1,f
  1458  03D6  2BD3               	goto	u1457
  1459  03D7  2BD8               	nop2
  1460  03D8                     l1451:
  1461                           
  1462                           ;./lcd.h: 93:   Lcd_Cmd(0x03);
  1463  03D8  3003               	movlw	3
  1464  03D9  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1465  03DE                     l1453:
  1466                           
  1467                           ;./lcd.h: 94:   Lcd_Cmd(0x02);
  1468  03DE  3002               	movlw	2
  1469  03DF  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1470  03E4                     l1455:
  1471                           
  1472                           ;./lcd.h: 95:   Lcd_Cmd(0x02);
  1473  03E4  3002               	movlw	2
  1474  03E5  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1475  03EA                     l1457:
  1476                           
  1477                           ;./lcd.h: 96:   Lcd_Cmd(0x08);
  1478  03EA  3008               	movlw	8
  1479  03EB  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1480  03F0                     l1459:
  1481                           
  1482                           ;./lcd.h: 97:   Lcd_Cmd(0x00);
  1483  03F0  3000               	movlw	0
  1484  03F1  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1485  03F6                     l1461:
  1486                           
  1487                           ;./lcd.h: 98:   Lcd_Cmd(0x0C);
  1488  03F6  300C               	movlw	12
  1489  03F7  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1490  03FC                     l1463:
  1491                           
  1492                           ;./lcd.h: 99:   Lcd_Cmd(0x00);
  1493  03FC  3000               	movlw	0
  1494  03FD  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1495  0402                     l1465:
  1496                           
  1497                           ;./lcd.h: 100:   Lcd_Cmd(0x06);
  1498  0402  3006               	movlw	6
  1499  0403  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1500  0408                     l98:
  1501  0408  0008               	return
  1502  0409                     __end_of_Lcd_Start:
  1503                           
  1504                           	psect	text6
  1505  0462                     __ptext6:	
  1506 ;; *************** function _Lcd_Set_Cursor *****************
  1507 ;; Defined at:
  1508 ;;		line 64 in file "./lcd.h"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  a               1    wreg     unsigned char 
  1511 ;;  b               1    4[BANK0 ] unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  a               1    6[BANK0 ] unsigned char 
  1514 ;;  temp            1    9[BANK0 ] unsigned char 
  1515 ;;  y               1    8[BANK0 ] unsigned char 
  1516 ;;  z               1    7[BANK0 ] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1526 ;;      Params:         0       1       0       0       0
  1527 ;;      Locals:         0       4       0       0       0
  1528 ;;      Temps:          0       1       0       0       0
  1529 ;;      Totals:         0       6       0       0       0
  1530 ;;Total ram usage:        6 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    4
  1533 ;; This function calls:
  1534 ;;		_Lcd_Cmd
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           
  1541                           ;psect for function _Lcd_Set_Cursor
  1542  0462                     _Lcd_Set_Cursor:
  1543                           
  1544                           ;incstack = 0
  1545                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1546                           ;Lcd_Set_Cursor@a stored from wreg
  1547  0462  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0463  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0464  00D3               	movwf	Lcd_Set_Cursor@a
  1550  0465                     l1413:
  1551                           
  1552                           ;./lcd.h: 64: void Lcd_Set_Cursor(char a, char b);./lcd.h: 65: {;./lcd.h: 66:     char t
      +                          emp,z,y;;./lcd.h: 67:     if(a== 1)
  1553  0465  0353               	decf	Lcd_Set_Cursor@a,w
  1554  0466  1D03               	btfss	3,2
  1555  0467  2C69               	goto	u1101
  1556  0468  2C6A               	goto	u1100
  1557  0469                     u1101:
  1558  0469  2C8F               	goto	l1423
  1559  046A                     u1100:
  1560  046A                     l1415:
  1561                           
  1562                           ;./lcd.h: 68:     {;./lcd.h: 69:       temp = 0x80 + b - 1;
  1563  046A  0851               	movf	Lcd_Set_Cursor@b,w
  1564  046B  3E7F               	addlw	127
  1565  046C  00FF               	movwf	btemp+1
  1566  046D  087F               	movf	btemp+1,w
  1567  046E  00D6               	movwf	Lcd_Set_Cursor@temp
  1568                           
  1569                           ;./lcd.h: 70:         z = temp>>4;
  1570  046F  0856               	movf	Lcd_Set_Cursor@temp,w
  1571  0470  00D2               	movwf	??_Lcd_Set_Cursor
  1572  0471  3004               	movlw	4
  1573  0472                     u1115:
  1574  0472  1003               	clrc
  1575  0473  0CD2               	rrf	??_Lcd_Set_Cursor,f
  1576  0474  3EFF               	addlw	-1
  1577  0475  1D03               	skipz
  1578  0476  2C72               	goto	u1115
  1579  0477  0852               	movf	??_Lcd_Set_Cursor,w
  1580  0478  00FF               	movwf	btemp+1
  1581  0479  087F               	movf	btemp+1,w
  1582  047A  00D4               	movwf	Lcd_Set_Cursor@z
  1583  047B                     l1417:
  1584                           
  1585                           ;./lcd.h: 71:         y = temp & 0x0F;
  1586  047B  0856               	movf	Lcd_Set_Cursor@temp,w
  1587  047C  390F               	andlw	15
  1588  047D  00FF               	movwf	btemp+1
  1589  047E  087F               	movf	btemp+1,w
  1590  047F  00D5               	movwf	Lcd_Set_Cursor@y
  1591  0480                     l1419:
  1592                           
  1593                           ;./lcd.h: 72:         Lcd_Cmd(z);
  1594  0480  0854               	movf	Lcd_Set_Cursor@z,w
  1595  0481  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1596  0486                     l1421:
  1597                           
  1598                           ;./lcd.h: 73:         Lcd_Cmd(y);
  1599  0486  1283               	bcf	3,5	;RP0=0, select bank0
  1600  0487  1303               	bcf	3,6	;RP1=0, select bank0
  1601  0488  0855               	movf	Lcd_Set_Cursor@y,w
  1602  0489  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1603                           
  1604                           ;./lcd.h: 74:     }
  1605  048E  2CB9               	goto	l93
  1606  048F                     l1423:
  1607  048F  3002               	movlw	2
  1608  0490  0653               	xorwf	Lcd_Set_Cursor@a,w
  1609  0491  1D03               	btfss	3,2
  1610  0492  2C94               	goto	u1121
  1611  0493  2C95               	goto	u1120
  1612  0494                     u1121:
  1613  0494  2CB9               	goto	l93
  1614  0495                     u1120:
  1615  0495                     l1425:
  1616                           
  1617                           ;./lcd.h: 76:     {;./lcd.h: 77:         temp = 0xC0 + b - 1;
  1618  0495  0851               	movf	Lcd_Set_Cursor@b,w
  1619  0496  3EBF               	addlw	191
  1620  0497  00FF               	movwf	btemp+1
  1621  0498  087F               	movf	btemp+1,w
  1622  0499  00D6               	movwf	Lcd_Set_Cursor@temp
  1623                           
  1624                           ;./lcd.h: 78:         z = temp>>4;
  1625  049A  0856               	movf	Lcd_Set_Cursor@temp,w
  1626  049B  00D2               	movwf	??_Lcd_Set_Cursor
  1627  049C  3004               	movlw	4
  1628  049D                     u1135:
  1629  049D  1003               	clrc
  1630  049E  0CD2               	rrf	??_Lcd_Set_Cursor,f
  1631  049F  3EFF               	addlw	-1
  1632  04A0  1D03               	skipz
  1633  04A1  2C9D               	goto	u1135
  1634  04A2  0852               	movf	??_Lcd_Set_Cursor,w
  1635  04A3  00FF               	movwf	btemp+1
  1636  04A4  087F               	movf	btemp+1,w
  1637  04A5  00D4               	movwf	Lcd_Set_Cursor@z
  1638  04A6                     l1427:
  1639                           
  1640                           ;./lcd.h: 79:         y = temp & 0x0F;
  1641  04A6  0856               	movf	Lcd_Set_Cursor@temp,w
  1642  04A7  390F               	andlw	15
  1643  04A8  00FF               	movwf	btemp+1
  1644  04A9  087F               	movf	btemp+1,w
  1645  04AA  00D5               	movwf	Lcd_Set_Cursor@y
  1646  04AB                     l1429:
  1647                           
  1648                           ;./lcd.h: 80:         Lcd_Cmd(z);
  1649  04AB  0854               	movf	Lcd_Set_Cursor@z,w
  1650  04AC  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1651  04B1                     l1431:
  1652                           
  1653                           ;./lcd.h: 81:         Lcd_Cmd(y);
  1654  04B1  1283               	bcf	3,5	;RP0=0, select bank0
  1655  04B2  1303               	bcf	3,6	;RP1=0, select bank0
  1656  04B3  0855               	movf	Lcd_Set_Cursor@y,w
  1657  04B4  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  1658  04B9                     l93:
  1659  04B9  0008               	return
  1660  04BA                     __end_of_Lcd_Set_Cursor:
  1661                           
  1662                           	psect	text7
  1663  04BA                     __ptext7:	
  1664 ;; *************** function _Lcd_Print_String *****************
  1665 ;; Defined at:
  1666 ;;		line 119 in file "./lcd.h"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  a               2    9[BANK0 ] PTR unsigned char 
  1669 ;;		 -> STR_2(13), idea_humi(16), idea_temp(16), STR_1(6), 
  1670 ;;		 -> humi(14), temp(14), 
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;  i               2   14[BANK0 ] int 
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1682 ;;      Params:         0       2       0       0       0
  1683 ;;      Locals:         0       2       0       0       0
  1684 ;;      Temps:          0       3       0       0       0
  1685 ;;      Totals:         0       7       0       0       0
  1686 ;;Total ram usage:        7 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    4
  1689 ;; This function calls:
  1690 ;;		_Lcd_Print_Char
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _Lcd_Print_String
  1698  04BA                     _Lcd_Print_String:
  1699  04BA                     l1467:	
  1700                           ;incstack = 0
  1701                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1702                           
  1703                           
  1704                           ;./lcd.h: 119: void Lcd_Print_String(char *a);./lcd.h: 120: {;./lcd.h: 121:     int i;;.
      +                          /lcd.h: 122:     for(i=0;a[i]!='\0';i++)
  1705  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  1706  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  1707  04BC  01DB               	clrf	Lcd_Print_String@i
  1708  04BD  01DC               	clrf	Lcd_Print_String@i+1
  1709  04BE  2CE3               	goto	l1473
  1710  04BF                     l1469:
  1711                           
  1712                           ;./lcd.h: 123:        Lcd_Print_Char(a[i]);
  1713  04BF  085B               	movf	Lcd_Print_String@i,w
  1714  04C0  0756               	addwf	Lcd_Print_String@a,w
  1715  04C1  00D9               	movwf	??_Lcd_Print_String+1
  1716  04C2  0857               	movf	Lcd_Print_String@a+1,w
  1717  04C3  00D8               	movwf	??_Lcd_Print_String
  1718  04C4  1803               	skipnc
  1719  04C5  0AD8               	incf	??_Lcd_Print_String,f
  1720  04C6  1FDB               	btfss	Lcd_Print_String@i,7
  1721  04C7  2CC9               	goto	u1140
  1722  04C8  03D8               	decf	??_Lcd_Print_String,f
  1723  04C9                     u1140:
  1724  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1725  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1726  04CB  0858               	movf	??_Lcd_Print_String,w
  1727  04CC  00DA               	movwf	??_Lcd_Print_String+2
  1728  04CD  085A               	movf	??_Lcd_Print_String+2,w
  1729  04CE  00FF               	movwf	btemp+1
  1730  04CF  0859               	movf	??_Lcd_Print_String+1,w
  1731  04D0  0084               	movwf	4
  1732  04D1  120A  118A  2600  120A  118A  	fcall	stringtab
  1733  04D6  120A  118A  22F2  120A  118A  	fcall	_Lcd_Print_Char
  1734  04DB                     l1471:
  1735  04DB  3001               	movlw	1
  1736  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  1737  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  1738  04DE  07DB               	addwf	Lcd_Print_String@i,f
  1739  04DF  1803               	skipnc
  1740  04E0  0ADC               	incf	Lcd_Print_String@i+1,f
  1741  04E1  3000               	movlw	0
  1742  04E2  07DC               	addwf	Lcd_Print_String@i+1,f
  1743  04E3                     l1473:
  1744  04E3  085B               	movf	Lcd_Print_String@i,w
  1745  04E4  0756               	addwf	Lcd_Print_String@a,w
  1746  04E5  00D9               	movwf	??_Lcd_Print_String+1
  1747  04E6  0857               	movf	Lcd_Print_String@a+1,w
  1748  04E7  00D8               	movwf	??_Lcd_Print_String
  1749  04E8  1803               	skipnc
  1750  04E9  0AD8               	incf	??_Lcd_Print_String,f
  1751  04EA  1FDB               	btfss	Lcd_Print_String@i,7
  1752  04EB  2CED               	goto	u1150
  1753  04EC  03D8               	decf	??_Lcd_Print_String,f
  1754  04ED                     u1150:
  1755  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  1756  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  1757  04EF  0858               	movf	??_Lcd_Print_String,w
  1758  04F0  00DA               	movwf	??_Lcd_Print_String+2
  1759  04F1  085A               	movf	??_Lcd_Print_String+2,w
  1760  04F2  00FF               	movwf	btemp+1
  1761  04F3  0859               	movf	??_Lcd_Print_String+1,w
  1762  04F4  0084               	movwf	4
  1763  04F5  120A  118A  2600  120A  118A  	fcall	stringtab
  1764  04FA  3A00               	xorlw	0
  1765  04FB  1D03               	skipz
  1766  04FC  2CFE               	goto	u1161
  1767  04FD  2CFF               	goto	u1160
  1768  04FE                     u1161:
  1769  04FE  2CBF               	goto	l1469
  1770  04FF                     u1160:
  1771  04FF                     l111:
  1772  04FF  0008               	return
  1773  0500                     __end_of_Lcd_Print_String:
  1774                           
  1775                           	psect	text8
  1776  02F2                     __ptext8:	
  1777 ;; *************** function _Lcd_Print_Char *****************
  1778 ;; Defined at:
  1779 ;;		line 103 in file "./lcd.h"
  1780 ;; Parameters:    Size  Location     Type
  1781 ;;  data            1    wreg     unsigned char 
  1782 ;; Auto vars:     Size  Location     Type
  1783 ;;  data            1    4[BANK0 ] unsigned char 
  1784 ;;  i               2    7[BANK0 ] int 
  1785 ;;  i               2    5[BANK0 ] int 
  1786 ;;  Upper_Nibble    1    3[BANK0 ] unsigned char 
  1787 ;;  Lower_Nibble    1    2[BANK0 ] unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1797 ;;      Params:         0       0       0       0       0
  1798 ;;      Locals:         0       7       0       0       0
  1799 ;;      Temps:          0       1       0       0       0
  1800 ;;      Totals:         0       8       0       0       0
  1801 ;;Total ram usage:        8 bytes
  1802 ;; Hardware stack levels used:    1
  1803 ;; Hardware stack levels required when called:    3
  1804 ;; This function calls:
  1805 ;;		_Lcd_SetBit
  1806 ;; This function is called by:
  1807 ;;		_Lcd_Print_String
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           
  1812                           ;psect for function _Lcd_Print_Char
  1813  02F2                     _Lcd_Print_Char:
  1814                           
  1815                           ;incstack = 0
  1816                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1817                           ;Lcd_Print_Char@data stored from wreg
  1818  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  1819  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  1820  02F4  00D1               	movwf	Lcd_Print_Char@data
  1821  02F5                     l1235:
  1822                           
  1823                           ;./lcd.h: 103: void Lcd_Print_Char(char data);./lcd.h: 104: {;./lcd.h: 105:    char Lowe
      +                          r_Nibble,Upper_Nibble;;./lcd.h: 106:    Lower_Nibble = data&0x0F;
  1824  02F5  0851               	movf	Lcd_Print_Char@data,w
  1825  02F6  390F               	andlw	15
  1826  02F7  00FF               	movwf	btemp+1
  1827  02F8  087F               	movf	btemp+1,w
  1828  02F9  00CF               	movwf	Lcd_Print_Char@Lower_Nibble
  1829                           
  1830                           ;./lcd.h: 107:    Upper_Nibble = data&0xF0;
  1831  02FA  0851               	movf	Lcd_Print_Char@data,w
  1832  02FB  39F0               	andlw	240
  1833  02FC  00FF               	movwf	btemp+1
  1834  02FD  087F               	movf	btemp+1,w
  1835  02FE  00D0               	movwf	Lcd_Print_Char@Upper_Nibble
  1836  02FF                     l1237:
  1837                           
  1838                           ;./lcd.h: 108:    RD1 = 1;
  1839  02FF  1488               	bsf	8,1	;volatile
  1840  0300                     l1239:
  1841                           
  1842                           ;./lcd.h: 109:    Lcd_SetBit(Upper_Nibble>>4);
  1843  0300  0850               	movf	Lcd_Print_Char@Upper_Nibble,w
  1844  0301  00CE               	movwf	??_Lcd_Print_Char
  1845  0302  3004               	movlw	4
  1846  0303                     u765:
  1847  0303  1003               	clrc
  1848  0304  0CCE               	rrf	??_Lcd_Print_Char,f
  1849  0305  3EFF               	addlw	-1
  1850  0306  1D03               	skipz
  1851  0307  2B03               	goto	u765
  1852  0308  084E               	movf	??_Lcd_Print_Char,w
  1853  0309  120A  118A  2623  120A  118A  	fcall	_Lcd_SetBit
  1854  030E                     l1241:
  1855                           
  1856                           ;./lcd.h: 110:    RD3 = 1;
  1857  030E  1283               	bcf	3,5	;RP0=0, select bank0
  1858  030F  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0310  1588               	bsf	8,3	;volatile
  1860  0311                     l1243:
  1861                           
  1862                           ;./lcd.h: 111:    for(int i=2130483; i<=0; i--) __nop();
  1863  0311  3033               	movlw	51
  1864  0312  00D2               	movwf	Lcd_Print_Char@i
  1865  0313  3082               	movlw	130
  1866  0314  00D3               	movwf	Lcd_Print_Char@i+1
  1867  0315                     l101:
  1868  0315  0000               	nop
  1869  0316                     l1249:
  1870  0316  30FF               	movlw	255
  1871  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0319  07D2               	addwf	Lcd_Print_Char@i,f
  1874  031A  1803               	skipnc
  1875  031B  0AD3               	incf	Lcd_Print_Char@i+1,f
  1876  031C  30FF               	movlw	255
  1877  031D  07D3               	addwf	Lcd_Print_Char@i+1,f
  1878  031E                     l1251:
  1879  031E  0853               	movf	Lcd_Print_Char@i+1,w
  1880  031F  3A80               	xorlw	128
  1881  0320  00FF               	movwf	btemp+1
  1882  0321  3080               	movlw	128
  1883  0322  027F               	subwf	btemp+1,w
  1884  0323  1D03               	skipz
  1885  0324  2B27               	goto	u775
  1886  0325  3001               	movlw	1
  1887  0326  0252               	subwf	Lcd_Print_Char@i,w
  1888  0327                     u775:
  1889  0327  1C03               	skipc
  1890  0328  2B2A               	goto	u771
  1891  0329  2B2B               	goto	u770
  1892  032A                     u771:
  1893  032A  2B15               	goto	l101
  1894  032B                     u770:
  1895  032B                     l102:
  1896                           
  1897                           ;./lcd.h: 112:    RD3 = 0;
  1898  032B  1283               	bcf	3,5	;RP0=0, select bank0
  1899  032C  1303               	bcf	3,6	;RP1=0, select bank0
  1900  032D  1188               	bcf	8,3	;volatile
  1901  032E                     l1253:
  1902                           
  1903                           ;./lcd.h: 113:    Lcd_SetBit(Lower_Nibble);
  1904  032E  084F               	movf	Lcd_Print_Char@Lower_Nibble,w
  1905  032F  120A  118A  2623  120A  118A  	fcall	_Lcd_SetBit
  1906  0334                     l1255:
  1907                           
  1908                           ;./lcd.h: 114:    RD3 = 1;
  1909  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0336  1588               	bsf	8,3	;volatile
  1912  0337                     l1257:
  1913                           
  1914                           ;./lcd.h: 115:    for(int i=2130483; i<=0; i--) __nop();
  1915  0337  3033               	movlw	51
  1916  0338  00D4               	movwf	Lcd_Print_Char@i_90
  1917  0339  3082               	movlw	130
  1918  033A  00D5               	movwf	Lcd_Print_Char@i_90+1
  1919  033B                     l103:
  1920  033B  0000               	nop
  1921  033C                     l1263:
  1922  033C  30FF               	movlw	255
  1923  033D  1283               	bcf	3,5	;RP0=0, select bank0
  1924  033E  1303               	bcf	3,6	;RP1=0, select bank0
  1925  033F  07D4               	addwf	Lcd_Print_Char@i_90,f
  1926  0340  1803               	skipnc
  1927  0341  0AD5               	incf	Lcd_Print_Char@i_90+1,f
  1928  0342  30FF               	movlw	255
  1929  0343  07D5               	addwf	Lcd_Print_Char@i_90+1,f
  1930  0344                     l1265:
  1931  0344  0855               	movf	Lcd_Print_Char@i_90+1,w
  1932  0345  3A80               	xorlw	128
  1933  0346  00FF               	movwf	btemp+1
  1934  0347  3080               	movlw	128
  1935  0348  027F               	subwf	btemp+1,w
  1936  0349  1D03               	skipz
  1937  034A  2B4D               	goto	u785
  1938  034B  3001               	movlw	1
  1939  034C  0254               	subwf	Lcd_Print_Char@i_90,w
  1940  034D                     u785:
  1941  034D  1C03               	skipc
  1942  034E  2B50               	goto	u781
  1943  034F  2B51               	goto	u780
  1944  0350                     u781:
  1945  0350  2B3B               	goto	l103
  1946  0351                     u780:
  1947  0351                     l104:
  1948                           
  1949                           ;./lcd.h: 116:    RD3 = 0;
  1950  0351  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0352  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0353  1188               	bcf	8,3	;volatile
  1953  0354                     l105:
  1954  0354  0008               	return
  1955  0355                     __end_of_Lcd_Print_Char:
  1956                           
  1957                           	psect	text9
  1958  06E1                     __ptext9:	
  1959 ;; *************** function _Lcd_Clear *****************
  1960 ;; Defined at:
  1961 ;;		line 58 in file "./lcd.h"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;		None
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;		None
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  1    wreg      void 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, pclath, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1975 ;;      Params:         0       0       0       0       0
  1976 ;;      Locals:         0       0       0       0       0
  1977 ;;      Temps:          0       0       0       0       0
  1978 ;;      Totals:         0       0       0       0       0
  1979 ;;Total ram usage:        0 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    4
  1982 ;; This function calls:
  1983 ;;		_Lcd_Cmd
  1984 ;; This function is called by:
  1985 ;;		_main
  1986 ;; This function uses a non-reentrant model
  1987 ;;
  1988                           
  1989                           
  1990                           ;psect for function _Lcd_Clear
  1991  06E1                     _Lcd_Clear:
  1992  06E1                     l1411:	
  1993                           ;incstack = 0
  1994                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1995                           
  1996                           
  1997                           ;./lcd.h: 60:     Lcd_Cmd(0);
  1998  06E1  3000               	movlw	0
  1999  06E2  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  2000                           
  2001                           ;./lcd.h: 61:     Lcd_Cmd(1);
  2002  06E7  3001               	movlw	1
  2003  06E8  120A  118A  2661  120A  118A  	fcall	_Lcd_Cmd
  2004  06ED                     l87:
  2005  06ED  0008               	return
  2006  06EE                     __end_of_Lcd_Clear:
  2007                           
  2008                           	psect	text10
  2009  0661                     __ptext10:	
  2010 ;; *************** function _Lcd_Cmd *****************
  2011 ;; Defined at:
  2012 ;;		line 49 in file "./lcd.h"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  a               1    wreg     unsigned char 
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;  a               1    3[BANK0 ] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0, pclath, cstack
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2026 ;;      Params:         0       0       0       0       0
  2027 ;;      Locals:         0       1       0       0       0
  2028 ;;      Temps:          0       2       0       0       0
  2029 ;;      Totals:         0       3       0       0       0
  2030 ;;Total ram usage:        3 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    3
  2033 ;; This function calls:
  2034 ;;		_Lcd_SetBit
  2035 ;; This function is called by:
  2036 ;;		_Lcd_Clear
  2037 ;;		_Lcd_Set_Cursor
  2038 ;;		_Lcd_Start
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           
  2043                           ;psect for function _Lcd_Cmd
  2044  0661                     _Lcd_Cmd:
  2045                           
  2046                           ;incstack = 0
  2047                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2048                           ;Lcd_Cmd@a stored from wreg
  2049  0661  1283               	bcf	3,5	;RP0=0, select bank0
  2050  0662  1303               	bcf	3,6	;RP1=0, select bank0
  2051  0663  00D0               	movwf	Lcd_Cmd@a
  2052  0664                     l1225:
  2053                           
  2054                           ;./lcd.h: 49: void Lcd_Cmd(char a);./lcd.h: 50: {;./lcd.h: 51:     RD1 = 0;
  2055  0664  1088               	bcf	8,1	;volatile
  2056  0665                     l1227:
  2057                           
  2058                           ;./lcd.h: 52:     Lcd_SetBit(a);
  2059  0665  0850               	movf	Lcd_Cmd@a,w
  2060  0666  120A  118A  2623  120A  118A  	fcall	_Lcd_SetBit
  2061  066B                     l1229:
  2062                           
  2063                           ;./lcd.h: 53:     RD3 = 1;
  2064  066B  1283               	bcf	3,5	;RP0=0, select bank0
  2065  066C  1303               	bcf	3,6	;RP1=0, select bank0
  2066  066D  1588               	bsf	8,3	;volatile
  2067  066E                     l1231:
  2068                           
  2069                           ;./lcd.h: 54:     _delay((unsigned long)((4)*(20000000/4000.0)));
  2070  066E  301A               	movlw	26
  2071  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0671  00CF               	movwf	??_Lcd_Cmd+1
  2074  0672  30F7               	movlw	247
  2075  0673  00CE               	movwf	??_Lcd_Cmd
  2076  0674                     u1467:
  2077  0674  0BCE               	decfsz	??_Lcd_Cmd,f
  2078  0675  2E74               	goto	u1467
  2079  0676  0BCF               	decfsz	??_Lcd_Cmd+1,f
  2080  0677  2E74               	goto	u1467
  2081  0678  2E79               	nop2
  2082  0679                     l1233:
  2083                           
  2084                           ;./lcd.h: 55:     RD3 = 0;
  2085  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2086  067A  1303               	bcf	3,6	;RP1=0, select bank0
  2087  067B  1188               	bcf	8,3	;volatile
  2088  067C                     l84:
  2089  067C  0008               	return
  2090  067D                     __end_of_Lcd_Cmd:
  2091                           
  2092                           	psect	text11
  2093  0623                     __ptext11:	
  2094 ;; *************** function _Lcd_SetBit *****************
  2095 ;; Defined at:
  2096 ;;		line 26 in file "./lcd.h"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  data_bit        1    wreg     unsigned char 
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  data_bit        1    0[BANK0 ] unsigned char 
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2110 ;;      Params:         0       0       0       0       0
  2111 ;;      Locals:         0       1       0       0       0
  2112 ;;      Temps:          0       0       0       0       0
  2113 ;;      Totals:         0       1       0       0       0
  2114 ;;Total ram usage:        1 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:    2
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_Lcd_Cmd
  2121 ;;		_Lcd_Start
  2122 ;;		_Lcd_Print_Char
  2123 ;; This function uses a non-reentrant model
  2124 ;;
  2125                           
  2126                           
  2127                           ;psect for function _Lcd_SetBit
  2128  0623                     _Lcd_SetBit:
  2129                           
  2130                           ;incstack = 0
  2131                           ; Regs used in _Lcd_SetBit: [wreg]
  2132                           ;Lcd_SetBit@data_bit stored from wreg
  2133  0623  1283               	bcf	3,5	;RP0=0, select bank0
  2134  0624  1303               	bcf	3,6	;RP1=0, select bank0
  2135  0625  00CD               	movwf	Lcd_SetBit@data_bit
  2136  0626                     l1215:
  2137                           
  2138                           ;./lcd.h: 26: void Lcd_SetBit(char data_bit);./lcd.h: 27: {;./lcd.h: 28:     if(data_bit
      +                          & 1)
  2139  0626  1C4D               	btfss	Lcd_SetBit@data_bit,0
  2140  0627  2E29               	goto	u721
  2141  0628  2E2A               	goto	u720
  2142  0629                     u721:
  2143  0629  2E2C               	goto	l73
  2144  062A                     u720:
  2145  062A                     l1217:
  2146                           
  2147                           ;./lcd.h: 29:         RD4 = 1;
  2148  062A  1608               	bsf	8,4	;volatile
  2149  062B  2E2D               	goto	l74
  2150  062C                     l73:	
  2151                           ;./lcd.h: 30:     else
  2152                           
  2153                           
  2154                           ;./lcd.h: 31:         RD4 = 0;
  2155  062C  1208               	bcf	8,4	;volatile
  2156  062D                     l74:
  2157                           
  2158                           ;./lcd.h: 33:     if(data_bit& 2)
  2159  062D  1CCD               	btfss	Lcd_SetBit@data_bit,1
  2160  062E  2E30               	goto	u731
  2161  062F  2E31               	goto	u730
  2162  0630                     u731:
  2163  0630  2E33               	goto	l75
  2164  0631                     u730:
  2165  0631                     l1219:
  2166                           
  2167                           ;./lcd.h: 34:         RD5 = 1;
  2168  0631  1688               	bsf	8,5	;volatile
  2169  0632  2E34               	goto	l76
  2170  0633                     l75:	
  2171                           ;./lcd.h: 35:     else
  2172                           
  2173                           
  2174                           ;./lcd.h: 36:         RD5 = 0;
  2175  0633  1288               	bcf	8,5	;volatile
  2176  0634                     l76:
  2177                           
  2178                           ;./lcd.h: 38:     if(data_bit& 4)
  2179  0634  1D4D               	btfss	Lcd_SetBit@data_bit,2
  2180  0635  2E37               	goto	u741
  2181  0636  2E38               	goto	u740
  2182  0637                     u741:
  2183  0637  2E3A               	goto	l77
  2184  0638                     u740:
  2185  0638                     l1221:
  2186                           
  2187                           ;./lcd.h: 39:         RD6 = 1;
  2188  0638  1708               	bsf	8,6	;volatile
  2189  0639  2E3B               	goto	l78
  2190  063A                     l77:	
  2191                           ;./lcd.h: 40:     else
  2192                           
  2193                           
  2194                           ;./lcd.h: 41:         RD6 = 0;
  2195  063A  1308               	bcf	8,6	;volatile
  2196  063B                     l78:
  2197                           
  2198                           ;./lcd.h: 43:     if(data_bit& 8)
  2199  063B  1DCD               	btfss	Lcd_SetBit@data_bit,3
  2200  063C  2E3E               	goto	u751
  2201  063D  2E3F               	goto	u750
  2202  063E                     u751:
  2203  063E  2E41               	goto	l79
  2204  063F                     u750:
  2205  063F                     l1223:
  2206                           
  2207                           ;./lcd.h: 44:         RD7 = 1;
  2208  063F  1788               	bsf	8,7	;volatile
  2209  0640  2E42               	goto	l81
  2210  0641                     l79:	
  2211                           ;./lcd.h: 45:     else
  2212                           
  2213                           
  2214                           ;./lcd.h: 46:         RD7 = 0;
  2215  0641  1388               	bcf	8,7	;volatile
  2216  0642                     l81:
  2217  0642  0008               	return
  2218  0643                     __end_of_Lcd_SetBit:
  2219                           
  2220                           	psect	text12
  2221  0133                     __ptext12:	
  2222 ;; *************** function _DhtUpdateData *****************
  2223 ;; Defined at:
  2224 ;;		line 67 in file "./dht11.h"
  2225 ;; Parameters:    Size  Location     Type
  2226 ;;		None
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;		None
  2229 ;; Return value:  Size  Location     Type
  2230 ;;		None               void
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2238 ;;      Params:         0       0       0       0       0
  2239 ;;      Locals:         0       0       0       0       0
  2240 ;;      Temps:          0      10       0       0       0
  2241 ;;      Totals:         0      10       0       0       0
  2242 ;;Total ram usage:       10 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    3
  2245 ;; This function calls:
  2246 ;;		_DhtCheckResponse
  2247 ;;		_DhtReadData
  2248 ;;		_DhtStartSignal
  2249 ;;		___awdiv
  2250 ;;		___awmod
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           
  2257                           ;psect for function _DhtUpdateData
  2258  0133                     _DhtUpdateData:
  2259  0133                     l1475:	
  2260                           ;incstack = 0
  2261                           ; Regs used in _DhtUpdateData: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2262                           
  2263                           
  2264                           ;./dht11.h: 69:     DhtStartSignal();
  2265  0133  120A  118A  2643  120A  118A  	fcall	_DhtStartSignal
  2266                           
  2267                           ;./dht11.h: 70:     DhtCheckResponse();
  2268  0138  120A  118A  25AE  120A  118A  	fcall	_DhtCheckResponse
  2269  013D                     l1477:
  2270                           
  2271                           ;./dht11.h: 72:     rh_byte1 = DhtReadData();
  2272  013D  120A  118A  2500  120A  118A  	fcall	_DhtReadData
  2273  0142  00FF               	movwf	btemp+1
  2274  0143  087F               	movf	btemp+1,w
  2275  0144  1283               	bcf	3,5	;RP0=0, select bank0
  2276  0145  1303               	bcf	3,6	;RP1=0, select bank0
  2277  0146  00EB               	movwf	_rh_byte1
  2278  0147                     l1479:
  2279                           
  2280                           ;./dht11.h: 73:     rh_byte2 = DhtReadData();
  2281  0147  120A  118A  2500  120A  118A  	fcall	_DhtReadData
  2282  014C  00FF               	movwf	btemp+1
  2283  014D  087F               	movf	btemp+1,w
  2284  014E  1283               	bcf	3,5	;RP0=0, select bank0
  2285  014F  1303               	bcf	3,6	;RP1=0, select bank0
  2286  0150  00EA               	movwf	_rh_byte2
  2287  0151                     l1481:
  2288                           
  2289                           ;./dht11.h: 74:     t_byte1 = DhtReadData();
  2290  0151  120A  118A  2500  120A  118A  	fcall	_DhtReadData
  2291  0156  00FF               	movwf	btemp+1
  2292  0157  087F               	movf	btemp+1,w
  2293  0158  1283               	bcf	3,5	;RP0=0, select bank0
  2294  0159  1303               	bcf	3,6	;RP1=0, select bank0
  2295  015A  00ED               	movwf	_t_byte1
  2296  015B                     l1483:
  2297                           
  2298                           ;./dht11.h: 75:     t_byte2 = DhtReadData();
  2299  015B  120A  118A  2500  120A  118A  	fcall	_DhtReadData
  2300  0160  00FF               	movwf	btemp+1
  2301  0161  087F               	movf	btemp+1,w
  2302  0162  1283               	bcf	3,5	;RP0=0, select bank0
  2303  0163  1303               	bcf	3,6	;RP1=0, select bank0
  2304  0164  00EC               	movwf	_t_byte2
  2305  0165                     l1485:
  2306                           
  2307                           ;./dht11.h: 76:     check_sum = DhtReadData();
  2308  0165  120A  118A  2500  120A  118A  	fcall	_DhtReadData
  2309  016A  00FF               	movwf	btemp+1
  2310  016B  087F               	movf	btemp+1,w
  2311  016C  1283               	bcf	3,5	;RP0=0, select bank0
  2312  016D  1303               	bcf	3,6	;RP1=0, select bank0
  2313  016E  00E9               	movwf	_check_sum
  2314  016F                     l1487:
  2315                           
  2316                           ;./dht11.h: 78:     if(check_sum == ((rh_byte1 + rh_byte2 + t_byte1 + t_byte2) & 0xFF))
  2317  016F  086B               	movf	_rh_byte1,w
  2318  0170  076A               	addwf	_rh_byte2,w
  2319  0171  00DB               	movwf	??_DhtUpdateData
  2320  0172  01DC               	clrf	??_DhtUpdateData+1
  2321  0173  0DDC               	rlf	??_DhtUpdateData+1,f
  2322  0174  086D               	movf	_t_byte1,w
  2323  0175  075B               	addwf	??_DhtUpdateData,w
  2324  0176  00DD               	movwf	??_DhtUpdateData+2
  2325  0177  3000               	movlw	0
  2326  0178  1803               	skipnc
  2327  0179  3001               	movlw	1
  2328  017A  075C               	addwf	??_DhtUpdateData+1,w
  2329  017B  00DE               	movwf	??_DhtUpdateData+3
  2330  017C  086C               	movf	_t_byte2,w
  2331  017D  075D               	addwf	??_DhtUpdateData+2,w
  2332  017E  00DF               	movwf	??_DhtUpdateData+4
  2333  017F  3000               	movlw	0
  2334  0180  1803               	skipnc
  2335  0181  3001               	movlw	1
  2336  0182  075E               	addwf	??_DhtUpdateData+3,w
  2337  0183  00E0               	movwf	??_DhtUpdateData+5
  2338  0184  30FF               	movlw	255
  2339  0185  055F               	andwf	??_DhtUpdateData+4,w
  2340  0186  00E1               	movwf	??_DhtUpdateData+6
  2341  0187  3000               	movlw	0
  2342  0188  0560               	andwf	??_DhtUpdateData+5,w
  2343  0189  00E2               	movwf	??_DhtUpdateData+7
  2344  018A  0869               	movf	_check_sum,w
  2345  018B  00E3               	movwf	??_DhtUpdateData+8
  2346  018C  01E4               	clrf	??_DhtUpdateData+9
  2347  018D  0862               	movf	??_DhtUpdateData+7,w
  2348  018E  0664               	xorwf	??_DhtUpdateData+9,w
  2349  018F  1D03               	skipz
  2350  0190  2993               	goto	u1175
  2351  0191  0861               	movf	??_DhtUpdateData+6,w
  2352  0192  0663               	xorwf	??_DhtUpdateData+8,w
  2353  0193                     u1175:
  2354  0193  1D03               	skipz
  2355  0194  2996               	goto	u1171
  2356  0195  2997               	goto	u1170
  2357  0196                     u1171:
  2358  0196  2A23               	goto	l1495
  2359  0197                     u1170:
  2360  0197                     l1489:
  2361                           
  2362                           ;./dht11.h: 79:     {;./dht11.h: 80:         temp[7] = t_byte1 / 10 + 48;
  2363  0197  300A               	movlw	10
  2364  0198  00D3               	movwf	___awdiv@divisor
  2365  0199  3000               	movlw	0
  2366  019A  00D4               	movwf	___awdiv@divisor+1
  2367  019B  086D               	movf	_t_byte1,w
  2368  019C  00DB               	movwf	??_DhtUpdateData
  2369  019D  01DC               	clrf	??_DhtUpdateData+1
  2370  019E  085B               	movf	??_DhtUpdateData,w
  2371  019F  00D5               	movwf	___awdiv@dividend
  2372  01A0  085C               	movf	??_DhtUpdateData+1,w
  2373  01A1  00D6               	movwf	___awdiv@dividend+1
  2374  01A2  120A  118A  2225  120A  118A  	fcall	___awdiv
  2375  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  2376  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  2377  01A9  0853               	movf	?___awdiv,w
  2378  01AA  3E30               	addlw	48
  2379  01AB  00FF               	movwf	btemp+1
  2380  01AC  087F               	movf	btemp+1,w
  2381  01AD  00C6               	movwf	_temp+7
  2382                           
  2383                           ;./dht11.h: 81:         temp[8] = t_byte1 % 10 + 48;
  2384  01AE  300A               	movlw	10
  2385  01AF  00CD               	movwf	___awmod@divisor
  2386  01B0  3000               	movlw	0
  2387  01B1  00CE               	movwf	___awmod@divisor+1
  2388  01B2  086D               	movf	_t_byte1,w
  2389  01B3  00DB               	movwf	??_DhtUpdateData
  2390  01B4  01DC               	clrf	??_DhtUpdateData+1
  2391  01B5  085B               	movf	??_DhtUpdateData,w
  2392  01B6  00CF               	movwf	___awmod@dividend
  2393  01B7  085C               	movf	??_DhtUpdateData+1,w
  2394  01B8  00D0               	movwf	___awmod@dividend+1
  2395  01B9  120A  118A  2355  120A  118A  	fcall	___awmod
  2396  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  2397  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  2398  01C0  084D               	movf	?___awmod,w
  2399  01C1  3E30               	addlw	48
  2400  01C2  00FF               	movwf	btemp+1
  2401  01C3  087F               	movf	btemp+1,w
  2402  01C4  00C7               	movwf	_temp+8
  2403                           
  2404                           ;./dht11.h: 82:         temp[10] = t_byte2 / 10 + 48;
  2405  01C5  300A               	movlw	10
  2406  01C6  00D3               	movwf	___awdiv@divisor
  2407  01C7  3000               	movlw	0
  2408  01C8  00D4               	movwf	___awdiv@divisor+1
  2409  01C9  086C               	movf	_t_byte2,w
  2410  01CA  00DB               	movwf	??_DhtUpdateData
  2411  01CB  01DC               	clrf	??_DhtUpdateData+1
  2412  01CC  085B               	movf	??_DhtUpdateData,w
  2413  01CD  00D5               	movwf	___awdiv@dividend
  2414  01CE  085C               	movf	??_DhtUpdateData+1,w
  2415  01CF  00D6               	movwf	___awdiv@dividend+1
  2416  01D0  120A  118A  2225  120A  118A  	fcall	___awdiv
  2417  01D5  1283               	bcf	3,5	;RP0=0, select bank0
  2418  01D6  1303               	bcf	3,6	;RP1=0, select bank0
  2419  01D7  0853               	movf	?___awdiv,w
  2420  01D8  3E30               	addlw	48
  2421  01D9  00FF               	movwf	btemp+1
  2422  01DA  087F               	movf	btemp+1,w
  2423  01DB  00C9               	movwf	_temp+10
  2424                           
  2425                           ;./dht11.h: 84:         humi[7] = rh_byte1 / 10 + 48;
  2426  01DC  300A               	movlw	10
  2427  01DD  00D3               	movwf	___awdiv@divisor
  2428  01DE  3000               	movlw	0
  2429  01DF  00D4               	movwf	___awdiv@divisor+1
  2430  01E0  086B               	movf	_rh_byte1,w
  2431  01E1  00DB               	movwf	??_DhtUpdateData
  2432  01E2  01DC               	clrf	??_DhtUpdateData+1
  2433  01E3  085B               	movf	??_DhtUpdateData,w
  2434  01E4  00D5               	movwf	___awdiv@dividend
  2435  01E5  085C               	movf	??_DhtUpdateData+1,w
  2436  01E6  00D6               	movwf	___awdiv@dividend+1
  2437  01E7  120A  118A  2225  120A  118A  	fcall	___awdiv
  2438  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2439  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2440  01EE  0853               	movf	?___awdiv,w
  2441  01EF  3E30               	addlw	48
  2442  01F0  00FF               	movwf	btemp+1
  2443  01F1  087F               	movf	btemp+1,w
  2444  01F2  00B8               	movwf	_humi+7
  2445                           
  2446                           ;./dht11.h: 85:         humi[8] = rh_byte1 % 10 + 48;
  2447  01F3  300A               	movlw	10
  2448  01F4  00CD               	movwf	___awmod@divisor
  2449  01F5  3000               	movlw	0
  2450  01F6  00CE               	movwf	___awmod@divisor+1
  2451  01F7  086B               	movf	_rh_byte1,w
  2452  01F8  00DB               	movwf	??_DhtUpdateData
  2453  01F9  01DC               	clrf	??_DhtUpdateData+1
  2454  01FA  085B               	movf	??_DhtUpdateData,w
  2455  01FB  00CF               	movwf	___awmod@dividend
  2456  01FC  085C               	movf	??_DhtUpdateData+1,w
  2457  01FD  00D0               	movwf	___awmod@dividend+1
  2458  01FE  120A  118A  2355  120A  118A  	fcall	___awmod
  2459  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2460  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2461  0205  084D               	movf	?___awmod,w
  2462  0206  3E30               	addlw	48
  2463  0207  00FF               	movwf	btemp+1
  2464  0208  087F               	movf	btemp+1,w
  2465  0209  00B9               	movwf	_humi+8
  2466                           
  2467                           ;./dht11.h: 86:         humi[10] = rh_byte2 / 10 + 48;
  2468  020A  300A               	movlw	10
  2469  020B  00D3               	movwf	___awdiv@divisor
  2470  020C  3000               	movlw	0
  2471  020D  00D4               	movwf	___awdiv@divisor+1
  2472  020E  086A               	movf	_rh_byte2,w
  2473  020F  00DB               	movwf	??_DhtUpdateData
  2474  0210  01DC               	clrf	??_DhtUpdateData+1
  2475  0211  085B               	movf	??_DhtUpdateData,w
  2476  0212  00D5               	movwf	___awdiv@dividend
  2477  0213  085C               	movf	??_DhtUpdateData+1,w
  2478  0214  00D6               	movwf	___awdiv@dividend+1
  2479  0215  120A  118A  2225  120A  118A  	fcall	___awdiv
  2480  021A  1283               	bcf	3,5	;RP0=0, select bank0
  2481  021B  1303               	bcf	3,6	;RP1=0, select bank0
  2482  021C  0853               	movf	?___awdiv,w
  2483  021D  3E30               	addlw	48
  2484  021E  00FF               	movwf	btemp+1
  2485  021F  087F               	movf	btemp+1,w
  2486  0220  00BB               	movwf	_humi+10
  2487  0221                     l1491:
  2488                           
  2489                           ;./dht11.h: 88:         return 1;
  2490  0221  1403               	setc
  2491  0222  2A24               	goto	l157
  2492  0223                     l1495:
  2493                           
  2494                           ;./dht11.h: 90:     return 0;
  2495  0223  1003               	clrc
  2496  0224                     l157:
  2497  0224  0008               	return
  2498  0225                     __end_of_DhtUpdateData:
  2499                           
  2500                           	psect	text13
  2501  0355                     __ptext13:	
  2502 ;; *************** function ___awmod *****************
  2503 ;; Defined at:
  2504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  divisor         2    0[BANK0 ] int 
  2507 ;;  dividend        2    2[BANK0 ] int 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  sign            1    5[BANK0 ] unsigned char 
  2510 ;;  counter         1    4[BANK0 ] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  2    0[BANK0 ] int 
  2513 ;; Registers used:
  2514 ;;		wreg, status,2, status,0, btemp+1
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2520 ;;      Params:         0       4       0       0       0
  2521 ;;      Locals:         0       2       0       0       0
  2522 ;;      Temps:          0       0       0       0       0
  2523 ;;      Totals:         0       6       0       0       0
  2524 ;;Total ram usage:        6 bytes
  2525 ;; Hardware stack levels used:    1
  2526 ;; Hardware stack levels required when called:    2
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_DhtUpdateData
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           
  2535                           ;psect for function ___awmod
  2536  0355                     ___awmod:
  2537  0355                     l1373:	
  2538                           ;incstack = 0
  2539                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  2540                           
  2541  0355  1283               	bcf	3,5	;RP0=0, select bank0
  2542  0356  1303               	bcf	3,6	;RP1=0, select bank0
  2543  0357  01D2               	clrf	___awmod@sign
  2544  0358                     l1375:
  2545  0358  1FD0               	btfss	___awmod@dividend+1,7
  2546  0359  2B5B               	goto	u1011
  2547  035A  2B5C               	goto	u1010
  2548  035B                     u1011:
  2549  035B  2B63               	goto	l1381
  2550  035C                     u1010:
  2551  035C                     l1377:
  2552  035C  09CF               	comf	___awmod@dividend,f
  2553  035D  09D0               	comf	___awmod@dividend+1,f
  2554  035E  0ACF               	incf	___awmod@dividend,f
  2555  035F  1903               	skipnz
  2556  0360  0AD0               	incf	___awmod@dividend+1,f
  2557  0361                     l1379:
  2558  0361  01D2               	clrf	___awmod@sign
  2559  0362  0AD2               	incf	___awmod@sign,f
  2560  0363                     l1381:
  2561  0363  1FCE               	btfss	___awmod@divisor+1,7
  2562  0364  2B66               	goto	u1021
  2563  0365  2B67               	goto	u1020
  2564  0366                     u1021:
  2565  0366  2B6C               	goto	l1385
  2566  0367                     u1020:
  2567  0367                     l1383:
  2568  0367  09CD               	comf	___awmod@divisor,f
  2569  0368  09CE               	comf	___awmod@divisor+1,f
  2570  0369  0ACD               	incf	___awmod@divisor,f
  2571  036A  1903               	skipnz
  2572  036B  0ACE               	incf	___awmod@divisor+1,f
  2573  036C                     l1385:
  2574  036C  084D               	movf	___awmod@divisor,w
  2575  036D  044E               	iorwf	___awmod@divisor+1,w
  2576  036E  1903               	btfsc	3,2
  2577  036F  2B71               	goto	u1031
  2578  0370  2B72               	goto	u1030
  2579  0371                     u1031:
  2580  0371  2BA1               	goto	l1403
  2581  0372                     u1030:
  2582  0372                     l1387:
  2583  0372  01D1               	clrf	___awmod@counter
  2584  0373  0AD1               	incf	___awmod@counter,f
  2585  0374  2B80               	goto	l1393
  2586  0375                     l1389:
  2587  0375  3001               	movlw	1
  2588  0376                     u1045:
  2589  0376  1003               	clrc
  2590  0377  0DCD               	rlf	___awmod@divisor,f
  2591  0378  0DCE               	rlf	___awmod@divisor+1,f
  2592  0379  3EFF               	addlw	-1
  2593  037A  1D03               	skipz
  2594  037B  2B76               	goto	u1045
  2595  037C                     l1391:
  2596  037C  3001               	movlw	1
  2597  037D  00FF               	movwf	btemp+1
  2598  037E  087F               	movf	btemp+1,w
  2599  037F  07D1               	addwf	___awmod@counter,f
  2600  0380                     l1393:
  2601  0380  1FCE               	btfss	___awmod@divisor+1,7
  2602  0381  2B83               	goto	u1051
  2603  0382  2B84               	goto	u1050
  2604  0383                     u1051:
  2605  0383  2B75               	goto	l1389
  2606  0384                     u1050:
  2607  0384                     l1395:
  2608  0384  084E               	movf	___awmod@divisor+1,w
  2609  0385  0250               	subwf	___awmod@dividend+1,w
  2610  0386  1D03               	skipz
  2611  0387  2B8A               	goto	u1065
  2612  0388  084D               	movf	___awmod@divisor,w
  2613  0389  024F               	subwf	___awmod@dividend,w
  2614  038A                     u1065:
  2615  038A  1C03               	skipc
  2616  038B  2B8D               	goto	u1061
  2617  038C  2B8E               	goto	u1060
  2618  038D                     u1061:
  2619  038D  2B94               	goto	l1399
  2620  038E                     u1060:
  2621  038E                     l1397:
  2622  038E  084D               	movf	___awmod@divisor,w
  2623  038F  02CF               	subwf	___awmod@dividend,f
  2624  0390  084E               	movf	___awmod@divisor+1,w
  2625  0391  1C03               	skipc
  2626  0392  03D0               	decf	___awmod@dividend+1,f
  2627  0393  02D0               	subwf	___awmod@dividend+1,f
  2628  0394                     l1399:
  2629  0394  3001               	movlw	1
  2630  0395                     u1075:
  2631  0395  1003               	clrc
  2632  0396  0CCE               	rrf	___awmod@divisor+1,f
  2633  0397  0CCD               	rrf	___awmod@divisor,f
  2634  0398  3EFF               	addlw	-1
  2635  0399  1D03               	skipz
  2636  039A  2B95               	goto	u1075
  2637  039B                     l1401:
  2638  039B  3001               	movlw	1
  2639  039C  02D1               	subwf	___awmod@counter,f
  2640  039D  1D03               	btfss	3,2
  2641  039E  2BA0               	goto	u1081
  2642  039F  2BA1               	goto	u1080
  2643  03A0                     u1081:
  2644  03A0  2B84               	goto	l1395
  2645  03A1                     u1080:
  2646  03A1                     l1403:
  2647  03A1  0852               	movf	___awmod@sign,w
  2648  03A2  1903               	btfsc	3,2
  2649  03A3  2BA5               	goto	u1091
  2650  03A4  2BA6               	goto	u1090
  2651  03A5                     u1091:
  2652  03A5  2BAB               	goto	l1407
  2653  03A6                     u1090:
  2654  03A6                     l1405:
  2655  03A6  09CF               	comf	___awmod@dividend,f
  2656  03A7  09D0               	comf	___awmod@dividend+1,f
  2657  03A8  0ACF               	incf	___awmod@dividend,f
  2658  03A9  1903               	skipnz
  2659  03AA  0AD0               	incf	___awmod@dividend+1,f
  2660  03AB                     l1407:
  2661  03AB  0850               	movf	___awmod@dividend+1,w
  2662  03AC  00CE               	movwf	?___awmod+1
  2663  03AD  084F               	movf	___awmod@dividend,w
  2664  03AE  00CD               	movwf	?___awmod
  2665  03AF                     l465:
  2666  03AF  0008               	return
  2667  03B0                     __end_of___awmod:
  2668                           
  2669                           	psect	text14
  2670  0225                     __ptext14:	
  2671 ;; *************** function ___awdiv *****************
  2672 ;; Defined at:
  2673 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  divisor         2    6[BANK0 ] int 
  2676 ;;  dividend        2    8[BANK0 ] int 
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  quotient        2   12[BANK0 ] int 
  2679 ;;  sign            1   11[BANK0 ] unsigned char 
  2680 ;;  counter         1   10[BANK0 ] unsigned char 
  2681 ;; Return value:  Size  Location     Type
  2682 ;;                  2    6[BANK0 ] int 
  2683 ;; Registers used:
  2684 ;;		wreg, status,2, status,0, btemp+1
  2685 ;; Tracked objects:
  2686 ;;		On entry : 0/0
  2687 ;;		On exit  : 0/0
  2688 ;;		Unchanged: 0/0
  2689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2690 ;;      Params:         0       4       0       0       0
  2691 ;;      Locals:         0       4       0       0       0
  2692 ;;      Temps:          0       0       0       0       0
  2693 ;;      Totals:         0       8       0       0       0
  2694 ;;Total ram usage:        8 bytes
  2695 ;; Hardware stack levels used:    1
  2696 ;; Hardware stack levels required when called:    2
  2697 ;; This function calls:
  2698 ;;		Nothing
  2699 ;; This function is called by:
  2700 ;;		_DhtUpdateData
  2701 ;;		_main
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           
  2706                           ;psect for function ___awdiv
  2707  0225                     ___awdiv:
  2708  0225                     l1329:	
  2709                           ;incstack = 0
  2710                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
  2711                           
  2712  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0227  01D8               	clrf	___awdiv@sign
  2715  0228                     l1331:
  2716  0228  1FD4               	btfss	___awdiv@divisor+1,7
  2717  0229  2A2B               	goto	u911
  2718  022A  2A2C               	goto	u910
  2719  022B                     u911:
  2720  022B  2A33               	goto	l1337
  2721  022C                     u910:
  2722  022C                     l1333:
  2723  022C  09D3               	comf	___awdiv@divisor,f
  2724  022D  09D4               	comf	___awdiv@divisor+1,f
  2725  022E  0AD3               	incf	___awdiv@divisor,f
  2726  022F  1903               	skipnz
  2727  0230  0AD4               	incf	___awdiv@divisor+1,f
  2728  0231                     l1335:
  2729  0231  01D8               	clrf	___awdiv@sign
  2730  0232  0AD8               	incf	___awdiv@sign,f
  2731  0233                     l1337:
  2732  0233  1FD6               	btfss	___awdiv@dividend+1,7
  2733  0234  2A36               	goto	u921
  2734  0235  2A37               	goto	u920
  2735  0236                     u921:
  2736  0236  2A40               	goto	l1343
  2737  0237                     u920:
  2738  0237                     l1339:
  2739  0237  09D5               	comf	___awdiv@dividend,f
  2740  0238  09D6               	comf	___awdiv@dividend+1,f
  2741  0239  0AD5               	incf	___awdiv@dividend,f
  2742  023A  1903               	skipnz
  2743  023B  0AD6               	incf	___awdiv@dividend+1,f
  2744  023C                     l1341:
  2745  023C  3001               	movlw	1
  2746  023D  00FF               	movwf	btemp+1
  2747  023E  087F               	movf	btemp+1,w
  2748  023F  06D8               	xorwf	___awdiv@sign,f
  2749  0240                     l1343:
  2750  0240  01D9               	clrf	___awdiv@quotient
  2751  0241  01DA               	clrf	___awdiv@quotient+1
  2752  0242                     l1345:
  2753  0242  0853               	movf	___awdiv@divisor,w
  2754  0243  0454               	iorwf	___awdiv@divisor+1,w
  2755  0244  1903               	btfsc	3,2
  2756  0245  2A47               	goto	u931
  2757  0246  2A48               	goto	u930
  2758  0247                     u931:
  2759  0247  2A7F               	goto	l1365
  2760  0248                     u930:
  2761  0248                     l1347:
  2762  0248  01D7               	clrf	___awdiv@counter
  2763  0249  0AD7               	incf	___awdiv@counter,f
  2764  024A  2A56               	goto	l1353
  2765  024B                     l1349:
  2766  024B  3001               	movlw	1
  2767  024C                     u945:
  2768  024C  1003               	clrc
  2769  024D  0DD3               	rlf	___awdiv@divisor,f
  2770  024E  0DD4               	rlf	___awdiv@divisor+1,f
  2771  024F  3EFF               	addlw	-1
  2772  0250  1D03               	skipz
  2773  0251  2A4C               	goto	u945
  2774  0252                     l1351:
  2775  0252  3001               	movlw	1
  2776  0253  00FF               	movwf	btemp+1
  2777  0254  087F               	movf	btemp+1,w
  2778  0255  07D7               	addwf	___awdiv@counter,f
  2779  0256                     l1353:
  2780  0256  1FD4               	btfss	___awdiv@divisor+1,7
  2781  0257  2A59               	goto	u951
  2782  0258  2A5A               	goto	u950
  2783  0259                     u951:
  2784  0259  2A4B               	goto	l1349
  2785  025A                     u950:
  2786  025A                     l1355:
  2787  025A  3001               	movlw	1
  2788  025B                     u965:
  2789  025B  1003               	clrc
  2790  025C  0DD9               	rlf	___awdiv@quotient,f
  2791  025D  0DDA               	rlf	___awdiv@quotient+1,f
  2792  025E  3EFF               	addlw	-1
  2793  025F  1D03               	skipz
  2794  0260  2A5B               	goto	u965
  2795  0261  0854               	movf	___awdiv@divisor+1,w
  2796  0262  0256               	subwf	___awdiv@dividend+1,w
  2797  0263  1D03               	skipz
  2798  0264  2A67               	goto	u975
  2799  0265  0853               	movf	___awdiv@divisor,w
  2800  0266  0255               	subwf	___awdiv@dividend,w
  2801  0267                     u975:
  2802  0267  1C03               	skipc
  2803  0268  2A6A               	goto	u971
  2804  0269  2A6B               	goto	u970
  2805  026A                     u971:
  2806  026A  2A72               	goto	l1361
  2807  026B                     u970:
  2808  026B                     l1357:
  2809  026B  0853               	movf	___awdiv@divisor,w
  2810  026C  02D5               	subwf	___awdiv@dividend,f
  2811  026D  0854               	movf	___awdiv@divisor+1,w
  2812  026E  1C03               	skipc
  2813  026F  03D6               	decf	___awdiv@dividend+1,f
  2814  0270  02D6               	subwf	___awdiv@dividend+1,f
  2815  0271                     l1359:
  2816  0271  1459               	bsf	___awdiv@quotient,0
  2817  0272                     l1361:
  2818  0272  3001               	movlw	1
  2819  0273                     u985:
  2820  0273  1003               	clrc
  2821  0274  0CD4               	rrf	___awdiv@divisor+1,f
  2822  0275  0CD3               	rrf	___awdiv@divisor,f
  2823  0276  3EFF               	addlw	-1
  2824  0277  1D03               	skipz
  2825  0278  2A73               	goto	u985
  2826  0279                     l1363:
  2827  0279  3001               	movlw	1
  2828  027A  02D7               	subwf	___awdiv@counter,f
  2829  027B  1D03               	btfss	3,2
  2830  027C  2A7E               	goto	u991
  2831  027D  2A7F               	goto	u990
  2832  027E                     u991:
  2833  027E  2A5A               	goto	l1355
  2834  027F                     u990:
  2835  027F                     l1365:
  2836  027F  0858               	movf	___awdiv@sign,w
  2837  0280  1903               	btfsc	3,2
  2838  0281  2A83               	goto	u1001
  2839  0282  2A84               	goto	u1000
  2840  0283                     u1001:
  2841  0283  2A89               	goto	l1369
  2842  0284                     u1000:
  2843  0284                     l1367:
  2844  0284  09D9               	comf	___awdiv@quotient,f
  2845  0285  09DA               	comf	___awdiv@quotient+1,f
  2846  0286  0AD9               	incf	___awdiv@quotient,f
  2847  0287  1903               	skipnz
  2848  0288  0ADA               	incf	___awdiv@quotient+1,f
  2849  0289                     l1369:
  2850  0289  085A               	movf	___awdiv@quotient+1,w
  2851  028A  00D4               	movwf	?___awdiv+1
  2852  028B  0859               	movf	___awdiv@quotient,w
  2853  028C  00D3               	movwf	?___awdiv
  2854  028D                     l452:
  2855  028D  0008               	return
  2856  028E                     __end_of___awdiv:
  2857                           
  2858                           	psect	text15
  2859  0643                     __ptext15:	
  2860 ;; *************** function _DhtStartSignal *****************
  2861 ;; Defined at:
  2862 ;;		line 30 in file "./dht11.h"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		wreg
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2876 ;;      Params:         0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0
  2878 ;;      Temps:          0       2       0       0       0
  2879 ;;      Totals:         0       2       0       0       0
  2880 ;;Total ram usage:        2 bytes
  2881 ;; Hardware stack levels used:    1
  2882 ;; Hardware stack levels required when called:    2
  2883 ;; This function calls:
  2884 ;;		Nothing
  2885 ;; This function is called by:
  2886 ;;		_DhtUpdateData
  2887 ;; This function uses a non-reentrant model
  2888 ;;
  2889                           
  2890                           
  2891                           ;psect for function _DhtStartSignal
  2892  0643                     _DhtStartSignal:
  2893  0643                     l1267:	
  2894                           ;incstack = 0
  2895                           ; Regs used in _DhtStartSignal: [wreg]
  2896                           
  2897                           
  2898                           ;./dht11.h: 32:     TRISB4 = 0;
  2899  0643  1683               	bsf	3,5	;RP0=1, select bank1
  2900  0644  1303               	bcf	3,6	;RP1=0, select bank1
  2901  0645  1206               	bcf	6,4	;volatile
  2902                           
  2903                           ;./dht11.h: 33:     RB4 = 0;
  2904  0646  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0647  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0648  1206               	bcf	6,4	;volatile
  2907  0649                     l1269:
  2908                           
  2909                           ;./dht11.h: 35:     _delay((unsigned long)((25)*(20000000/4000.0)));
  2910  0649  30A3               	movlw	163
  2911  064A  1283               	bcf	3,5	;RP0=0, select bank0
  2912  064B  1303               	bcf	3,6	;RP1=0, select bank0
  2913  064C  00CE               	movwf	??_DhtStartSignal+1
  2914  064D  3054               	movlw	84
  2915  064E  00CD               	movwf	??_DhtStartSignal
  2916  064F                     u1477:
  2917  064F  0BCD               	decfsz	??_DhtStartSignal,f
  2918  0650  2E4F               	goto	u1477
  2919  0651  0BCE               	decfsz	??_DhtStartSignal+1,f
  2920  0652  2E4F               	goto	u1477
  2921  0653  0000               	nop
  2922  0654                     l1271:
  2923                           
  2924                           ;./dht11.h: 36:     RB4 = 1;
  2925  0654  1283               	bcf	3,5	;RP0=0, select bank0
  2926  0655  1303               	bcf	3,6	;RP1=0, select bank0
  2927  0656  1606               	bsf	6,4	;volatile
  2928                           
  2929                           ;./dht11.h: 37:     _delay((unsigned long)((30)*(20000000/4000000.0)));
  2930  0657  3031               	movlw	49
  2931  0658  1283               	bcf	3,5	;RP0=0, select bank0
  2932  0659  1303               	bcf	3,6	;RP1=0, select bank0
  2933  065A  00CD               	movwf	??_DhtStartSignal
  2934  065B                     u1487:
  2935  065B  0BCD               	decfsz	??_DhtStartSignal,f
  2936  065C  2E5B               	goto	u1487
  2937  065D                     l1273:
  2938                           
  2939                           ;./dht11.h: 38:     TRISB4 = 1;
  2940  065D  1683               	bsf	3,5	;RP0=1, select bank1
  2941  065E  1303               	bcf	3,6	;RP1=0, select bank1
  2942  065F  1606               	bsf	6,4	;volatile
  2943  0660                     l128:
  2944  0660  0008               	return
  2945  0661                     __end_of_DhtStartSignal:
  2946                           
  2947                           	psect	text16
  2948  0500                     __ptext16:	
  2949 ;; *************** function _DhtReadData *****************
  2950 ;; Defined at:
  2951 ;;		line 50 in file "./dht11.h"
  2952 ;; Parameters:    Size  Location     Type
  2953 ;;		None
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  data            1    3[BANK0 ] unsigned char 
  2956 ;;  i               1    2[BANK0 ] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      unsigned char 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, btemp+1
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         0       2       0       0       0
  2968 ;;      Temps:          0       2       0       0       0
  2969 ;;      Totals:         0       4       0       0       0
  2970 ;;Total ram usage:        4 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    2
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_DhtUpdateData
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _DhtReadData
  2982  0500                     _DhtReadData:
  2983  0500                     l1283:	
  2984                           ;incstack = 0
  2985                           ; Regs used in _DhtReadData: [wreg+status,2+status,0+btemp+1]
  2986                           
  2987                           
  2988                           ;./dht11.h: 52:     char i, data = 0;
  2989  0500  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0501  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0502  01D0               	clrf	DhtReadData@data
  2992                           
  2993                           ;./dht11.h: 53:     for(i = 0; i < 8; i++)
  2994  0503  01CF               	clrf	DhtReadData@i
  2995  0504                     l1289:
  2996  0504  1003               	clrc
  2997  0505  1A06               	btfsc	6,4	;volatile
  2998  0506  1403               	setc
  2999  0507  3000               	movlw	0
  3000  0508  1803               	skipnc
  3001  0509  3001               	movlw	1
  3002  050A  00CD               	movwf	??_DhtReadData
  3003  050B  01CE               	clrf	??_DhtReadData+1
  3004  050C  1C4D               	btfss	??_DhtReadData,0
  3005  050D  2D0F               	goto	u821
  3006  050E  2D10               	goto	u820
  3007  050F                     u821:
  3008  050F  2D04               	goto	l1289
  3009  0510                     u820:
  3010  0510                     l1291:
  3011                           
  3012                           ;./dht11.h: 56:         _delay((unsigned long)((30)*(20000000/4000000.0)));
  3013  0510  3031               	movlw	49
  3014  0511  1283               	bcf	3,5	;RP0=0, select bank0
  3015  0512  1303               	bcf	3,6	;RP1=0, select bank0
  3016  0513  00CD               	movwf	??_DhtReadData
  3017  0514                     u1497:
  3018  0514  0BCD               	decfsz	??_DhtReadData,f
  3019  0515  2D14               	goto	u1497
  3020  0516                     l1293:
  3021                           
  3022                           ;./dht11.h: 57:         if(RB4 & 1)
  3023  0516  1003               	clrc
  3024  0517  1283               	bcf	3,5	;RP0=0, select bank0
  3025  0518  1303               	bcf	3,6	;RP1=0, select bank0
  3026  0519  1A06               	btfsc	6,4	;volatile
  3027  051A  1403               	setc
  3028  051B  3000               	movlw	0
  3029  051C  1803               	skipnc
  3030  051D  3001               	movlw	1
  3031  051E  00CD               	movwf	??_DhtReadData
  3032  051F  01CE               	clrf	??_DhtReadData+1
  3033  0520  1C4D               	btfss	??_DhtReadData,0
  3034  0521  2D23               	goto	u831
  3035  0522  2D24               	goto	u830
  3036  0523                     u831:
  3037  0523  2D27               	goto	l1297
  3038  0524                     u830:
  3039  0524                     l1295:
  3040                           
  3041                           ;./dht11.h: 58:             data = ((data<<1) | 1);
  3042  0524  1403               	setc
  3043  0525  0DD0               	rlf	DhtReadData@data,f
  3044  0526  2D2D               	goto	l1299
  3045  0527                     l1297:
  3046                           
  3047                           ;./dht11.h: 60:             data = (data<<1);
  3048  0527  0850               	movf	DhtReadData@data,w
  3049  0528  00CD               	movwf	??_DhtReadData
  3050  0529  074D               	addwf	??_DhtReadData,w
  3051  052A  00FF               	movwf	btemp+1
  3052  052B  087F               	movf	btemp+1,w
  3053  052C  00D0               	movwf	DhtReadData@data
  3054  052D                     l1299:
  3055  052D  1003               	clrc
  3056  052E  1A06               	btfsc	6,4	;volatile
  3057  052F  1403               	setc
  3058  0530  3000               	movlw	0
  3059  0531  1803               	skipnc
  3060  0532  3001               	movlw	1
  3061  0533  00CD               	movwf	??_DhtReadData
  3062  0534  01CE               	clrf	??_DhtReadData+1
  3063  0535  184D               	btfsc	??_DhtReadData,0
  3064  0536  2D38               	goto	u841
  3065  0537  2D39               	goto	u840
  3066  0538                     u841:
  3067  0538  2D2D               	goto	l1299
  3068  0539                     u840:
  3069  0539                     l1301:
  3070                           
  3071                           ;./dht11.h: 62:     }
  3072  0539  3001               	movlw	1
  3073  053A  00FF               	movwf	btemp+1
  3074  053B  087F               	movf	btemp+1,w
  3075  053C  07CF               	addwf	DhtReadData@i,f
  3076  053D                     l1303:
  3077  053D  3008               	movlw	8
  3078  053E  024F               	subwf	DhtReadData@i,w
  3079  053F  1C03               	skipc
  3080  0540  2D42               	goto	u851
  3081  0541  2D43               	goto	u850
  3082  0542                     u851:
  3083  0542  2D04               	goto	l1289
  3084  0543                     u850:
  3085  0543                     l1305:
  3086                           
  3087                           ;./dht11.h: 63:     return data;
  3088  0543  0850               	movf	DhtReadData@data,w
  3089  0544                     l153:
  3090  0544  0008               	return
  3091  0545                     __end_of_DhtReadData:
  3092                           
  3093                           	psect	text17
  3094  05AE                     __ptext17:	
  3095 ;; *************** function _DhtCheckResponse *****************
  3096 ;; Defined at:
  3097 ;;		line 42 in file "./dht11.h"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;		None
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3111 ;;      Params:         0       0       0       0       0
  3112 ;;      Locals:         0       0       0       0       0
  3113 ;;      Temps:          0       2       0       0       0
  3114 ;;      Totals:         0       2       0       0       0
  3115 ;;Total ram usage:        2 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    2
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_DhtUpdateData
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           
  3126                           ;psect for function _DhtCheckResponse
  3127  05AE                     _DhtCheckResponse:
  3128  05AE                     l1275:	
  3129                           ;incstack = 0
  3130                           ; Regs used in _DhtCheckResponse: [wreg+status,0]
  3131                           
  3132  05AE                     l1277:	
  3133                           ;./dht11.h: 44:     while(RB4 & 1);
  3134                           
  3135  05AE  1003               	clrc
  3136  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3137  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  3138  05B1  1A06               	btfsc	6,4	;volatile
  3139  05B2  1403               	setc
  3140  05B3  3000               	movlw	0
  3141  05B4  1803               	skipnc
  3142  05B5  3001               	movlw	1
  3143  05B6  00CD               	movwf	??_DhtCheckResponse
  3144  05B7  01CE               	clrf	??_DhtCheckResponse+1
  3145  05B8  184D               	btfsc	??_DhtCheckResponse,0
  3146  05B9  2DBB               	goto	u791
  3147  05BA  2DBC               	goto	u790
  3148  05BB                     u791:
  3149  05BB  2DAE               	goto	l1277
  3150  05BC                     u790:
  3151  05BC                     l1279:
  3152  05BC  1003               	clrc
  3153  05BD  1A06               	btfsc	6,4	;volatile
  3154  05BE  1403               	setc
  3155  05BF  3000               	movlw	0
  3156  05C0  1803               	skipnc
  3157  05C1  3001               	movlw	1
  3158  05C2  00CD               	movwf	??_DhtCheckResponse
  3159  05C3  01CE               	clrf	??_DhtCheckResponse+1
  3160  05C4  1C4D               	btfss	??_DhtCheckResponse,0
  3161  05C5  2DC7               	goto	u801
  3162  05C6  2DC8               	goto	u800
  3163  05C7                     u801:
  3164  05C7  2DBC               	goto	l1279
  3165  05C8                     u800:
  3166  05C8                     l1281:
  3167  05C8  1003               	clrc
  3168  05C9  1A06               	btfsc	6,4	;volatile
  3169  05CA  1403               	setc
  3170  05CB  3000               	movlw	0
  3171  05CC  1803               	skipnc
  3172  05CD  3001               	movlw	1
  3173  05CE  00CD               	movwf	??_DhtCheckResponse
  3174  05CF  01CE               	clrf	??_DhtCheckResponse+1
  3175  05D0  184D               	btfsc	??_DhtCheckResponse,0
  3176  05D1  2DD3               	goto	u811
  3177  05D2  2DD4               	goto	u810
  3178  05D3                     u811:
  3179  05D3  2DC8               	goto	l1281
  3180  05D4                     u810:
  3181  05D4                     l140:
  3182  05D4  0008               	return
  3183  05D5                     __end_of_DhtCheckResponse:
  3184                           
  3185                           	psect	text18
  3186  028E                     __ptext18:	
  3187 ;; *************** function _ADC_Read *****************
  3188 ;; Defined at:
  3189 ;;		line 45 in file "./adc.h"
  3190 ;; Parameters:    Size  Location     Type
  3191 ;;  ADC_channel     2    0[BANK0 ] int 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  result          2    4[BANK0 ] int 
  3194 ;; Return value:  Size  Location     Type
  3195 ;;                  2    0[BANK0 ] int 
  3196 ;; Registers used:
  3197 ;;		wreg, status,2, btemp+1
  3198 ;; Tracked objects:
  3199 ;;		On entry : 0/0
  3200 ;;		On exit  : 0/0
  3201 ;;		Unchanged: 0/0
  3202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3203 ;;      Params:         0       2       0       0       0
  3204 ;;      Locals:         0       2       0       0       0
  3205 ;;      Temps:          0       2       0       0       0
  3206 ;;      Totals:         0       6       0       0       0
  3207 ;;Total ram usage:        6 bytes
  3208 ;; Hardware stack levels used:    1
  3209 ;; Hardware stack levels required when called:    2
  3210 ;; This function calls:
  3211 ;;		Nothing
  3212 ;; This function is called by:
  3213 ;;		_main
  3214 ;; This function uses a non-reentrant model
  3215 ;;
  3216                           
  3217                           
  3218                           ;psect for function _ADC_Read
  3219  028E                     _ADC_Read:
  3220  028E                     l1505:	
  3221                           ;incstack = 0
  3222                           ; Regs used in _ADC_Read: [wreg+status,2+btemp+1]
  3223                           
  3224                           
  3225                           ;./adc.h: 47:     if(ADC_channel < 0 || ADC_channel > 7)
  3226  028E  1283               	bcf	3,5	;RP0=0, select bank0
  3227  028F  1303               	bcf	3,6	;RP1=0, select bank0
  3228  0290  1BCE               	btfsc	ADC_Read@ADC_channel+1,7
  3229  0291  2A93               	goto	u1181
  3230  0292  2A94               	goto	u1180
  3231  0293                     u1181:
  3232  0293  2AA1               	goto	l1509
  3233  0294                     u1180:
  3234  0294                     l1507:
  3235  0294  084E               	movf	ADC_Read@ADC_channel+1,w
  3236  0295  3A80               	xorlw	128
  3237  0296  00FF               	movwf	btemp+1
  3238  0297  3080               	movlw	128
  3239  0298  027F               	subwf	btemp+1,w
  3240  0299  1D03               	skipz
  3241  029A  2A9D               	goto	u1195
  3242  029B  3008               	movlw	8
  3243  029C  024D               	subwf	ADC_Read@ADC_channel,w
  3244  029D                     u1195:
  3245  029D  1C03               	skipc
  3246  029E  2AA0               	goto	u1191
  3247  029F  2AA1               	goto	u1190
  3248  02A0                     u1191:
  3249  02A0  2AA6               	goto	l169
  3250  02A1                     u1190:
  3251  02A1                     l1509:
  3252                           
  3253                           ;./adc.h: 48:         return 0;
  3254  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  3255  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  3256  02A3  01CD               	clrf	?_ADC_Read
  3257  02A4  01CE               	clrf	?_ADC_Read+1
  3258  02A5  2AF1               	goto	l172
  3259  02A6                     l169:
  3260                           
  3261                           ;./adc.h: 51:     CHS0 = (ADC_channel & 1) >> 0;
  3262  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  3263  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  3264  02A8  184D               	btfsc	ADC_Read@ADC_channel,0
  3265  02A9  2AAB               	goto	u1201
  3266  02AA  2AAF               	goto	u1200
  3267  02AB                     u1201:
  3268  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  3269  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  3270  02AD  159F               	bsf	31,3	;volatile
  3271  02AE  2AB2               	goto	u1214
  3272  02AF                     u1200:
  3273  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  3274  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  3275  02B1  119F               	bcf	31,3	;volatile
  3276  02B2                     u1214:
  3277  02B2                     l1513:
  3278                           
  3279                           ;./adc.h: 52:     CHS1 = (ADC_channel & 2) >> 1;
  3280  02B2  084E               	movf	ADC_Read@ADC_channel+1,w
  3281  02B3  00D0               	movwf	??_ADC_Read+1
  3282  02B4  084D               	movf	ADC_Read@ADC_channel,w
  3283  02B5  00CF               	movwf	??_ADC_Read
  3284  02B6  0D50               	rlf	??_ADC_Read+1,w
  3285  02B7  0CD0               	rrf	??_ADC_Read+1,f
  3286  02B8  0CCF               	rrf	??_ADC_Read,f
  3287  02B9  184F               	btfsc	??_ADC_Read,0
  3288  02BA  2ABC               	goto	u1221
  3289  02BB  2AC0               	goto	u1220
  3290  02BC                     u1221:
  3291  02BC  1283               	bcf	3,5	;RP0=0, select bank0
  3292  02BD  1303               	bcf	3,6	;RP1=0, select bank0
  3293  02BE  161F               	bsf	31,4	;volatile
  3294  02BF  2AC3               	goto	u1234
  3295  02C0                     u1220:
  3296  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  3297  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  3298  02C2  121F               	bcf	31,4	;volatile
  3299  02C3                     u1234:
  3300                           
  3301                           ;./adc.h: 53:     CHS2 = (ADC_channel & 4) >> 2;
  3302  02C3  084E               	movf	ADC_Read@ADC_channel+1,w
  3303  02C4  00D0               	movwf	??_ADC_Read+1
  3304  02C5  084D               	movf	ADC_Read@ADC_channel,w
  3305  02C6  00CF               	movwf	??_ADC_Read
  3306  02C7  0D50               	rlf	??_ADC_Read+1,w
  3307  02C8  0CD0               	rrf	??_ADC_Read+1,f
  3308  02C9  0CCF               	rrf	??_ADC_Read,f
  3309  02CA  0D50               	rlf	??_ADC_Read+1,w
  3310  02CB  0CD0               	rrf	??_ADC_Read+1,f
  3311  02CC  0CCF               	rrf	??_ADC_Read,f
  3312  02CD  184F               	btfsc	??_ADC_Read,0
  3313  02CE  2AD0               	goto	u1241
  3314  02CF  2AD4               	goto	u1240
  3315  02D0                     u1241:
  3316  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  3317  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  3318  02D2  169F               	bsf	31,5	;volatile
  3319  02D3  2AD7               	goto	u1254
  3320  02D4                     u1240:
  3321  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  3322  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  3323  02D6  129F               	bcf	31,5	;volatile
  3324  02D7                     u1254:
  3325                           
  3326                           ;./adc.h: 56:     _delay((unsigned long)((25)*(20000000/4000000.0)));
  3327  02D7  3028               	movlw	40
  3328  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  3329  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  3330  02DA  00CF               	movwf	??_ADC_Read
  3331  02DB                     u1507:
  3332  02DB  0BCF               	decfsz	??_ADC_Read,f
  3333  02DC  2ADB               	goto	u1507
  3334  02DD  2ADE               	nop2
  3335  02DE                     l1515:
  3336                           
  3337                           ;./adc.h: 59:     GO_DONE = 1;
  3338  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  3339  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  3340  02E0  151F               	bsf	31,2	;volatile
  3341  02E1                     l173:	
  3342                           ;./adc.h: 62:     while(GO_DONE);
  3343                           
  3344  02E1  191F               	btfsc	31,2	;volatile
  3345  02E2  2AE4               	goto	u1261
  3346  02E3  2AE5               	goto	u1260
  3347  02E4                     u1261:
  3348  02E4  2AE1               	goto	l173
  3349  02E5                     u1260:
  3350  02E5                     l1517:
  3351                           
  3352                           ;./adc.h: 65:     int result = ((ADRESH << 8) + ADRESL);
  3353  02E5  081E               	movf	30,w	;volatile
  3354  02E6  00D2               	movwf	ADC_Read@result+1
  3355  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  3356  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  3357  02E9  081E               	movf	30,w	;volatile
  3358  02EA  1283               	bcf	3,5	;RP0=0, select bank0
  3359  02EB  1303               	bcf	3,6	;RP1=0, select bank0
  3360  02EC  00D1               	movwf	ADC_Read@result
  3361                           
  3362                           ;./adc.h: 66:     return result;
  3363  02ED  0852               	movf	ADC_Read@result+1,w
  3364  02EE  00CE               	movwf	?_ADC_Read+1
  3365  02EF  0851               	movf	ADC_Read@result,w
  3366  02F0  00CD               	movwf	?_ADC_Read
  3367  02F1                     l172:
  3368  02F1  0008               	return
  3369  02F2                     __end_of_ADC_Read:
  3370                           
  3371                           	psect	text19
  3372  06EE                     __ptext19:	
  3373 ;; *************** function _ADC_Init *****************
  3374 ;; Defined at:
  3375 ;;		line 24 in file "./adc.h"
  3376 ;; Parameters:    Size  Location     Type
  3377 ;;		None
  3378 ;; Auto vars:     Size  Location     Type
  3379 ;;		None
  3380 ;; Return value:  Size  Location     Type
  3381 ;;                  1    wreg      void 
  3382 ;; Registers used:
  3383 ;;		wreg
  3384 ;; Tracked objects:
  3385 ;;		On entry : 0/0
  3386 ;;		On exit  : 0/0
  3387 ;;		Unchanged: 0/0
  3388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3389 ;;      Params:         0       0       0       0       0
  3390 ;;      Locals:         0       0       0       0       0
  3391 ;;      Temps:          0       0       0       0       0
  3392 ;;      Totals:         0       0       0       0       0
  3393 ;;Total ram usage:        0 bytes
  3394 ;; Hardware stack levels used:    1
  3395 ;; Hardware stack levels required when called:    2
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		_main
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           
  3404                           ;psect for function _ADC_Init
  3405  06EE                     _ADC_Init:
  3406  06EE                     l1503:	
  3407                           ;incstack = 0
  3408                           ; Regs used in _ADC_Init: [wreg]
  3409                           
  3410                           
  3411                           ;./adc.h: 26:      ADCON0 = 0x41;
  3412  06EE  3041               	movlw	65
  3413  06EF  1283               	bcf	3,5	;RP0=0, select bank0
  3414  06F0  1303               	bcf	3,6	;RP1=0, select bank0
  3415  06F1  009F               	movwf	31	;volatile
  3416                           
  3417                           ;./adc.h: 33:     ADCON1 = 0x80;
  3418  06F2  3080               	movlw	128
  3419  06F3  1683               	bsf	3,5	;RP0=1, select bank1
  3420  06F4  1303               	bcf	3,6	;RP1=0, select bank1
  3421  06F5  009F               	movwf	31	;volatile
  3422  06F6                     l166:
  3423  06F6  0008               	return
  3424  06F7                     __end_of_ADC_Init:
  3425                           
  3426                           	psect	text20
  3427  05D5                     __ptext20:	
  3428 ;; *************** function _ISR *****************
  3429 ;; Defined at:
  3430 ;;		line 84 in file "main.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;		None
  3433 ;; Auto vars:     Size  Location     Type
  3434 ;;		None
  3435 ;; Return value:  Size  Location     Type
  3436 ;;                  1    wreg      void 
  3437 ;; Registers used:
  3438 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3439 ;; Tracked objects:
  3440 ;;		On entry : 0/0
  3441 ;;		On exit  : 0/0
  3442 ;;		Unchanged: 0/0
  3443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3444 ;;      Params:         0       0       0       0       0
  3445 ;;      Locals:         0       0       0       0       0
  3446 ;;      Temps:          3       0       0       0       0
  3447 ;;      Totals:         3       0       0       0       0
  3448 ;;Total ram usage:        3 bytes
  3449 ;; Hardware stack levels used:    1
  3450 ;; Hardware stack levels required when called:    1
  3451 ;; This function calls:
  3452 ;;		i1___awmod
  3453 ;; This function is called by:
  3454 ;;		Interrupt level 1
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           
  3459                           ;psect for function _ISR
  3460  05D5                     _ISR:
  3461  05D5                     i1l1619:
  3462                           
  3463                           ;main.c: 86:     if(INTF == 1)
  3464  05D5  1C8B               	btfss	11,1	;volatile
  3465  05D6  2DD8               	goto	u142_21
  3466  05D7  2DD9               	goto	u142_20
  3467  05D8                     u142_21:
  3468  05D8  2DF0               	goto	i1l206
  3469  05D9                     u142_20:
  3470  05D9                     i1l1621:
  3471                           
  3472                           ;main.c: 87:     {;main.c: 88:         status = (status+1)%3;
  3473  05D9  3003               	movlw	3
  3474  05DA  00F0               	movwf	i1___awmod@divisor
  3475  05DB  3000               	movlw	0
  3476  05DC  00F1               	movwf	i1___awmod@divisor+1
  3477  05DD  0868               	movf	_status,w
  3478  05DE  3E01               	addlw	1
  3479  05DF  00F2               	movwf	i1___awmod@dividend
  3480  05E0  3000               	movlw	0
  3481  05E1  1803               	skipnc
  3482  05E2  3001               	movlw	1
  3483  05E3  00F3               	movwf	i1___awmod@dividend+1
  3484  05E4  120A  118A  2409  120A  118A  	fcall	i1___awmod
  3485  05E9  0870               	movf	?i1___awmod,w
  3486  05EA  00FF               	movwf	btemp+1
  3487  05EB  087F               	movf	btemp+1,w
  3488  05EC  1283               	bcf	3,5	;RP0=0, select bank0
  3489  05ED  1303               	bcf	3,6	;RP1=0, select bank0
  3490  05EE  00E8               	movwf	_status
  3491  05EF                     i1l1623:
  3492                           
  3493                           ;main.c: 89:         INTF = 0;
  3494  05EF  108B               	bcf	11,1	;volatile
  3495  05F0                     i1l206:
  3496  05F0  0878               	movf	??_ISR+2,w
  3497  05F1  00FF               	movwf	btemp+1
  3498  05F2  0877               	movf	??_ISR+1,w
  3499  05F3  008A               	movwf	10
  3500  05F4  0E76               	swapf	??_ISR^(0+4294967168),w
  3501  05F5  0083               	movwf	3
  3502  05F6  0EFE               	swapf	btemp,f
  3503  05F7  0E7E               	swapf	btemp,w
  3504  05F8  0009               	retfie
  3505  05F9                     __end_of_ISR:
  3506                           
  3507                           	psect	intentry
  3508  0004                     __pintentry:	
  3509                           ;incstack = 0
  3510                           ; Regs used in _ISR: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3511                           
  3512  0004                     interrupt_function:
  3513  007E                     saved_w	set	btemp
  3514  0004  00FE               	movwf	btemp
  3515  0005  0E03               	swapf	3,w
  3516  0006  00F6               	movwf	??_ISR
  3517  0007  080A               	movf	10,w
  3518  0008  00F7               	movwf	??_ISR+1
  3519  0009  1283               	bcf	3,5	;RP0=0, select bank0
  3520  000A  1303               	bcf	3,6	;RP1=0, select bank0
  3521  000B  087F               	movf	btemp+1,w
  3522  000C  00F8               	movwf	??_ISR+2
  3523  000D  120A  118A  2DD5   	ljmp	_ISR
  3524                           
  3525                           	psect	text21
  3526  0409                     __ptext21:	
  3527 ;; *************** function i1___awmod *****************
  3528 ;; Defined at:
  3529 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  divisor         2    0[COMMON] int 
  3532 ;;  dividend        2    2[COMMON] int 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  sign            1    5[COMMON] unsigned char 
  3535 ;;  counter         1    4[COMMON] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  2    0[COMMON] int 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0, btemp+1
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3545 ;;      Params:         4       0       0       0       0
  3546 ;;      Locals:         2       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0
  3548 ;;      Totals:         6       0       0       0       0
  3549 ;;Total ram usage:        6 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_ISR
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function i1___awmod
  3560  0409                     i1___awmod:
  3561  0409                     i1l1533:	
  3562                           ;incstack = 0
  3563                           ; Regs used in i1___awmod: [wreg+status,2+status,0+btemp+1]
  3564                           
  3565  0409  01F5               	clrf	i1___awmod@sign
  3566  040A                     i1l1535:
  3567  040A  1FF3               	btfss	i1___awmod@dividend+1,7
  3568  040B  2C0D               	goto	u129_21
  3569  040C  2C0E               	goto	u129_20
  3570  040D                     u129_21:
  3571  040D  2C15               	goto	i1l1541
  3572  040E                     u129_20:
  3573  040E                     i1l1537:
  3574  040E  09F2               	comf	i1___awmod@dividend,f
  3575  040F  09F3               	comf	i1___awmod@dividend+1,f
  3576  0410  0AF2               	incf	i1___awmod@dividend,f
  3577  0411  1903               	skipnz
  3578  0412  0AF3               	incf	i1___awmod@dividend+1,f
  3579  0413                     i1l1539:
  3580  0413  01F5               	clrf	i1___awmod@sign
  3581  0414  0AF5               	incf	i1___awmod@sign,f
  3582  0415                     i1l1541:
  3583  0415  1FF1               	btfss	i1___awmod@divisor+1,7
  3584  0416  2C18               	goto	u130_21
  3585  0417  2C19               	goto	u130_20
  3586  0418                     u130_21:
  3587  0418  2C1E               	goto	i1l1545
  3588  0419                     u130_20:
  3589  0419                     i1l1543:
  3590  0419  09F0               	comf	i1___awmod@divisor,f
  3591  041A  09F1               	comf	i1___awmod@divisor+1,f
  3592  041B  0AF0               	incf	i1___awmod@divisor,f
  3593  041C  1903               	skipnz
  3594  041D  0AF1               	incf	i1___awmod@divisor+1,f
  3595  041E                     i1l1545:
  3596  041E  0870               	movf	i1___awmod@divisor,w
  3597  041F  0471               	iorwf	i1___awmod@divisor+1,w
  3598  0420  1903               	btfsc	3,2
  3599  0421  2C23               	goto	u131_21
  3600  0422  2C24               	goto	u131_20
  3601  0423                     u131_21:
  3602  0423  2C53               	goto	i1l1563
  3603  0424                     u131_20:
  3604  0424                     i1l1547:
  3605  0424  01F4               	clrf	i1___awmod@counter
  3606  0425  0AF4               	incf	i1___awmod@counter,f
  3607  0426  2C32               	goto	i1l1553
  3608  0427                     i1l1549:
  3609  0427  3001               	movlw	1
  3610  0428                     u132_25:
  3611  0428  1003               	clrc
  3612  0429  0DF0               	rlf	i1___awmod@divisor,f
  3613  042A  0DF1               	rlf	i1___awmod@divisor+1,f
  3614  042B  3EFF               	addlw	-1
  3615  042C  1D03               	skipz
  3616  042D  2C28               	goto	u132_25
  3617  042E                     i1l1551:
  3618  042E  3001               	movlw	1
  3619  042F  00FF               	movwf	btemp+1
  3620  0430  087F               	movf	btemp+1,w
  3621  0431  07F4               	addwf	i1___awmod@counter,f
  3622  0432                     i1l1553:
  3623  0432  1FF1               	btfss	i1___awmod@divisor+1,7
  3624  0433  2C35               	goto	u133_21
  3625  0434  2C36               	goto	u133_20
  3626  0435                     u133_21:
  3627  0435  2C27               	goto	i1l1549
  3628  0436                     u133_20:
  3629  0436                     i1l1555:
  3630  0436  0871               	movf	i1___awmod@divisor+1,w
  3631  0437  0273               	subwf	i1___awmod@dividend+1,w
  3632  0438  1D03               	skipz
  3633  0439  2C3C               	goto	u134_25
  3634  043A  0870               	movf	i1___awmod@divisor,w
  3635  043B  0272               	subwf	i1___awmod@dividend,w
  3636  043C                     u134_25:
  3637  043C  1C03               	skipc
  3638  043D  2C3F               	goto	u134_21
  3639  043E  2C40               	goto	u134_20
  3640  043F                     u134_21:
  3641  043F  2C46               	goto	i1l1559
  3642  0440                     u134_20:
  3643  0440                     i1l1557:
  3644  0440  0870               	movf	i1___awmod@divisor,w
  3645  0441  02F2               	subwf	i1___awmod@dividend,f
  3646  0442  0871               	movf	i1___awmod@divisor+1,w
  3647  0443  1C03               	skipc
  3648  0444  03F3               	decf	i1___awmod@dividend+1,f
  3649  0445  02F3               	subwf	i1___awmod@dividend+1,f
  3650  0446                     i1l1559:
  3651  0446  3001               	movlw	1
  3652  0447                     u135_25:
  3653  0447  1003               	clrc
  3654  0448  0CF1               	rrf	i1___awmod@divisor+1,f
  3655  0449  0CF0               	rrf	i1___awmod@divisor,f
  3656  044A  3EFF               	addlw	-1
  3657  044B  1D03               	skipz
  3658  044C  2C47               	goto	u135_25
  3659  044D                     i1l1561:
  3660  044D  3001               	movlw	1
  3661  044E  02F4               	subwf	i1___awmod@counter,f
  3662  044F  1D03               	btfss	3,2
  3663  0450  2C52               	goto	u136_21
  3664  0451  2C53               	goto	u136_20
  3665  0452                     u136_21:
  3666  0452  2C36               	goto	i1l1555
  3667  0453                     u136_20:
  3668  0453                     i1l1563:
  3669  0453  0875               	movf	i1___awmod@sign,w
  3670  0454  1903               	btfsc	3,2
  3671  0455  2C57               	goto	u137_21
  3672  0456  2C58               	goto	u137_20
  3673  0457                     u137_21:
  3674  0457  2C5D               	goto	i1l1567
  3675  0458                     u137_20:
  3676  0458                     i1l1565:
  3677  0458  09F2               	comf	i1___awmod@dividend,f
  3678  0459  09F3               	comf	i1___awmod@dividend+1,f
  3679  045A  0AF2               	incf	i1___awmod@dividend,f
  3680  045B  1903               	skipnz
  3681  045C  0AF3               	incf	i1___awmod@dividend+1,f
  3682  045D                     i1l1567:
  3683  045D  0873               	movf	i1___awmod@dividend+1,w
  3684  045E  00F1               	movwf	?i1___awmod+1
  3685  045F  0872               	movf	i1___awmod@dividend,w
  3686  0460  00F0               	movwf	?i1___awmod
  3687  0461                     i1l465:
  3688  0461  0008               	return
  3689  0462                     __end_ofi1___awmod:
  3690  007E                     btemp	set	126	;btemp
  3691  007E                     wtemp0	set	126
  3692                           
  3693                           	psect	config
  3694                           
  3695                           ;Config register CONFIG @ 0x2007
  3696                           ;	Oscillator Selection bits
  3697                           ;	FOSC = HS, HS oscillator
  3698                           ;	Watchdog Timer Enable bit
  3699                           ;	WDTE = OFF, WDT disabled
  3700                           ;	Power-up Timer Enable bit
  3701                           ;	PWRTE = ON, PWRT enabled
  3702                           ;	Brown-out Reset Enable bit
  3703                           ;	BOREN = ON, BOR enabled
  3704                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  3705                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  3706                           ;	Data EEPROM Memory Code Protection bit
  3707                           ;	CPD = OFF, Data EEPROM code protection off
  3708                           ;	Flash Program Memory Write Enable bits
  3709                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  3710                           ;	In-Circuit Debugger Mode bit
  3711                           ;	DEBUG = 0x1, unprogrammed default
  3712                           ;	Flash Program Memory Code Protection bit
  3713                           ;	CP = OFF, Code protection off
  3714  2007                     	org	8199
  3715  2007  3F72               	dw	16242

Data Sizes:
    Strings     19
    Constant    0
    Data        62
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      10
    BANK0            80     27      78
    BANK1            80      0      16
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 16
		 -> STR_2(CODE[13]), idea_humi(BANK1[16]), idea_temp(BANK0[16]), STR_1(CODE[6]), 
		 -> humi(BANK0[14]), temp(BANK0[14]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->i1___awmod

Critical Paths under _main in BANK0

    _main->_DhtUpdateData
    _setPumpValue->___bmul
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit
    _DhtUpdateData->___awdiv
    ___awdiv->_ADC_Read

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    5669
                                             24 BANK0      3     3      0
                           _ADC_Init
                           _ADC_Read
                      _DhtUpdateData
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                            ___awdiv
                          _configPWM
                             _setPWM
                       _setPumpValue
 ---------------------------------------------------------------------------------
 (1) _setPumpValue                                         3     2      1     475
                                              3 BANK0      3     2      1
                             ___bmul
                             _setPWM
 ---------------------------------------------------------------------------------
 (2) _setPWM                                               2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     244
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _configPWM                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            4     4      0     244
                                              4 BANK0      4     4      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     836
                                              4 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     7     5      2     816
                                              9 BANK0      7     5      2
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       8     8      0     270
                                              1 BANK0      8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DhtUpdateData                                       10    10      0    1875
                                             14 BANK0     10    10      0
                   _DhtCheckResponse
                        _DhtReadData
                     _DhtStartSignal
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     700
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4    1060
                                              6 BANK0      8     4      4
                           _ADC_Read (ARG)
 ---------------------------------------------------------------------------------
 (2) _DhtStartSignal                                       2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DhtReadData                                          4     4      0     115
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (2) _DhtCheckResponse                                     2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             6     4      2     209
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  3     3      0     348
                                              6 COMMON     3     3      0
                          i1___awmod
 ---------------------------------------------------------------------------------
 (5) i1___awmod                                            6     2      4     348
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _DhtUpdateData
     _DhtCheckResponse
     _DhtReadData
     _DhtStartSignal
     ___awdiv
       _ADC_Read (ARG)
     ___awmod
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit
   ___awdiv
     _ADC_Read (ARG)
   _configPWM
   _setPWM
   _setPumpValue
     ___bmul
     _setPWM

 _ISR (ROOT)
   i1___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      10       7       20.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1B      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      68      12        0.0%
ABS                  0      0      68       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Jun 20 14:07:11 2020

                         pc 0002              ___bmul@product 004E                          l81 0642  
                        l73 062C                          l74 062D                          l75 0633  
                        l76 0634                          l84 067C                          l77 063A  
                        l93 04B9                          l78 063B                          l79 0641  
                        l87 06ED                          l98 0408                ___awdiv@sign 0058  
                        fsr 0004                         l101 0315                         l102 032B  
                       l103 033B                         l111 04FF                         l104 0351  
                       l105 0354                         l140 05D4                         l213 0580  
                       l128 0660                         l160 06D0                         l153 0544  
                       l163 0695                         l172 02F1                         l173 02E1  
                       l157 0224                         l325 06AC                         l166 06F6  
                       l169 02A6                         l452 028D                         l465 03AF  
                       _GIE 005F                         _RB4 0034                         _RD1 0041  
                       _RD2 0042                         _RD3 0043                         _RD4 0044  
                       _RD5 0045                         _RD6 0046                         _RD7 0047  
                       _PR2 0092                         _ISR 05D5                         u800 05C8  
                       u720 062A                         u801 05C7                         u721 0629  
                       u810 05D4                         u730 0631                         u811 05D3  
                       u731 0630                         u820 0510                         u740 0638  
                       u900 06AB                         u821 050F                         u741 0637  
                       u901 06AA                         u830 0524                         u910 022C  
                       u750 063F                         u831 0523                         u911 022B  
                       u751 063E                         u840 0539                         u920 0237  
                       u841 0538                         u921 0236                         u850 0543  
                       u930 0248                         u770 032B                         u851 0542  
                       u931 0247                         u771 032A                         u780 0351  
                       u860 0687                         u781 0350                         u765 0303  
                       u861 0683                         u790 05BC                         u950 025A  
                       u791 05BB                         u951 0259                         u775 0327  
                       u945 024C                         u785 034D                         u970 026B  
                       u890 069E                         u874 068A                         u971 026A  
                       u891 069D                         u965 025B                         u885 068E  
                       u990 027F                         u991 027E                         u975 0267  
                       u985 0273                         fsr0 0004                         indf 0000  
              ___awmod@sign 0052                        ?_ISR 0070                        l1301 0539  
                      l1221 0638                        l1303 053D                        l1223 063F  
                      l1215 0626                        l1231 066E                        l1311 068B  
                      l1305 0543                        l1401 039B                        l1217 062A  
                      l1233 0679                        l1225 0664                        l1241 030E  
                      l1321 06A4                        l1313 0699                        l1331 0228  
                      l1403 03A1                        l1219 0631                        l1227 0665  
                      l1411 06E1                        l1251 031E                        l1243 0311  
                      l1235 02F5                        l1323 06A6                        l1315 069A  
                      l1341 023C                        l1333 022C                        l1405 03A6  
                      l1229 066B                        l1253 032E                        l1237 02FF  
                      l1421 0486                        l1413 0465                        l1501 06CC  
                      l1325 06AB                        l1317 069E                        l1309 0680  
                      l1503 06EE                        l1271 0654                        l1351 0252  
                      l1343 0240                        l1335 0231                        l1407 03AB  
                      l1263 033C                        l1255 0334                        l1239 0300  
                      l1431 04B1                        l1415 046A                        l1423 048F  
                      l1319 06A2                        l1513 02B2                        l1505 028E  
                      l1281 05C8                        l1273 065D                        l1361 0272  
                      l1353 0256                        l1345 0242                        l1337 0233  
                      l1329 0225                        l1265 0344                        l1257 0337  
                      l1249 0316                        l1425 0495                        l1417 047B  
                      l1433 03B0                        l1521 0548                        l1601 00AF  
                      l1515 02DE                        l1507 0294                        l1275 05AE  
                      l1291 0510                        l1283 0500                        l1267 0643  
                      l1363 0279                        l1355 025A                        l1347 0248  
                      l1339 0237                        l1427 04A6                        l1419 0480  
                      l1451 03D8                        l1435 03B6                        l1531 057A  
                      l1523 0558                        l1611 00ED                        l1603 00BA  
                      l1517 02E5                        l1509 02A1                        l1277 05AE  
                      l1293 0516                        l1269 0649                        l1357 026B  
                      l1349 024B                        l1365 027F                        l1381 0363  
                      l1373 0355                        l1429 04AB                        l1461 03F6  
                      l1453 03DE                        l1445 03B6                        l1437 03B6  
                      l1525 055D                        l1605 00D0                        l1613 010E  
                      l1279 05BC                        l1295 0524                        l1367 0284  
                      l1359 0271                        l1391 037C                        l1383 0367  
                      l1375 0358                        l1471 04DB                        l1463 03FC  
                      l1455 03E4                        l1447 03BC                        l1527 0563  
                      l1615 0116                        l1607 00D8                        l1297 0527  
                      l1289 0504                        l1369 0289                        l1393 0380  
                      l1385 036C                        l1377 035C                        l1481 0151  
                      l1473 04E3                        l1465 0402                        l1457 03EA  
                      l1449 03C7                        l1529 0573                        l1617 0120  
                      l1609 00E3                        l1299 052D                        l1395 0384  
                      l1387 0372                        l1379 0361                        l1491 0221  
                      l1483 015B                        l1475 0133                        l1467 04BA  
                      l1459 03F0                        l1571 003E                        l1397 038E  
                      l1389 0375                        l1485 0165                        l1477 013D  
                      l1469 04BF                        l1581 0051                        l1573 0043  
                      l1399 0394                        l1495 0223                        l1487 016F  
                      l1479 0147                        l1591 0075                        l1583 0056  
                      l1575 0044                        l1489 0197                        l1593 0080  
                      l1585 005B                        l1577 0047                        l1499 06C0  
                      l1595 0096                        l1587 0062                        l1579 004C  
                      l1589 006B                        l1597 00A2                        l1599 00A7  
                      _CHS0 00FB                        _CHS1 00FC                        _CHS2 00FD  
                      STR_1 061D                        STR_2 0610                        u1000 0284  
                      u1001 0283                        u1010 035C                        u1011 035B  
                      u1020 0367                        u1100 046A                        u1021 0366  
                      u1101 0469                        u1030 0372                        u1031 0371  
                      u1200 02AF                        u1120 0495                        u1201 02AB  
                      u1121 0494                        u1050 0384                        u1051 0383  
                      u1115 0472                        u1220 02C0                        u1060 038E  
                      u1140 04C9                        u1221 02BC                        u1061 038D  
                      u1045 0376                        u1214 02B2                        u1150 04ED  
                      u1135 049D                        u1240 02D4                        u1080 03A1  
                      u1160 04FF                        u1400 00A7                        u1241 02D0  
                      u1081 03A0                        u1065 038A                        u1161 04FE  
                      u1401 00A6                        u1234 02C3                        u1090 03A6  
                      u1170 0197                        u1410 0116                        u1091 03A5  
                      u1075 0395                        u1171 0196                        u1411 0115  
                      u1260 02E5                        u1180 0294                        u1261 02E4  
                      u1181 0293                        u1254 02D7                        u1190 02A1  
                      u1270 055D                        u1191 02A0                        u1175 0193  
                      u1271 055C                        u1280 0563                        u1281 0562  
                      u1507 02DB                        u1195 029D                        u1380 0062  
                      u1437 0128                        u1381 0061                        u1390 006B  
                      u1447 03C2                        u1391 006A                        u1457 03D3  
                      u1467 0674                        u1477 064F                        u1487 065B  
                      u1497 0514                        _INTE 005C                        _INTF 0059  
                      _main 003E                        _humi 0031                        _temp 003F  
                      btemp 007E            __end_of_ADC_Init 06F7            __end_of_ADC_Read 02F2  
                      start 0010          Lcd_Print_Char@i_90 0054          Lcd_Print_Char@data 0051  
           __end_of_Lcd_Cmd 067D           ___bmul@multiplier 004F                       ??_ISR 0076  
                _Lcd_SetBit 0623                       ?_main 0070                       _CCP1X 00BD  
                     _CCP1Y 00BC             __end_of___awdiv 028E             __end_of___awmod 03B0  
          _DhtCheckResponse 05AE             ___awdiv@divisor 0053                       i1l206 05F0  
                     i1l465 0461             ___awdiv@counter 0057     __size_of_Lcd_Set_Cursor 0058  
                     _TRISD 0088       __end_of_DhtUpdateData 0225              i1___awmod@sign 0075  
                     _ihumi 0020                       _itemp 0079                       pclath 000A  
 __size_of_Lcd_Print_String 0046                 _DhtReadData 0500                       status 0003  
                     wtemp0 007E          __size_ofi1___awmod 0059     __size_of_Lcd_Print_Char 0063  
           __initialization 0013                __end_of_main 0133                      ??_main 0065  
        __size_of_Lcd_Clear 000D          __size_of_Lcd_Start 0059              _DhtStartSignal 0643  
                    _ADCON0 001F                      _ADCON1 009F                      _CCP1M2 00BA  
                    _CCP1M3 00BB                      _ADRESH 001E                      _ADRESL 009E  
                    _CCPR1L 0015            ___awdiv@dividend 0055                      i1l1541 0415  
                    i1l1533 0409                      i1l1621 05D9                      i1l1551 042E  
                    i1l1543 0419                      i1l1535 040A                      i1l1623 05EF  
                    i1l1561 044D                      i1l1553 0432                      i1l1545 041E  
                    i1l1537 040E                      i1l1555 0436                      i1l1547 0424  
                    i1l1563 0453                      i1l1539 0413                      i1l1619 05D5  
                    i1l1565 0458                      i1l1557 0440                      i1l1549 0427  
                    i1l1567 045D                      i1l1559 0446                      u130_20 0419  
                    u130_21 0418                      u131_20 0424                      u131_21 0423  
                    u132_25 0428                      u133_20 0436                      u133_21 0435  
                    u134_20 0440                      u142_20 05D9                      u134_21 043F  
                    u142_21 05D8                      _INTEDG 040E                      u134_25 043C  
                    u135_25 0447                      u136_20 0453                      u136_21 0452  
                    u137_20 0458                      u129_20 040E                      u137_21 0457  
                    u129_21 040D                   ??_Lcd_Cmd 004E                      _TMR2ON 0092  
                    _TRISB4 0434                      _TRISC2 043A                      ___bmul 0696  
                 ??___awdiv 0057                   ??___awmod 0051                 ?_Lcd_SetBit 0070  
                    _setPWM 067D            ___awdiv@quotient 0059             ___awmod@divisor 004D  
           ___awmod@counter 0051                      _status 0068           __end_ofi1___awmod 0462  
    __end_of_DhtStartSignal 0661                __pdataCOMMON 0079                   ?_ADC_Init 0070  
                 ?_ADC_Read 004D                      saved_w 007E             Lcd_Set_Cursor@a 0053  
           Lcd_Set_Cursor@b 0051             Lcd_Set_Cursor@y 0055             Lcd_Set_Cursor@z 0054  
   __end_of__initialization 003A           __end_of_Lcd_Clear 06EE           __end_of_Lcd_Start 0409  
       ___bmul@multiplicand 004D              __pcstackCOMMON 0070                __pidataBANK0 0581  
              __pidataBANK1 06D1           setPumpValue@delta 0052           setPumpValue@id_rh 0050  
            _Lcd_Set_Cursor 0462             ?_DhtStartSignal 0070                  ??_ADC_Init 004D  
                ??_ADC_Read 004F          __size_of_configPWM 0011                  __pbssBANK0 0068  
          _Lcd_Print_String 04BA         __size_of_Lcd_SetBit 0020    __end_of_DhtCheckResponse 05D5  
            _Lcd_Print_Char 02F2                  __pmaintext 003E         ADC_Read@ADC_channel 004D  
                   ?___bmul 004D                  __pintentry 0004                     ?_setPWM 0070  
        Lcd_SetBit@data_bit 004D      __end_of_Lcd_Set_Cursor 04BA                     _T2CKPS0 0090  
                   _T2CKPS1 0091               ?_setPumpValue 0050                     _GO_DONE 00FA  
                __stringtab 0600             Lcd_Print_Char@i 0052                     _Lcd_Cmd 0661  
    __end_of_Lcd_Print_Char 0355                ?_DhtReadData 0070           __end_of_configPWM 06D1  
           __size_of___bmul 0017                     ___awdiv 0225                     ___awmod 0355  
           __size_of_setPWM 0019             ?_Lcd_Set_Cursor 0051                     __ptext1 0545  
                   __ptext2 067D                     __ptext3 0696                     __ptext4 06C0  
                   __ptext5 03B0                     __ptext6 0462                     __ptext7 04BA  
                   __ptext8 02F2                     __ptext9 06E1              ??_setPumpValue 0051  
              __size_of_ISR 0024            ___awmod@dividend 004F                     _t_byte1 006D  
                   _t_byte2 006C        end_of_initialization 003A             ?_Lcd_Print_Char 0070  
    __size_of_DhtUpdateData 00F2                ??_Lcd_SetBit 004D                   i1___awmod 0409  
         __size_of_ADC_Init 0009           __size_of_ADC_Read 0064          __end_of_Lcd_SetBit 0643  
                 _Lcd_Clear 06E1                   _Lcd_Start 03B0              __end_of___bmul 06AD  
          ??_DhtStartSignal 004D               __pidataCOMMON 06F7    __end_of_Lcd_Print_String 0500  
            __end_of_setPWM 0696         start_initialization 0013                 __end_of_ISR 05F9  
                ?i1___awmod 0070               _DhtUpdateData 0133           Lcd_Print_String@a 0056  
         Lcd_Print_String@i 005B           ?_DhtCheckResponse 0070        __end_of_setPumpValue 0581  
      __size_of_DhtReadData 0045          ??_DhtCheckResponse 004D                  ?_Lcd_Clear 0070  
                  ??___bmul 004E                  init_fetch0 06AD                  ?_Lcd_Start 0070  
              DhtReadData@i 004F                 __pdataBANK0 0020                 __pdataBANK1 00A0  
        i1___awmod@dividend 0072                    ??_setPWM 004D  Lcd_Print_Char@Lower_Nibble 004F  
            ADC_Read@result 0051                   ___latbits 0002               __pcstackBANK0 004D  
            ?_DhtUpdateData 0070            setPumpValue@r_rh 0051                    ?_Lcd_Cmd 0070  
                 _check_sum 0069            ??_Lcd_Set_Cursor 0052                   _idea_humi 00A0  
                 _idea_temp 0021                    ?___awdiv 0053                    ?___awmod 004D  
                 _configPWM 06C0                   __pstrings 0600                    _ADC_Init 06EE  
                  _ADC_Read 028E                 ??i1___awmod 0074            ??_Lcd_Print_Char 004E  
         interrupt_function 0004                    Lcd_Cmd@a 0050                 ??_Lcd_Clear 0051  
               ??_Lcd_Start 0051                  ?_configPWM 0070                 __stringbase 060F  
           ??_DhtUpdateData 005B       __size_of_setPumpValue 003C            __size_of_Lcd_Cmd 001C  
         i1___awmod@divisor 0070           i1___awmod@counter 0074            __size_of___awdiv 0069  
          __size_of___awmod 005B          __end_of__stringtab 0610           ?_Lcd_Print_String 0056  
              _setPumpValue 0545          ??_Lcd_Print_String 0058                    __ptext10 0661  
                  __ptext11 0623                    __ptext20 05D5                    __ptext12 0133  
                  __ptext21 0409                    __ptext13 0355                    __ptext14 0225  
                  __ptext15 0643                    __ptext16 0500                    __ptext17 05AE  
                  __ptext18 028E                    __ptext19 06EE               __size_of_main 00F5  
                  _rh_byte1 006B                    _rh_byte2 006A  Lcd_Print_Char@Upper_Nibble 0050  
               ??_configPWM 004D             DhtReadData@data 0050   __size_of_DhtCheckResponse 0027  
                  init_ram0 06B1                    setPWM@DC 004E                    intlevel1 0000  
             ??_DhtReadData 004D                   stringcode 060A          Lcd_Set_Cursor@temp 0056  
                  stringdir 060A                    stringtab 0600     __size_of_DhtStartSignal 001E  
       __end_of_DhtReadData 0545  
